/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <bonobo.h>
#include <gnome.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

static GnomeUIInfo filemenu_menu_uiinfo[] =
{
  GNOMEUIINFO_MENU_NEW_ITEM (N_("_New..."), N_("Start a new story"), on_new_activate, NULL),
  GNOMEUIINFO_MENU_OPEN_ITEM (on_open_activate, NULL),
  {
    GNOME_APP_UI_ITEM, N_("O_pen Recent"),
    N_("Open a recently opened file"),
    (gpointer) NULL, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("_Install Extension..."),
    N_("Install an extension for use in Inform projects"),
    (gpointer) on_install_extension_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("Open _Extension"),
    N_("Open an existing extension"),
    (gpointer) NULL, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_CLOSE_ITEM (on_close_activate, NULL),
  GNOMEUIINFO_MENU_SAVE_ITEM (on_save_activate, NULL),
  GNOMEUIINFO_MENU_SAVE_AS_ITEM (on_save_as_activate, NULL),
  GNOMEUIINFO_MENU_REVERT_ITEM (on_revert_activate, NULL),
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_EXIT_ITEM (on_quit_activate, NULL),
  GNOMEUIINFO_END
};

static GnomeUIInfo spelling_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_TOGGLEITEM, N_("_Autocheck Spelling"),
    N_("Automatically underline misspelled words in the story"),
    (gpointer) on_autocheck_spelling_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Recheck Document"),
    N_("Spellcheck the entire story now"),
    (gpointer) on_check_spelling_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-spell-check",
    GDK_F7, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_END
};

static GnomeUIInfo edit_menu_uiinfo[] =
{
  GNOMEUIINFO_MENU_UNDO_ITEM (on_undo_activate, NULL),
  GNOMEUIINFO_MENU_REDO_ITEM (on_redo_activate, NULL),
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_CUT_ITEM (on_cut_activate, NULL),
  GNOMEUIINFO_MENU_COPY_ITEM (on_copy_activate, NULL),
  GNOMEUIINFO_MENU_PASTE_ITEM (on_paste_activate, NULL),
  GNOMEUIINFO_MENU_SELECT_ALL_ITEM (on_select_all_activate, NULL),
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_FIND_ITEM (on_find_activate, NULL),
  {
    GNOME_APP_UI_SUBTREE, N_("_Spelling"),
    NULL,
    spelling_menu_uiinfo, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-spell-check",
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_PREFERENCES_ITEM (on_preferences_activate, NULL),
  GNOMEUIINFO_END
};

static GnomeUIInfo format_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("Shift Selection _Right"),
    N_("Insert a tab before each line of the selection"),
    (gpointer) on_shift_selection_right_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_bracketright, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("Shift Selection _Left"),
    N_("Remove a tab from each line of the selection"),
    (gpointer) on_shift_selection_left_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_bracketleft, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Comment Out Selection"),
    NULL,
    (gpointer) on_comment_out_selection_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_slash, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Uncomment Selection"),
    NULL,
    (gpointer) on_uncomment_selection_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_slash, (GdkModifierType) GDK_CONTROL_MASK | GDK_SHIFT_MASK, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("Renumber _All Sections"),
    N_("Automatically number all the sections in the story"),
    (gpointer) on_renumber_all_sections_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_END
};

static GnomeUIInfo play_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("_Go"),
    N_("Compile and run the story"),
    (gpointer) on_go_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-go-forward",
    GDK_R, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Test Me"),
    NULL,
    (gpointer) on_test_me_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_R, (GdkModifierType) GDK_CONTROL_MASK | GDK_MOD1_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Stop"),
    N_("Stop the story that's currently running"),
    (gpointer) on_stop_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-stop",
    GDK_Q, (GdkModifierType) GDK_CONTROL_MASK | GDK_SHIFT_MASK, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("Refresh _Index"),
    N_("Recompile the index files and display them"),
    (gpointer) on_refresh_index_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-convert",
    GDK_I, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  GNOMEUIINFO_END
};

static GnomeUIInfo replay_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("_Replay"),
    N_("Compile the story, and re-run to the previously active play point"),
    (gpointer) on_replay_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-refresh",
    GDK_R, (GdkModifierType) GDK_CONTROL_MASK | GDK_SHIFT_MASK | GDK_MOD1_MASK, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("Show Last Command in _Skein"),
    NULL,
    (gpointer) on_show_last_command_in_skein_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_L, (GdkModifierType) GDK_CONTROL_MASK | GDK_SHIFT_MASK, NULL
  },
  GNOMEUIINFO_END
};

static GnomeUIInfo release_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("R_elease"),
    N_("Compile the story ready for release (with all debugging features turned off) and save the result"),
    (gpointer) on_release_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-cdrom",
    GDK_R, (GdkModifierType) GDK_CONTROL_MASK | GDK_SHIFT_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("Release for _Testing..."),
    N_("Compile the story in debug mode and save the result"),
    (gpointer) on_save_debug_build_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("Open _Materials Folder"),
    NULL,
    (gpointer) on_open_materials_folder_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_M, (GdkModifierType) GDK_CONTROL_MASK | GDK_MOD1_MASK, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("Export _iFiction Record..."),
    NULL,
    (gpointer) on_export_ifiction_record_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_END
};

static GnomeUIInfo show_tabs_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("_Source"),
    N_("Show the Source tab"),
    (gpointer) on_show_source_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F1, (GdkModifierType) GDK_SHIFT_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Errors"),
    N_("Show the Errors tab"),
    (gpointer) on_show_errors_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F2, (GdkModifierType) GDK_SHIFT_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Index"),
    N_("Show the Index tab"),
    (gpointer) on_show_index_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F3, (GdkModifierType) GDK_SHIFT_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("S_kein"),
    N_("Show the Skein tab"),
    (gpointer) on_show_skein_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F4, (GdkModifierType) GDK_SHIFT_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Game"),
    N_("Show the Game tab"),
    (gpointer) on_show_game_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F6, (GdkModifierType) GDK_SHIFT_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Documentation"),
    N_("Show the Documentation tab"),
    (gpointer) on_show_documentation_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F7, (GdkModifierType) GDK_SHIFT_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("Setti_ngs"),
    N_("Show the Settings tab"),
    (gpointer) on_show_settings_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F8, (GdkModifierType) GDK_SHIFT_MASK, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("Switch _Panes"),
    N_("Switch the input cursor to the panel on the other side"),
    (gpointer) on_switch_sides_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F6, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("Ne_xt Sub Panel"),
    N_("Move to the next sub panel in this panel"),
    (gpointer) on_next_sub_panel_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F6, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  GNOMEUIINFO_END
};

static GnomeUIInfo show_index_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("_Actions"),
    N_("Show the Actions index"),
    (gpointer) on_show_actions_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_3, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Contents"),
    N_("Show the Contents index"),
    (gpointer) on_show_contents_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_4, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Kinds"),
    N_("Show the Kinds index"),
    (gpointer) on_show_kinds_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_5, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Phrasebook"),
    N_("Show the Phrasebook index"),
    (gpointer) on_show_phrasebook_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_6, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Rules"),
    N_("Show the Rules index"),
    (gpointer) on_show_rules_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_7, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Scenes"),
    N_("Show the Scenes index"),
    (gpointer) on_show_scenes_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_8, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_World"),
    N_("Show the World index"),
    (gpointer) on_show_world_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_9, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  GNOMEUIINFO_END
};

static GnomeUIInfo windows_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("Show _Inspectors"),
    N_("Show the inspectors toolbar"),
    (gpointer) on_show_inspectors_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-zoom-in",
    GDK_I, (GdkModifierType) GDK_CONTROL_MASK | GDK_MOD1_MASK, NULL
  },
  {
    GNOME_APP_UI_SUBTREE, N_("Show _Tabs"),
    NULL,
    show_tabs_menu_uiinfo, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_SUBTREE, N_("Show Inde_x"),
    NULL,
    show_index_menu_uiinfo, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_END
};

static GnomeUIInfo help_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("Inform _Help"),
    N_("Show the documentation index"),
    (gpointer) on_inform_help_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-help",
    GDK_F1, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_License"),
    N_("Show the licensing help page"),
    (gpointer) on_license_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("Suggest a _Feature..."),
    N_("Open the Inform 7 suggestions forum in the browser"),
    (gpointer) on_suggest_a_feature_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("Report a _Bug..."),
    N_("Open the Inform 7 bug tracker in the browser"),
    (gpointer) on_report_a_bug_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("Help on Installed _Extensions"),
    N_("Show the page listing installed extensions"),
    (gpointer) on_help_extensions_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F1, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Recipe Book"),
    N_("Show the recipe book listing all the examples"),
    (gpointer) on_recipe_book_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_F1, (GdkModifierType) GDK_MOD1_MASK, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("_Visit Inform7.com"),
    NULL,
    (gpointer) on_visit_inform7com_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_MENU_ABOUT_ITEM (on_about_activate, NULL),
  GNOMEUIINFO_END
};

static GnomeUIInfo menubar1_uiinfo[] =
{
  GNOMEUIINFO_MENU_FILE_TREE (filemenu_menu_uiinfo),
  GNOMEUIINFO_MENU_EDIT_TREE (edit_menu_uiinfo),
  {
    GNOME_APP_UI_SUBTREE, N_("Fo_rmat"),
    NULL,
    format_menu_uiinfo, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_SUBTREE, N_("_Play"),
    NULL,
    play_menu_uiinfo, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_SUBTREE, N_("Rep_lay"),
    NULL,
    replay_menu_uiinfo, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_SUBTREE, N_("Rele_ase"),
    NULL,
    release_menu_uiinfo, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_MENU_WINDOWS_TREE (windows_menu_uiinfo),
  GNOMEUIINFO_MENU_HELP_TREE (help_menu_uiinfo),
  GNOMEUIINFO_END
};

GtkWidget*
create_app_window (void)
{
  GtkWidget *app_window;
  GdkPixbuf *app_window_icon_pixbuf;
  GtkWidget *bonobodock1;
  GtkWidget *toolbar1;
  GtkIconSize tmp_toolbar_icon_size;
  GtkWidget *tmp_image;
  GtkWidget *go_toolbutton;
  GtkWidget *replay_toolbutton;
  GtkWidget *stop_toolbutton;
  GtkWidget *separatortoolitem1;
  GtkWidget *release_toolbutton;
  GtkWidget *separatortoolitem2;
  GtkWidget *separatortoolitem12;
  GtkWidget *toolitem3;
  GtkWidget *image12;
  GtkWidget *toolitem5;
  GtkWidget *docs_search;
  GtkWidget *separatortoolitem3;
  GtkWidget *help_toolbutton;
  GtkWidget *facingpages;
  GtkWidget *notebook_l;
  GtkWidget *vbox37;
  GtkWidget *toolbar2;
  GtkWidget *source_back_l;
  GtkWidget *source_forward_l;
  GtkWidget *separatortoolitem4;
  GtkWidget *source_headings_l;
  GtkWidget *scrolledwindow12;
  GtkWidget *source_l;
  GtkWidget *label8;
  GtkWidget *vbox39;
  GtkWidget *toolbar4;
  GtkWidget *errors_back_l;
  GtkWidget *errors_forward_l;
  GtkWidget *errors_notebook_l;
  GtkWidget *scrolledwindow2;
  GtkWidget *compiler_output_l;
  GtkWidget *label16;
  GtkWidget *scrolledwindow15;
  GtkWidget *problems_l;
  GtkWidget *label17;
  GtkWidget *debugging_page_l;
  GtkWidget *debugging_l;
  GtkWidget *label89;
  GtkWidget *inform6_page_l;
  GtkWidget *inform6_l;
  GtkWidget *label90;
  GtkWidget *label9;
  GtkWidget *vbox41;
  GtkWidget *toolbar6;
  GtkWidget *index_back_l;
  GtkWidget *index_forward_l;
  GtkWidget *index_notebook_l;
  GtkWidget *scrolledwindow16;
  GtkWidget *actions_l;
  GtkWidget *label18;
  GtkWidget *scrolledwindow17;
  GtkWidget *contents_l;
  GtkWidget *label19;
  GtkWidget *scrolledwindow18;
  GtkWidget *kinds_l;
  GtkWidget *label20;
  GtkWidget *scrolledwindow19;
  GtkWidget *phrasebook_l;
  GtkWidget *label21;
  GtkWidget *scrolledwindow20;
  GtkWidget *rules_l;
  GtkWidget *label22;
  GtkWidget *scrolledwindow21;
  GtkWidget *scenes_l;
  GtkWidget *label23;
  GtkWidget *scrolledwindow22;
  GtkWidget *world_l;
  GtkWidget *label24;
  GtkWidget *label10;
  GtkWidget *vbox3;
  GtkWidget *toolbar8;
  GtkWidget *skein_back_l;
  GtkWidget *skein_forward_l;
  GtkWidget *separatortoolitem6;
  GtkWidget *skein_labels_l;
  GtkWidget *skein_layout_l;
  GtkWidget *skein_trim_l;
  GtkWidget *skein_play_all_l;
  GtkWidget *skein_l_scroll;
  GtkWidget *skein_l;
  GtkWidget *label11;
  GtkWidget *vbox9;
  GtkWidget *toolbar10;
  GtkWidget *transcript_back_l;
  GtkWidget *transcript_forward_l;
  GtkWidget *separatortoolitem8;
  GtkWidget *transcript_bless_all_l;
  GtkWidget *scrolledwindow9;
  GtkWidget *treeview1;
  GtkWidget *label12;
  GtkWidget *vbox50;
  GtkWidget *toolbar12;
  GtkWidget *game_back_l;
  GtkWidget *game_forward_l;
  GtkWidget *scrolledwindow39;
  GtkWidget *game_viewport_l;
  GtkWidget *game_l;
  GtkWidget *label13;
  GtkWidget *vbox47;
  GtkWidget *toolbar14;
  GtkWidget *docs_back_l;
  GtkWidget *docs_forward_l;
  GtkWidget *separatortoolitem10;
  GtkWidget *docs_contents_l;
  GtkWidget *scrolledwindow46;
  GtkWidget *docs_l;
  GtkWidget *label14;
  GtkWidget *vbox4;
  GtkWidget *toolbar16;
  GtkWidget *settings_back_l;
  GtkWidget *settings_forward_l;
  GtkWidget *frame1;
  GtkWidget *alignment4;
  GtkWidget *vbox5;
  GtkWidget *label107;
  GtkWidget *z5_button_l;
  GSList *z5_button_l_group = NULL;
  GtkWidget *z6_button_l;
  GtkWidget *z8_button_l;
  GtkWidget *glulx_button_l;
  GtkWidget *label109;
  GtkWidget *blorb_button_l;
  GtkWidget *label25;
  GtkWidget *frame14;
  GtkWidget *alignment26;
  GtkWidget *vbox55;
  GtkWidget *label111;
  GtkWidget *random_button_l;
  GtkWidget *label105;
  GtkWidget *label15;
  GtkWidget *notebook_r;
  GtkWidget *vbox38;
  GtkWidget *toolbar3;
  GtkWidget *source_back_r;
  GtkWidget *source_forward_r;
  GtkWidget *separatortoolitem5;
  GtkWidget *source_headings_r;
  GtkWidget *scrolledwindow13;
  GtkWidget *source_r;
  GtkWidget *label26;
  GtkWidget *vbox40;
  GtkWidget *toolbar5;
  GtkWidget *errors_back_r;
  GtkWidget *errors_forward_r;
  GtkWidget *errors_notebook_r;
  GtkWidget *scrolledwindow5;
  GtkWidget *compiler_output_r;
  GtkWidget *label27;
  GtkWidget *scrolledwindow25;
  GtkWidget *problems_r;
  GtkWidget *label28;
  GtkWidget *debugging_page_r;
  GtkWidget *debugging_r;
  GtkWidget *label91;
  GtkWidget *inform6_page_r;
  GtkWidget *inform6_r;
  GtkWidget *label92;
  GtkWidget *label29;
  GtkWidget *vbox42;
  GtkWidget *toolbar7;
  GtkWidget *index_back_r;
  GtkWidget *index_forward_r;
  GtkWidget *index_notebook_r;
  GtkWidget *scrolledwindow26;
  GtkWidget *actions_r;
  GtkWidget *label30;
  GtkWidget *scrolledwindow27;
  GtkWidget *contents_r;
  GtkWidget *label31;
  GtkWidget *scrolledwindow28;
  GtkWidget *kinds_r;
  GtkWidget *label32;
  GtkWidget *scrolledwindow29;
  GtkWidget *phrasebook_r;
  GtkWidget *label33;
  GtkWidget *scrolledwindow30;
  GtkWidget *rules_r;
  GtkWidget *label34;
  GtkWidget *scrolledwindow31;
  GtkWidget *scenes_r;
  GtkWidget *label35;
  GtkWidget *scrolledwindow32;
  GtkWidget *world_r;
  GtkWidget *label36;
  GtkWidget *label37;
  GtkWidget *vbox6;
  GtkWidget *toolbar9;
  GtkWidget *skein_back_r;
  GtkWidget *skein_forward_r;
  GtkWidget *separatortoolitem7;
  GtkWidget *skein_labels_r;
  GtkWidget *skein_layout_r;
  GtkWidget *skein_trim_r;
  GtkWidget *skein_play_all_r;
  GtkWidget *skein_r_scroll;
  GtkWidget *skein_r;
  GtkWidget *label38;
  GtkWidget *vbox10;
  GtkWidget *toolbar11;
  GtkWidget *transcript_back_r;
  GtkWidget *transcript_forward_r;
  GtkWidget *separatortoolitem9;
  GtkWidget *transcript_bless_all_r;
  GtkWidget *scrolledwindow10;
  GtkWidget *treeview2;
  GtkWidget *label39;
  GtkWidget *vbox49;
  GtkWidget *toolbar13;
  GtkWidget *game_back_r;
  GtkWidget *game_forward_r;
  GtkWidget *scrolledwindow40;
  GtkWidget *game_viewport_r;
  GtkWidget *game_r;
  GtkWidget *label40;
  GtkWidget *vbox48;
  GtkWidget *toolbar15;
  GtkWidget *docs_back_r;
  GtkWidget *docs_forward_r;
  GtkWidget *separatortoolitem11;
  GtkWidget *docs_contents_r;
  GtkWidget *scrolledwindow47;
  GtkWidget *docs_r;
  GtkWidget *label41;
  GtkWidget *vbox7;
  GtkWidget *toolbar17;
  GtkWidget *settings_back_r;
  GtkWidget *settings_forward_r;
  GtkWidget *frame2;
  GtkWidget *alignment5;
  GtkWidget *vbox8;
  GtkWidget *label108;
  GtkWidget *z5_button_r;
  GSList *z5_button_r_group = NULL;
  GtkWidget *z6_button_r;
  GtkWidget *z8_button_r;
  GtkWidget *glulx_button_r;
  GtkWidget *label110;
  GtkWidget *blorb_button_r;
  GtkWidget *label42;
  GtkWidget *frame15;
  GtkWidget *alignment27;
  GtkWidget *vbox56;
  GtkWidget *label112;
  GtkWidget *random_button_r;
  GtkWidget *label106;
  GtkWidget *label43;
  GtkWidget *main_appbar;
  GtkTooltips *tooltips;

  tooltips = gtk_tooltips_new ();

  app_window = gnome_app_new ("GNOME Inform 7", _("Inform"));
  gtk_widget_set_size_request (app_window, 200, 100);
  gtk_window_set_default_size (GTK_WINDOW (app_window), 1000, 750);
  app_window_icon_pixbuf = create_pixbuf ("gnome-inform7/Inform.png");
  if (app_window_icon_pixbuf)
    {
      gtk_window_set_icon (GTK_WINDOW (app_window), app_window_icon_pixbuf);
      gdk_pixbuf_unref (app_window_icon_pixbuf);
    }

  bonobodock1 = GNOME_APP (app_window)->dock;
  gtk_widget_show (bonobodock1);

  gnome_app_create_menus (GNOME_APP (app_window), menubar1_uiinfo);

  gtk_widget_set_sensitive (play_menu_uiinfo[2].widget, FALSE);

  toolbar1 = gtk_toolbar_new ();
  gtk_widget_show (toolbar1);
  gnome_app_add_toolbar (GNOME_APP (app_window), GTK_TOOLBAR (toolbar1), "toolbar1",
                                BONOBO_DOCK_ITEM_BEH_EXCLUSIVE
                                | BONOBO_DOCK_ITEM_BEH_LOCKED,
                                BONOBO_DOCK_TOP, 1, 0, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar1), GTK_TOOLBAR_BOTH);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar1));

  tmp_image = gtk_image_new_from_stock ("gtk-media-play", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  go_toolbutton = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Go"));
  gtk_widget_show (go_toolbutton);
  gtk_container_add (GTK_CONTAINER (toolbar1), go_toolbutton);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (go_toolbutton), tooltips, _("Compile and run the story"), NULL);

  tmp_image = gtk_image_new_from_stock ("gtk-refresh", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  replay_toolbutton = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Replay"));
  gtk_widget_show (replay_toolbutton);
  gtk_container_add (GTK_CONTAINER (toolbar1), replay_toolbutton);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (replay_toolbutton), tooltips, _("Compile the story, and re-run through the skein to the previously active play point"), NULL);

  stop_toolbutton = (GtkWidget*) gtk_tool_button_new_from_stock ("gtk-stop");
  gtk_widget_show (stop_toolbutton);
  gtk_container_add (GTK_CONTAINER (toolbar1), stop_toolbutton);
  gtk_widget_set_sensitive (stop_toolbutton, FALSE);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (stop_toolbutton), tooltips, _("Stop the story that's currently running"), NULL);

  separatortoolitem1 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem1);
  gtk_container_add (GTK_CONTAINER (toolbar1), separatortoolitem1);

  tmp_image = gtk_image_new_from_stock ("gtk-cdrom", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  release_toolbutton = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Release"));
  gtk_widget_show (release_toolbutton);
  gtk_container_add (GTK_CONTAINER (toolbar1), release_toolbutton);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (release_toolbutton), tooltips, _("Compile the story ready for release (with all debugging features turned off) and save the result"), NULL);

  separatortoolitem2 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem2);
  gtk_container_add (GTK_CONTAINER (toolbar1), separatortoolitem2);

  separatortoolitem12 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem12);
  gtk_tool_item_set_expand (GTK_TOOL_ITEM (separatortoolitem12), TRUE);
  gtk_container_add (GTK_CONTAINER (toolbar1), separatortoolitem12);
  gtk_separator_tool_item_set_draw (GTK_SEPARATOR_TOOL_ITEM (separatortoolitem12), FALSE);

  toolitem3 = (GtkWidget*) gtk_tool_item_new ();
  gtk_widget_show (toolitem3);
  gtk_container_add (GTK_CONTAINER (toolbar1), toolitem3);

  image12 = gtk_image_new_from_stock ("gtk-find", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image12);
  gtk_container_add (GTK_CONTAINER (toolitem3), image12);
  gtk_misc_set_alignment (GTK_MISC (image12), 1, 0.5);
  gtk_misc_set_padding (GTK_MISC (image12), 4, 0);

  toolitem5 = (GtkWidget*) gtk_tool_item_new ();
  gtk_widget_show (toolitem5);
  gtk_container_add (GTK_CONTAINER (toolbar1), toolitem5);

  docs_search = gtk_entry_new ();
  gtk_widget_show (docs_search);
  gtk_container_add (GTK_CONTAINER (toolitem5), docs_search);
  gtk_tooltips_set_tip (tooltips, docs_search, _("Search the documentation for a particular phrase"), NULL);
  gtk_entry_set_text (GTK_ENTRY (docs_search), _("Documentation"));
  gtk_entry_set_invisible_char (GTK_ENTRY (docs_search), 8226);

  separatortoolitem3 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem3);
  gtk_container_add (GTK_CONTAINER (toolbar1), separatortoolitem3);

  help_toolbutton = (GtkWidget*) gtk_tool_button_new_from_stock ("gtk-help");
  gtk_widget_show (help_toolbutton);
  gtk_container_add (GTK_CONTAINER (toolbar1), help_toolbutton);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (help_toolbutton), tooltips, _("Show the documentation index"), NULL);

  facingpages = gtk_hpaned_new ();
  gtk_widget_show (facingpages);
  gnome_app_set_contents (GNOME_APP (app_window), facingpages);

  notebook_l = gtk_notebook_new ();
  gtk_widget_show (notebook_l);
  gtk_paned_pack1 (GTK_PANED (facingpages), notebook_l, FALSE, TRUE);
  gtk_notebook_set_tab_pos (GTK_NOTEBOOK (notebook_l), GTK_POS_RIGHT);
  gtk_notebook_set_scrollable (GTK_NOTEBOOK (notebook_l), TRUE);
  gtk_notebook_popup_enable (GTK_NOTEBOOK (notebook_l));

  vbox37 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox37);
  gtk_container_add (GTK_CONTAINER (notebook_l), vbox37);

  toolbar2 = gtk_toolbar_new ();
  gtk_widget_show (toolbar2);
  gtk_box_pack_start (GTK_BOX (vbox37), toolbar2, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar2), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar2));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  source_back_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (source_back_l);
  gtk_container_add (GTK_CONTAINER (toolbar2), source_back_l);
  gtk_widget_set_sensitive (source_back_l, FALSE);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (source_back_l), TRUE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  source_forward_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (source_forward_l);
  gtk_container_add (GTK_CONTAINER (toolbar2), source_forward_l);
  gtk_widget_set_sensitive (source_forward_l, FALSE);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (source_forward_l), TRUE);

  separatortoolitem4 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem4);
  gtk_tool_item_set_expand (GTK_TOOL_ITEM (separatortoolitem4), TRUE);
  gtk_container_add (GTK_CONTAINER (toolbar2), separatortoolitem4);
  gtk_separator_tool_item_set_draw (GTK_SEPARATOR_TOOL_ITEM (separatortoolitem4), FALSE);

  tmp_image = gtk_image_new_from_stock ("gnome-stock-text-bulleted-list", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  source_headings_l = (GtkWidget*) gtk_menu_tool_button_new (tmp_image, _("Headings"));
  gtk_widget_show (source_headings_l);
  gtk_tool_item_set_homogeneous (GTK_TOOL_ITEM (source_headings_l), FALSE);
  gtk_container_add (GTK_CONTAINER (toolbar2), source_headings_l);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (source_headings_l), TRUE);

  scrolledwindow12 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow12);
  gtk_box_pack_start (GTK_BOX (vbox37), scrolledwindow12, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow12), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow12), GTK_SHADOW_IN);

  source_l = custom_gtk_source_view_create ("source_l", "", "", 0, 0);
  gtk_widget_show (source_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow12), source_l);
  GTK_WIDGET_SET_FLAGS (source_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (source_l, GTK_CAN_DEFAULT);

  label8 = gtk_label_new (_("Source"));
  gtk_widget_show (label8);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_l), 0), label8);
  gtk_label_set_angle (GTK_LABEL (label8), 270);

  vbox39 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox39);
  gtk_container_add (GTK_CONTAINER (notebook_l), vbox39);

  toolbar4 = gtk_toolbar_new ();
  gtk_widget_show (toolbar4);
  gtk_box_pack_start (GTK_BOX (vbox39), toolbar4, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar4), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar4));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  errors_back_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (errors_back_l);
  gtk_container_add (GTK_CONTAINER (toolbar4), errors_back_l);
  gtk_widget_set_sensitive (errors_back_l, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  errors_forward_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (errors_forward_l);
  gtk_container_add (GTK_CONTAINER (toolbar4), errors_forward_l);
  gtk_widget_set_sensitive (errors_forward_l, FALSE);

  errors_notebook_l = gtk_notebook_new ();
  gtk_widget_show (errors_notebook_l);
  gtk_box_pack_start (GTK_BOX (vbox39), errors_notebook_l, TRUE, TRUE, 0);
  gtk_notebook_set_scrollable (GTK_NOTEBOOK (errors_notebook_l), TRUE);
  gtk_notebook_popup_enable (GTK_NOTEBOOK (errors_notebook_l));

  scrolledwindow2 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow2);
  gtk_container_add (GTK_CONTAINER (errors_notebook_l), scrolledwindow2);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow2), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow2), GTK_SHADOW_IN);

  compiler_output_l = gtk_text_view_new ();
  gtk_widget_show (compiler_output_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow2), compiler_output_l);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (compiler_output_l), FALSE);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (compiler_output_l), GTK_WRAP_CHAR);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (compiler_output_l), FALSE);

  label16 = gtk_label_new (_("Progress"));
  gtk_widget_show (label16);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (errors_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (errors_notebook_l), 0), label16);

  scrolledwindow15 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow15);
  gtk_container_add (GTK_CONTAINER (errors_notebook_l), scrolledwindow15);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow15), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  problems_l = create_html ("problems_l", "", "", 0, 0);
  gtk_widget_show (problems_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow15), problems_l);
  GTK_WIDGET_SET_FLAGS (problems_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (problems_l, GTK_CAN_DEFAULT);

  label17 = gtk_label_new (_("Problems"));
  gtk_widget_show (label17);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (errors_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (errors_notebook_l), 1), label17);

  debugging_page_l = gtk_scrolled_window_new (NULL, NULL);
  gtk_container_add (GTK_CONTAINER (errors_notebook_l), debugging_page_l);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (debugging_page_l), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (debugging_page_l), GTK_SHADOW_IN);

  debugging_l = gtk_text_view_new ();
  gtk_widget_show (debugging_l);
  gtk_container_add (GTK_CONTAINER (debugging_page_l), debugging_l);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (debugging_l), FALSE);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (debugging_l), GTK_WRAP_CHAR);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (debugging_l), FALSE);

  label89 = gtk_label_new (_("Debugging"));
  gtk_widget_show (label89);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (errors_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (errors_notebook_l), 2), label89);

  inform6_page_l = gtk_scrolled_window_new (NULL, NULL);
  gtk_container_add (GTK_CONTAINER (errors_notebook_l), inform6_page_l);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (inform6_page_l), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  inform6_l = custom_gtk_source_view_create ("inform6_l", "", "", 0, 0);
  gtk_widget_show (inform6_l);
  gtk_container_add (GTK_CONTAINER (inform6_page_l), inform6_l);
  GTK_WIDGET_UNSET_FLAGS (inform6_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (inform6_l, GTK_CAN_DEFAULT);

  label90 = gtk_label_new (_("Inform 6"));
  gtk_widget_show (label90);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (errors_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (errors_notebook_l), 3), label90);

  label9 = gtk_label_new (_("Errors"));
  gtk_widget_show (label9);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_l), 1), label9);
  gtk_label_set_angle (GTK_LABEL (label9), 270);

  vbox41 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox41);
  gtk_container_add (GTK_CONTAINER (notebook_l), vbox41);

  toolbar6 = gtk_toolbar_new ();
  gtk_widget_show (toolbar6);
  gtk_box_pack_start (GTK_BOX (vbox41), toolbar6, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar6), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar6));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  index_back_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (index_back_l);
  gtk_container_add (GTK_CONTAINER (toolbar6), index_back_l);
  gtk_widget_set_sensitive (index_back_l, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  index_forward_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (index_forward_l);
  gtk_container_add (GTK_CONTAINER (toolbar6), index_forward_l);
  gtk_widget_set_sensitive (index_forward_l, FALSE);

  index_notebook_l = gtk_notebook_new ();
  gtk_widget_show (index_notebook_l);
  gtk_box_pack_start (GTK_BOX (vbox41), index_notebook_l, TRUE, TRUE, 0);
  gtk_notebook_set_scrollable (GTK_NOTEBOOK (index_notebook_l), TRUE);
  gtk_notebook_popup_enable (GTK_NOTEBOOK (index_notebook_l));

  scrolledwindow16 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow16);
  gtk_container_add (GTK_CONTAINER (index_notebook_l), scrolledwindow16);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow16), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  actions_l = create_html ("actions_l", "", "", 0, 0);
  gtk_widget_show (actions_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow16), actions_l);
  GTK_WIDGET_SET_FLAGS (actions_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (actions_l, GTK_CAN_DEFAULT);

  label18 = gtk_label_new (_("Actions"));
  gtk_widget_show (label18);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_l), 0), label18);

  scrolledwindow17 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow17);
  gtk_container_add (GTK_CONTAINER (index_notebook_l), scrolledwindow17);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow17), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  contents_l = create_html ("contents_l", "", "", 0, 0);
  gtk_widget_show (contents_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow17), contents_l);
  GTK_WIDGET_SET_FLAGS (contents_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (contents_l, GTK_CAN_DEFAULT);

  label19 = gtk_label_new (_("Contents"));
  gtk_widget_show (label19);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_l), 1), label19);

  scrolledwindow18 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow18);
  gtk_container_add (GTK_CONTAINER (index_notebook_l), scrolledwindow18);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow18), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  kinds_l = create_html ("kinds_l", "", "", 0, 0);
  gtk_widget_show (kinds_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow18), kinds_l);
  GTK_WIDGET_SET_FLAGS (kinds_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (kinds_l, GTK_CAN_DEFAULT);

  label20 = gtk_label_new (_("Kinds"));
  gtk_widget_show (label20);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_l), 2), label20);

  scrolledwindow19 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow19);
  gtk_container_add (GTK_CONTAINER (index_notebook_l), scrolledwindow19);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow19), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  phrasebook_l = create_html ("phrasebook_l", "", "", 0, 0);
  gtk_widget_show (phrasebook_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow19), phrasebook_l);
  GTK_WIDGET_SET_FLAGS (phrasebook_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (phrasebook_l, GTK_CAN_DEFAULT);

  label21 = gtk_label_new (_("Phrasebook"));
  gtk_widget_show (label21);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_l), 3), label21);

  scrolledwindow20 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow20);
  gtk_container_add (GTK_CONTAINER (index_notebook_l), scrolledwindow20);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow20), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  rules_l = create_html ("rules_l", "", "", 0, 0);
  gtk_widget_show (rules_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow20), rules_l);
  GTK_WIDGET_SET_FLAGS (rules_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (rules_l, GTK_CAN_DEFAULT);

  label22 = gtk_label_new (_("Rules"));
  gtk_widget_show (label22);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_l), 4), label22);

  scrolledwindow21 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow21);
  gtk_container_add (GTK_CONTAINER (index_notebook_l), scrolledwindow21);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow21), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  scenes_l = create_html ("scenes_l", "", "", 0, 0);
  gtk_widget_show (scenes_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow21), scenes_l);
  GTK_WIDGET_SET_FLAGS (scenes_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (scenes_l, GTK_CAN_DEFAULT);

  label23 = gtk_label_new (_("Scenes"));
  gtk_widget_show (label23);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_l), 5), label23);

  scrolledwindow22 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow22);
  gtk_container_add (GTK_CONTAINER (index_notebook_l), scrolledwindow22);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow22), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  world_l = create_html ("world_l", "", "", 0, 0);
  gtk_widget_show (world_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow22), world_l);
  GTK_WIDGET_SET_FLAGS (world_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (world_l, GTK_CAN_DEFAULT);

  label24 = gtk_label_new (_("World"));
  gtk_widget_show (label24);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_l), 6), label24);

  label10 = gtk_label_new (_("Index"));
  gtk_widget_show (label10);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_l), 2), label10);
  gtk_misc_set_alignment (GTK_MISC (label10), 0.5, 0.54);
  gtk_label_set_angle (GTK_LABEL (label10), 270);

  vbox3 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox3);
  gtk_container_add (GTK_CONTAINER (notebook_l), vbox3);

  toolbar8 = gtk_toolbar_new ();
  gtk_widget_show (toolbar8);
  gtk_box_pack_start (GTK_BOX (vbox3), toolbar8, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar8), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar8));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_back_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (skein_back_l);
  gtk_container_add (GTK_CONTAINER (toolbar8), skein_back_l);
  gtk_widget_set_sensitive (skein_back_l, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_forward_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (skein_forward_l);
  gtk_container_add (GTK_CONTAINER (toolbar8), skein_forward_l);
  gtk_widget_set_sensitive (skein_forward_l, FALSE);

  separatortoolitem6 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem6);
  gtk_tool_item_set_expand (GTK_TOOL_ITEM (separatortoolitem6), TRUE);
  gtk_container_add (GTK_CONTAINER (toolbar8), separatortoolitem6);
  gtk_separator_tool_item_set_draw (GTK_SEPARATOR_TOOL_ITEM (separatortoolitem6), FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-jump-to", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_labels_l = (GtkWidget*) gtk_menu_tool_button_new (tmp_image, _("Labels"));
  gtk_widget_show (skein_labels_l);
  gtk_tool_item_set_homogeneous (GTK_TOOL_ITEM (skein_labels_l), FALSE);
  gtk_container_add (GTK_CONTAINER (toolbar8), skein_labels_l);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (skein_labels_l), tooltips, _("Show a menu of the labelled knots: selecting a knot will go to it"), NULL);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (skein_labels_l), TRUE);

  tmp_image = gtk_image_new_from_stock ("gtk-preferences", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_layout_l = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Layout"));
  gtk_widget_show (skein_layout_l);
  gtk_container_add (GTK_CONTAINER (toolbar8), skein_layout_l);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (skein_layout_l), TRUE);

  tmp_image = gtk_image_new_from_stock ("gtk-cut", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_trim_l = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Trim"));
  gtk_widget_show (skein_trim_l);
  gtk_container_add (GTK_CONTAINER (toolbar8), skein_trim_l);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (skein_trim_l), tooltips, _("Remove all knots that have not been locked"), NULL);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (skein_trim_l), TRUE);

  tmp_image = gtk_image_new_from_stock ("gtk-media-play", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_play_all_l = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Play All"));
  gtk_container_add (GTK_CONTAINER (toolbar8), skein_play_all_l);
  gtk_widget_set_sensitive (skein_play_all_l, FALSE);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (skein_play_all_l), tooltips, _("Play all threads that lead to a blessed knot"), NULL);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (skein_play_all_l), TRUE);

  skein_l_scroll = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (skein_l_scroll);
  gtk_box_pack_start (GTK_BOX (vbox3), skein_l_scroll, TRUE, TRUE, 0);

  skein_l = gnome_canvas_new ();
  gtk_widget_show (skein_l);
  gtk_container_add (GTK_CONTAINER (skein_l_scroll), skein_l);
  gnome_canvas_set_scroll_region (GNOME_CANVAS (skein_l), 0, 0, 100, 100);

  label11 = gtk_label_new (_("Skein"));
  gtk_widget_show (label11);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_l), 3), label11);
  gtk_label_set_angle (GTK_LABEL (label11), 270);

  vbox9 = gtk_vbox_new (FALSE, 0);
  gtk_container_add (GTK_CONTAINER (notebook_l), vbox9);

  toolbar10 = gtk_toolbar_new ();
  gtk_widget_show (toolbar10);
  gtk_box_pack_start (GTK_BOX (vbox9), toolbar10, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar10), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar10));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  transcript_back_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (transcript_back_l);
  gtk_container_add (GTK_CONTAINER (toolbar10), transcript_back_l);
  gtk_widget_set_sensitive (transcript_back_l, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  transcript_forward_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (transcript_forward_l);
  gtk_container_add (GTK_CONTAINER (toolbar10), transcript_forward_l);
  gtk_widget_set_sensitive (transcript_forward_l, FALSE);

  separatortoolitem8 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem8);
  gtk_tool_item_set_expand (GTK_TOOL_ITEM (separatortoolitem8), TRUE);
  gtk_container_add (GTK_CONTAINER (toolbar10), separatortoolitem8);
  gtk_separator_tool_item_set_draw (GTK_SEPARATOR_TOOL_ITEM (separatortoolitem8), FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-yes", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  transcript_bless_all_l = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Bless All"));
  gtk_widget_show (transcript_bless_all_l);
  gtk_container_add (GTK_CONTAINER (toolbar10), transcript_bless_all_l);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (transcript_bless_all_l), TRUE);

  scrolledwindow9 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow9);
  gtk_box_pack_start (GTK_BOX (vbox9), scrolledwindow9, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow9), GTK_POLICY_AUTOMATIC, GTK_POLICY_ALWAYS);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow9), GTK_SHADOW_IN);

  treeview1 = gtk_tree_view_new ();
  gtk_widget_show (treeview1);
  gtk_container_add (GTK_CONTAINER (scrolledwindow9), treeview1);

  label12 = gtk_label_new (_("Transcript"));
  gtk_widget_show (label12);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_l), 4), label12);
  gtk_label_set_angle (GTK_LABEL (label12), 270);

  vbox50 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox50);
  gtk_container_add (GTK_CONTAINER (notebook_l), vbox50);

  toolbar12 = gtk_toolbar_new ();
  gtk_widget_show (toolbar12);
  gtk_box_pack_start (GTK_BOX (vbox50), toolbar12, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar12), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar12));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  game_back_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (game_back_l);
  gtk_container_add (GTK_CONTAINER (toolbar12), game_back_l);
  gtk_widget_set_sensitive (game_back_l, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  game_forward_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (game_forward_l);
  gtk_container_add (GTK_CONTAINER (toolbar12), game_forward_l);
  gtk_widget_set_sensitive (game_forward_l, FALSE);

  scrolledwindow39 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow39);
  gtk_box_pack_start (GTK_BOX (vbox50), scrolledwindow39, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow39), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  game_viewport_l = gtk_viewport_new (NULL, NULL);
  gtk_widget_show (game_viewport_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow39), game_viewport_l);
  gtk_viewport_set_shadow_type (GTK_VIEWPORT (game_viewport_l), GTK_SHADOW_NONE);

  game_l = game_create ("game_l", "", "", 0, 0);
  gtk_widget_show (game_l);
  gtk_container_add (GTK_CONTAINER (game_viewport_l), game_l);
  GTK_WIDGET_SET_FLAGS (game_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (game_l, GTK_CAN_DEFAULT);

  label13 = gtk_label_new (_("Game"));
  gtk_widget_show (label13);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_l), 5), label13);
  gtk_label_set_angle (GTK_LABEL (label13), 270);

  vbox47 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox47);
  gtk_container_add (GTK_CONTAINER (notebook_l), vbox47);

  toolbar14 = gtk_toolbar_new ();
  gtk_widget_show (toolbar14);
  gtk_box_pack_start (GTK_BOX (vbox47), toolbar14, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar14), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar14));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  docs_back_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (docs_back_l);
  gtk_container_add (GTK_CONTAINER (toolbar14), docs_back_l);
  gtk_widget_set_sensitive (docs_back_l, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  docs_forward_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (docs_forward_l);
  gtk_container_add (GTK_CONTAINER (toolbar14), docs_forward_l);
  gtk_widget_set_sensitive (docs_forward_l, FALSE);

  separatortoolitem10 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem10);
  gtk_tool_item_set_expand (GTK_TOOL_ITEM (separatortoolitem10), TRUE);
  gtk_container_add (GTK_CONTAINER (toolbar14), separatortoolitem10);
  gtk_separator_tool_item_set_draw (GTK_SEPARATOR_TOOL_ITEM (separatortoolitem10), FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-index", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  docs_contents_l = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Contents"));
  gtk_widget_show (docs_contents_l);
  gtk_container_add (GTK_CONTAINER (toolbar14), docs_contents_l);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (docs_contents_l), TRUE);

  scrolledwindow46 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow46);
  gtk_box_pack_start (GTK_BOX (vbox47), scrolledwindow46, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow46), GTK_POLICY_AUTOMATIC, GTK_POLICY_ALWAYS);

  docs_l = create_html ("docs_l", "", "", 0, 0);
  gtk_widget_show (docs_l);
  gtk_container_add (GTK_CONTAINER (scrolledwindow46), docs_l);
  GTK_WIDGET_SET_FLAGS (docs_l, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (docs_l, GTK_CAN_DEFAULT);

  label14 = gtk_label_new (_("Documentation"));
  gtk_widget_show (label14);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_l), 6), label14);
  gtk_label_set_angle (GTK_LABEL (label14), 270);

  vbox4 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox4);
  gtk_container_add (GTK_CONTAINER (notebook_l), vbox4);
  gtk_notebook_set_menu_label_text (GTK_NOTEBOOK (notebook_l), vbox4, _("Settings"));

  toolbar16 = gtk_toolbar_new ();
  gtk_widget_show (toolbar16);
  gtk_box_pack_start (GTK_BOX (vbox4), toolbar16, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar16), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar16));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  settings_back_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (settings_back_l);
  gtk_container_add (GTK_CONTAINER (toolbar16), settings_back_l);
  gtk_widget_set_sensitive (settings_back_l, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  settings_forward_l = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (settings_forward_l);
  gtk_container_add (GTK_CONTAINER (toolbar16), settings_forward_l);
  gtk_widget_set_sensitive (settings_forward_l, FALSE);

  frame1 = gtk_frame_new (NULL);
  gtk_widget_show (frame1);
  gtk_box_pack_start (GTK_BOX (vbox4), frame1, FALSE, FALSE, 0);

  alignment4 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment4);
  gtk_container_add (GTK_CONTAINER (frame1), alignment4);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment4), 0, 0, 12, 0);

  vbox5 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox5);
  gtk_container_add (GTK_CONTAINER (alignment4), vbox5);

  label107 = gtk_label_new (_("Inform translates the source text into a story file which can have any of four standard formats. You can change your mind about the format at any time."));
  gtk_widget_show (label107);
  gtk_box_pack_start (GTK_BOX (vbox5), label107, FALSE, FALSE, 6);
  gtk_label_set_line_wrap (GTK_LABEL (label107), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label107), 0, 0.5);

  z5_button_l = gtk_radio_button_new_with_mnemonic (NULL, _("Z-Code version 5 (small textual projects only)"));
  gtk_widget_show (z5_button_l);
  gtk_box_pack_start (GTK_BOX (vbox5), z5_button_l, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, z5_button_l, _("Z-code version 5 games run on Z-machine interpreters (such as frotz or Zoom), and have an upper limit of 256k for the size of the story file."), NULL);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (z5_button_l), z5_button_l_group);
  z5_button_l_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (z5_button_l));

  z6_button_l = gtk_radio_button_new_with_mnemonic (NULL, _("Z-Code version 6 (not recommended for new projects)"));
  gtk_widget_show (z6_button_l);
  gtk_box_pack_start (GTK_BOX (vbox5), z6_button_l, FALSE, FALSE, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (z6_button_l), z5_button_l_group);
  z5_button_l_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (z6_button_l));

  z8_button_l = gtk_radio_button_new_with_mnemonic (NULL, _("Z-Code version 8 (medium-sized textual projects: most portable)"));
  gtk_widget_show (z8_button_l);
  gtk_box_pack_start (GTK_BOX (vbox5), z8_button_l, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, z8_button_l, _("Z-code version 8 games run on a Z-machine interpreter (such as frotz or Zoom), and have an upper limit of 512k for the size of the story file. Choose this if your story has become too large for the version 5 format."), NULL);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (z8_button_l), z5_button_l_group);
  z5_button_l_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (z8_button_l));
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (z8_button_l), TRUE);

  glulx_button_l = gtk_radio_button_new_with_mnemonic (NULL, _("Glulx (large and multimedia projects: most capable)"));
  gtk_widget_show (glulx_button_l);
  gtk_box_pack_start (GTK_BOX (vbox5), glulx_button_l, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, glulx_button_l, _("Glulx stories use a different interpreter to the Z-code versions, and do not suffer from any limitations in size. Your players will need to use an interpreter such as glulxe to run these stories. Glulx stories usually use the Glk library for display, which has a different feel to the Z-machine display."), NULL);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (glulx_button_l), z5_button_l_group);
  z5_button_l_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (glulx_button_l));

  label109 = gtk_label_new (_("When released, the story file is usually bound up into a Blorb file along with bibliographic data, cover art and any other resources it needs. If you need the raw story file, uncheck this option."));
  gtk_widget_show (label109);
  gtk_box_pack_start (GTK_BOX (vbox5), label109, FALSE, FALSE, 6);
  gtk_label_set_line_wrap (GTK_LABEL (label109), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label109), 0, 0.5);

  blorb_button_l = gtk_check_button_new_with_mnemonic (_("Bind up into a Blorb file on release"));
  gtk_widget_show (blorb_button_l);
  gtk_box_pack_start (GTK_BOX (vbox5), blorb_button_l, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, blorb_button_l, _("If selected (the default), then Inform will collate your story file with a library card on release to create a runnable Blorb archive file."), NULL);
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (blorb_button_l), TRUE);

  label25 = gtk_label_new (_("<b>Story File Format</b>"));
  gtk_widget_show (label25);
  gtk_frame_set_label_widget (GTK_FRAME (frame1), label25);
  gtk_label_set_use_markup (GTK_LABEL (label25), TRUE);

  frame14 = gtk_frame_new (NULL);
  gtk_widget_show (frame14);
  gtk_box_pack_start (GTK_BOX (vbox4), frame14, FALSE, FALSE, 0);

  alignment26 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment26);
  gtk_container_add (GTK_CONTAINER (frame14), alignment26);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment26), 0, 0, 12, 0);

  vbox55 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox55);
  gtk_container_add (GTK_CONTAINER (alignment26), vbox55);

  label111 = gtk_label_new (_("If the story involves randomised outcomes or events, it may be harder to check with the Replay options or with TEST commands, because the same input may produce different results every time. This option makes testing more predictable. (It has no effect on the final Release version, which will still be randomised.)"));
  gtk_widget_show (label111);
  gtk_box_pack_start (GTK_BOX (vbox55), label111, FALSE, FALSE, 6);
  gtk_label_set_line_wrap (GTK_LABEL (label111), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label111), 0, 0.5);

  random_button_l = gtk_check_button_new_with_mnemonic (_("Make random outcomes predictable when testing"));
  gtk_widget_show (random_button_l);
  gtk_box_pack_start (GTK_BOX (vbox55), random_button_l, FALSE, FALSE, 0);

  label105 = gtk_label_new (_("<b>Randomness</b>"));
  gtk_widget_show (label105);
  gtk_frame_set_label_widget (GTK_FRAME (frame14), label105);
  gtk_label_set_use_markup (GTK_LABEL (label105), TRUE);

  label15 = gtk_label_new (_("Settings"));
  gtk_widget_show (label15);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_l), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_l), 7), label15);
  gtk_label_set_angle (GTK_LABEL (label15), 270);

  notebook_r = gtk_notebook_new ();
  gtk_widget_show (notebook_r);
  gtk_paned_pack2 (GTK_PANED (facingpages), notebook_r, TRUE, TRUE);
  gtk_notebook_set_tab_pos (GTK_NOTEBOOK (notebook_r), GTK_POS_RIGHT);
  gtk_notebook_set_scrollable (GTK_NOTEBOOK (notebook_r), TRUE);
  gtk_notebook_popup_enable (GTK_NOTEBOOK (notebook_r));

  vbox38 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox38);
  gtk_container_add (GTK_CONTAINER (notebook_r), vbox38);

  toolbar3 = gtk_toolbar_new ();
  gtk_widget_show (toolbar3);
  gtk_box_pack_start (GTK_BOX (vbox38), toolbar3, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar3), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar3));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  source_back_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (source_back_r);
  gtk_container_add (GTK_CONTAINER (toolbar3), source_back_r);
  gtk_widget_set_sensitive (source_back_r, FALSE);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (source_back_r), TRUE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  source_forward_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (source_forward_r);
  gtk_container_add (GTK_CONTAINER (toolbar3), source_forward_r);
  gtk_widget_set_sensitive (source_forward_r, FALSE);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (source_forward_r), TRUE);

  separatortoolitem5 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem5);
  gtk_tool_item_set_expand (GTK_TOOL_ITEM (separatortoolitem5), TRUE);
  gtk_container_add (GTK_CONTAINER (toolbar3), separatortoolitem5);
  gtk_separator_tool_item_set_draw (GTK_SEPARATOR_TOOL_ITEM (separatortoolitem5), FALSE);

  tmp_image = gtk_image_new_from_stock ("gnome-stock-text-bulleted-list", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  source_headings_r = (GtkWidget*) gtk_menu_tool_button_new (tmp_image, _("Headings"));
  gtk_widget_show (source_headings_r);
  gtk_tool_item_set_homogeneous (GTK_TOOL_ITEM (source_headings_r), FALSE);
  gtk_container_add (GTK_CONTAINER (toolbar3), source_headings_r);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (source_headings_r), TRUE);

  scrolledwindow13 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow13);
  gtk_box_pack_start (GTK_BOX (vbox38), scrolledwindow13, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow13), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow13), GTK_SHADOW_IN);

  source_r = custom_gtk_source_view_create ("source_r", "", "", 0, 0);
  gtk_widget_show (source_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow13), source_r);
  GTK_WIDGET_SET_FLAGS (source_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (source_r, GTK_CAN_DEFAULT);

  label26 = gtk_label_new (_("Source"));
  gtk_widget_show (label26);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_r), 0), label26);
  gtk_label_set_angle (GTK_LABEL (label26), 270);

  vbox40 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox40);
  gtk_container_add (GTK_CONTAINER (notebook_r), vbox40);

  toolbar5 = gtk_toolbar_new ();
  gtk_widget_show (toolbar5);
  gtk_box_pack_start (GTK_BOX (vbox40), toolbar5, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar5), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar5));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  errors_back_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (errors_back_r);
  gtk_container_add (GTK_CONTAINER (toolbar5), errors_back_r);
  gtk_widget_set_sensitive (errors_back_r, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  errors_forward_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (errors_forward_r);
  gtk_container_add (GTK_CONTAINER (toolbar5), errors_forward_r);
  gtk_widget_set_sensitive (errors_forward_r, FALSE);

  errors_notebook_r = gtk_notebook_new ();
  gtk_widget_show (errors_notebook_r);
  gtk_box_pack_start (GTK_BOX (vbox40), errors_notebook_r, TRUE, TRUE, 0);
  gtk_notebook_set_scrollable (GTK_NOTEBOOK (errors_notebook_r), TRUE);
  gtk_notebook_popup_enable (GTK_NOTEBOOK (errors_notebook_r));

  scrolledwindow5 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow5);
  gtk_container_add (GTK_CONTAINER (errors_notebook_r), scrolledwindow5);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow5), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow5), GTK_SHADOW_IN);

  compiler_output_r = gtk_text_view_new ();
  gtk_widget_show (compiler_output_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow5), compiler_output_r);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (compiler_output_r), FALSE);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (compiler_output_r), GTK_WRAP_CHAR);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (compiler_output_r), FALSE);

  label27 = gtk_label_new (_("Progress"));
  gtk_widget_show (label27);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (errors_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (errors_notebook_r), 0), label27);

  scrolledwindow25 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow25);
  gtk_container_add (GTK_CONTAINER (errors_notebook_r), scrolledwindow25);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow25), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  problems_r = create_html ("problems_r", "", "", 0, 0);
  gtk_widget_show (problems_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow25), problems_r);
  GTK_WIDGET_SET_FLAGS (problems_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (problems_r, GTK_CAN_DEFAULT);

  label28 = gtk_label_new (_("Problems"));
  gtk_widget_show (label28);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (errors_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (errors_notebook_r), 1), label28);

  debugging_page_r = gtk_scrolled_window_new (NULL, NULL);
  gtk_container_add (GTK_CONTAINER (errors_notebook_r), debugging_page_r);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (debugging_page_r), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (debugging_page_r), GTK_SHADOW_IN);

  debugging_r = gtk_text_view_new ();
  gtk_widget_show (debugging_r);
  gtk_container_add (GTK_CONTAINER (debugging_page_r), debugging_r);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (debugging_r), FALSE);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (debugging_r), GTK_WRAP_CHAR);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (debugging_r), FALSE);

  label91 = gtk_label_new (_("Debugging"));
  gtk_widget_show (label91);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (errors_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (errors_notebook_r), 2), label91);

  inform6_page_r = gtk_scrolled_window_new (NULL, NULL);
  gtk_container_add (GTK_CONTAINER (errors_notebook_r), inform6_page_r);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (inform6_page_r), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  inform6_r = custom_gtk_source_view_create ("inform6_r", "", "", 0, 0);
  gtk_widget_show (inform6_r);
  gtk_container_add (GTK_CONTAINER (inform6_page_r), inform6_r);
  GTK_WIDGET_UNSET_FLAGS (inform6_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (inform6_r, GTK_CAN_DEFAULT);

  label92 = gtk_label_new (_("Inform 6"));
  gtk_widget_show (label92);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (errors_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (errors_notebook_r), 3), label92);

  label29 = gtk_label_new (_("Errors"));
  gtk_widget_show (label29);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_r), 1), label29);
  gtk_label_set_angle (GTK_LABEL (label29), 270);

  vbox42 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox42);
  gtk_container_add (GTK_CONTAINER (notebook_r), vbox42);

  toolbar7 = gtk_toolbar_new ();
  gtk_widget_show (toolbar7);
  gtk_box_pack_start (GTK_BOX (vbox42), toolbar7, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar7), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar7));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  index_back_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (index_back_r);
  gtk_container_add (GTK_CONTAINER (toolbar7), index_back_r);
  gtk_widget_set_sensitive (index_back_r, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  index_forward_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (index_forward_r);
  gtk_container_add (GTK_CONTAINER (toolbar7), index_forward_r);
  gtk_widget_set_sensitive (index_forward_r, FALSE);

  index_notebook_r = gtk_notebook_new ();
  gtk_widget_show (index_notebook_r);
  gtk_box_pack_start (GTK_BOX (vbox42), index_notebook_r, TRUE, TRUE, 0);
  gtk_notebook_set_scrollable (GTK_NOTEBOOK (index_notebook_r), TRUE);
  gtk_notebook_popup_enable (GTK_NOTEBOOK (index_notebook_r));

  scrolledwindow26 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow26);
  gtk_container_add (GTK_CONTAINER (index_notebook_r), scrolledwindow26);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow26), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  actions_r = create_html ("actions_r", "", "", 0, 0);
  gtk_widget_show (actions_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow26), actions_r);
  GTK_WIDGET_SET_FLAGS (actions_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (actions_r, GTK_CAN_DEFAULT);

  label30 = gtk_label_new (_("Actions"));
  gtk_widget_show (label30);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_r), 0), label30);

  scrolledwindow27 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow27);
  gtk_container_add (GTK_CONTAINER (index_notebook_r), scrolledwindow27);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow27), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  contents_r = create_html ("contents_r", "", "", 0, 0);
  gtk_widget_show (contents_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow27), contents_r);
  GTK_WIDGET_SET_FLAGS (contents_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (contents_r, GTK_CAN_DEFAULT);

  label31 = gtk_label_new (_("Contents"));
  gtk_widget_show (label31);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_r), 1), label31);

  scrolledwindow28 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow28);
  gtk_container_add (GTK_CONTAINER (index_notebook_r), scrolledwindow28);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow28), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  kinds_r = create_html ("kinds_r", "", "", 0, 0);
  gtk_widget_show (kinds_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow28), kinds_r);
  GTK_WIDGET_SET_FLAGS (kinds_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (kinds_r, GTK_CAN_DEFAULT);

  label32 = gtk_label_new (_("Kinds"));
  gtk_widget_show (label32);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_r), 2), label32);

  scrolledwindow29 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow29);
  gtk_container_add (GTK_CONTAINER (index_notebook_r), scrolledwindow29);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow29), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  phrasebook_r = create_html ("phrasebook_r", "", "", 0, 0);
  gtk_widget_show (phrasebook_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow29), phrasebook_r);
  GTK_WIDGET_SET_FLAGS (phrasebook_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (phrasebook_r, GTK_CAN_DEFAULT);

  label33 = gtk_label_new (_("Phrasebook"));
  gtk_widget_show (label33);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_r), 3), label33);

  scrolledwindow30 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow30);
  gtk_container_add (GTK_CONTAINER (index_notebook_r), scrolledwindow30);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow30), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  rules_r = create_html ("rules_r", "", "", 0, 0);
  gtk_widget_show (rules_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow30), rules_r);
  GTK_WIDGET_SET_FLAGS (rules_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (rules_r, GTK_CAN_DEFAULT);

  label34 = gtk_label_new (_("Rules"));
  gtk_widget_show (label34);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_r), 4), label34);

  scrolledwindow31 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow31);
  gtk_container_add (GTK_CONTAINER (index_notebook_r), scrolledwindow31);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow31), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  scenes_r = create_html ("scenes_r", "", "", 0, 0);
  gtk_widget_show (scenes_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow31), scenes_r);
  GTK_WIDGET_SET_FLAGS (scenes_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (scenes_r, GTK_CAN_DEFAULT);

  label35 = gtk_label_new (_("Scenes"));
  gtk_widget_show (label35);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_r), 5), label35);

  scrolledwindow32 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow32);
  gtk_container_add (GTK_CONTAINER (index_notebook_r), scrolledwindow32);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow32), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  world_r = create_html ("world_r", "", "", 0, 0);
  gtk_widget_show (world_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow32), world_r);
  GTK_WIDGET_SET_FLAGS (world_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (world_r, GTK_CAN_DEFAULT);

  label36 = gtk_label_new (_("World"));
  gtk_widget_show (label36);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (index_notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (index_notebook_r), 6), label36);

  label37 = gtk_label_new (_("Index"));
  gtk_widget_show (label37);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_r), 2), label37);
  gtk_misc_set_alignment (GTK_MISC (label37), 0.5, 0.54);
  gtk_label_set_angle (GTK_LABEL (label37), 270);

  vbox6 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox6);
  gtk_container_add (GTK_CONTAINER (notebook_r), vbox6);

  toolbar9 = gtk_toolbar_new ();
  gtk_widget_show (toolbar9);
  gtk_box_pack_start (GTK_BOX (vbox6), toolbar9, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar9), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar9));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_back_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (skein_back_r);
  gtk_container_add (GTK_CONTAINER (toolbar9), skein_back_r);
  gtk_widget_set_sensitive (skein_back_r, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_forward_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (skein_forward_r);
  gtk_container_add (GTK_CONTAINER (toolbar9), skein_forward_r);
  gtk_widget_set_sensitive (skein_forward_r, FALSE);

  separatortoolitem7 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem7);
  gtk_tool_item_set_expand (GTK_TOOL_ITEM (separatortoolitem7), TRUE);
  gtk_container_add (GTK_CONTAINER (toolbar9), separatortoolitem7);
  gtk_separator_tool_item_set_draw (GTK_SEPARATOR_TOOL_ITEM (separatortoolitem7), FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-jump-to", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_labels_r = (GtkWidget*) gtk_menu_tool_button_new (tmp_image, _("Labels"));
  gtk_widget_show (skein_labels_r);
  gtk_tool_item_set_homogeneous (GTK_TOOL_ITEM (skein_labels_r), FALSE);
  gtk_container_add (GTK_CONTAINER (toolbar9), skein_labels_r);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (skein_labels_r), tooltips, _("Show a menu of the labelled knots: selecting a knot will go to it"), NULL);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (skein_labels_r), TRUE);

  tmp_image = gtk_image_new_from_stock ("gtk-preferences", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_layout_r = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Layout"));
  gtk_widget_show (skein_layout_r);
  gtk_container_add (GTK_CONTAINER (toolbar9), skein_layout_r);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (skein_layout_r), TRUE);

  tmp_image = gtk_image_new_from_stock ("gtk-cut", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_trim_r = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Trim"));
  gtk_widget_show (skein_trim_r);
  gtk_container_add (GTK_CONTAINER (toolbar9), skein_trim_r);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (skein_trim_r), tooltips, _("Remove all knots that have not been locked"), NULL);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (skein_trim_r), TRUE);

  tmp_image = gtk_image_new_from_stock ("gtk-media-play", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  skein_play_all_r = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Play All"));
  gtk_container_add (GTK_CONTAINER (toolbar9), skein_play_all_r);
  gtk_widget_set_sensitive (skein_play_all_r, FALSE);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (skein_play_all_r), tooltips, _("Play all threads that lead to a blessed knot"), NULL);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (skein_play_all_r), TRUE);

  skein_r_scroll = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (skein_r_scroll);
  gtk_box_pack_start (GTK_BOX (vbox6), skein_r_scroll, TRUE, TRUE, 0);

  skein_r = gnome_canvas_new ();
  gtk_widget_show (skein_r);
  gtk_container_add (GTK_CONTAINER (skein_r_scroll), skein_r);
  gnome_canvas_set_scroll_region (GNOME_CANVAS (skein_r), 0, 0, 100, 100);

  label38 = gtk_label_new (_("Skein"));
  gtk_widget_show (label38);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_r), 3), label38);
  gtk_label_set_angle (GTK_LABEL (label38), 270);

  vbox10 = gtk_vbox_new (FALSE, 0);
  gtk_container_add (GTK_CONTAINER (notebook_r), vbox10);

  toolbar11 = gtk_toolbar_new ();
  gtk_widget_show (toolbar11);
  gtk_box_pack_start (GTK_BOX (vbox10), toolbar11, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar11), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar11));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  transcript_back_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (transcript_back_r);
  gtk_container_add (GTK_CONTAINER (toolbar11), transcript_back_r);
  gtk_widget_set_sensitive (transcript_back_r, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  transcript_forward_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (transcript_forward_r);
  gtk_container_add (GTK_CONTAINER (toolbar11), transcript_forward_r);
  gtk_widget_set_sensitive (transcript_forward_r, FALSE);

  separatortoolitem9 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem9);
  gtk_tool_item_set_expand (GTK_TOOL_ITEM (separatortoolitem9), TRUE);
  gtk_container_add (GTK_CONTAINER (toolbar11), separatortoolitem9);
  gtk_separator_tool_item_set_draw (GTK_SEPARATOR_TOOL_ITEM (separatortoolitem9), FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-yes", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  transcript_bless_all_r = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Bless All"));
  gtk_widget_show (transcript_bless_all_r);
  gtk_container_add (GTK_CONTAINER (toolbar11), transcript_bless_all_r);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (transcript_bless_all_r), TRUE);

  scrolledwindow10 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow10);
  gtk_box_pack_start (GTK_BOX (vbox10), scrolledwindow10, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow10), GTK_POLICY_NEVER, GTK_POLICY_ALWAYS);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow10), GTK_SHADOW_IN);

  treeview2 = gtk_tree_view_new ();
  gtk_widget_show (treeview2);
  gtk_container_add (GTK_CONTAINER (scrolledwindow10), treeview2);

  label39 = gtk_label_new (_("Transcript"));
  gtk_widget_show (label39);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_r), 4), label39);
  gtk_label_set_angle (GTK_LABEL (label39), 270);

  vbox49 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox49);
  gtk_container_add (GTK_CONTAINER (notebook_r), vbox49);

  toolbar13 = gtk_toolbar_new ();
  gtk_widget_show (toolbar13);
  gtk_box_pack_start (GTK_BOX (vbox49), toolbar13, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar13), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar13));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  game_back_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (game_back_r);
  gtk_container_add (GTK_CONTAINER (toolbar13), game_back_r);
  gtk_widget_set_sensitive (game_back_r, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  game_forward_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (game_forward_r);
  gtk_container_add (GTK_CONTAINER (toolbar13), game_forward_r);
  gtk_widget_set_sensitive (game_forward_r, FALSE);

  scrolledwindow40 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow40);
  gtk_box_pack_start (GTK_BOX (vbox49), scrolledwindow40, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow40), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  game_viewport_r = gtk_viewport_new (NULL, NULL);
  gtk_widget_show (game_viewport_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow40), game_viewport_r);
  gtk_viewport_set_shadow_type (GTK_VIEWPORT (game_viewport_r), GTK_SHADOW_NONE);

  game_r = game_create ("game_r", "", "", 0, 0);
  gtk_widget_show (game_r);
  gtk_container_add (GTK_CONTAINER (game_viewport_r), game_r);
  GTK_WIDGET_SET_FLAGS (game_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (game_r, GTK_CAN_DEFAULT);

  label40 = gtk_label_new (_("Game"));
  gtk_widget_show (label40);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_r), 5), label40);
  gtk_label_set_angle (GTK_LABEL (label40), 270);

  vbox48 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox48);
  gtk_container_add (GTK_CONTAINER (notebook_r), vbox48);

  toolbar15 = gtk_toolbar_new ();
  gtk_widget_show (toolbar15);
  gtk_box_pack_start (GTK_BOX (vbox48), toolbar15, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar15), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar15));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  docs_back_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (docs_back_r);
  gtk_container_add (GTK_CONTAINER (toolbar15), docs_back_r);
  gtk_widget_set_sensitive (docs_back_r, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  docs_forward_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (docs_forward_r);
  gtk_container_add (GTK_CONTAINER (toolbar15), docs_forward_r);
  gtk_widget_set_sensitive (docs_forward_r, FALSE);

  separatortoolitem11 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem11);
  gtk_tool_item_set_expand (GTK_TOOL_ITEM (separatortoolitem11), TRUE);
  gtk_container_add (GTK_CONTAINER (toolbar15), separatortoolitem11);
  gtk_separator_tool_item_set_draw (GTK_SEPARATOR_TOOL_ITEM (separatortoolitem11), FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-index", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  docs_contents_r = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Contents"));
  gtk_widget_show (docs_contents_r);
  gtk_container_add (GTK_CONTAINER (toolbar15), docs_contents_r);
  gtk_tool_item_set_is_important (GTK_TOOL_ITEM (docs_contents_r), TRUE);

  scrolledwindow47 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow47);
  gtk_box_pack_start (GTK_BOX (vbox48), scrolledwindow47, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow47), GTK_POLICY_AUTOMATIC, GTK_POLICY_ALWAYS);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow47), GTK_SHADOW_IN);

  docs_r = create_html ("docs_r", "", "", 0, 0);
  gtk_widget_show (docs_r);
  gtk_container_add (GTK_CONTAINER (scrolledwindow47), docs_r);
  GTK_WIDGET_SET_FLAGS (docs_r, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (docs_r, GTK_CAN_DEFAULT);

  label41 = gtk_label_new (_("Documentation"));
  gtk_widget_show (label41);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_r), 6), label41);
  gtk_label_set_angle (GTK_LABEL (label41), 270);

  vbox7 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox7);
  gtk_container_add (GTK_CONTAINER (notebook_r), vbox7);
  gtk_notebook_set_menu_label_text (GTK_NOTEBOOK (notebook_r), vbox7, _("Settings"));

  toolbar17 = gtk_toolbar_new ();
  gtk_widget_show (toolbar17);
  gtk_box_pack_start (GTK_BOX (vbox7), toolbar17, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar17), GTK_TOOLBAR_BOTH_HORIZ);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar17));

  tmp_image = gtk_image_new_from_stock ("gtk-go-back", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  settings_back_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (settings_back_r);
  gtk_container_add (GTK_CONTAINER (toolbar17), settings_back_r);
  gtk_widget_set_sensitive (settings_back_r, FALSE);

  tmp_image = gtk_image_new_from_stock ("gtk-go-forward", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  settings_forward_r = (GtkWidget*) gtk_tool_button_new (tmp_image, "");
  gtk_widget_show (settings_forward_r);
  gtk_container_add (GTK_CONTAINER (toolbar17), settings_forward_r);
  gtk_widget_set_sensitive (settings_forward_r, FALSE);

  frame2 = gtk_frame_new (NULL);
  gtk_widget_show (frame2);
  gtk_box_pack_start (GTK_BOX (vbox7), frame2, FALSE, FALSE, 0);

  alignment5 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment5);
  gtk_container_add (GTK_CONTAINER (frame2), alignment5);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment5), 0, 0, 12, 0);

  vbox8 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox8);
  gtk_container_add (GTK_CONTAINER (alignment5), vbox8);

  label108 = gtk_label_new (_("Inform translates the source text into a story file which can have any of four standard formats. You can change your mind about the format at any time."));
  gtk_widget_show (label108);
  gtk_box_pack_start (GTK_BOX (vbox8), label108, FALSE, FALSE, 6);
  gtk_label_set_line_wrap (GTK_LABEL (label108), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label108), 0, 0.5);

  z5_button_r = gtk_radio_button_new_with_mnemonic (NULL, _("Z-Code version 5 (small textual projects only)"));
  gtk_widget_show (z5_button_r);
  gtk_box_pack_start (GTK_BOX (vbox8), z5_button_r, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, z5_button_r, _("Z-code version 5 games run on Z-machine interpreters (such as frotz or Zoom), and have an upper limit of 256k for the size of the story file."), NULL);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (z5_button_r), z5_button_r_group);
  z5_button_r_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (z5_button_r));

  z6_button_r = gtk_radio_button_new_with_mnemonic (NULL, _("Z-Code version 6 (not recommended for new projects)"));
  gtk_widget_show (z6_button_r);
  gtk_box_pack_start (GTK_BOX (vbox8), z6_button_r, FALSE, FALSE, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (z6_button_r), z5_button_r_group);
  z5_button_r_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (z6_button_r));

  z8_button_r = gtk_radio_button_new_with_mnemonic (NULL, _("Z-Code version 8 (medium-sized textual projects: most portable)"));
  gtk_widget_show (z8_button_r);
  gtk_box_pack_start (GTK_BOX (vbox8), z8_button_r, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, z8_button_r, _("Z-code version 8 games run on a Z-machine interpreter (such as frotz or Zoom), and have an upper limit of 512k for the size of the story file. Choose this if your story has become too large for the version 5 format."), NULL);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (z8_button_r), z5_button_r_group);
  z5_button_r_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (z8_button_r));
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (z8_button_r), TRUE);

  glulx_button_r = gtk_radio_button_new_with_mnemonic (NULL, _("Glulx (large and multimedia projects: most capable)"));
  gtk_widget_show (glulx_button_r);
  gtk_box_pack_start (GTK_BOX (vbox8), glulx_button_r, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, glulx_button_r, _("Glulx stories use a different interpreter to the Z-code versions, and do not suffer from any limitations in size. Your players will need to use an interpreter such as glulxe to run these stories. Glulx stories usually use the Glk library for display, which has a different feel to the Z-machine display."), NULL);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (glulx_button_r), z5_button_r_group);
  z5_button_r_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (glulx_button_r));

  label110 = gtk_label_new (_("When released, the story file is usually bound up into a Blorb file along with bibliographic data, cover art and any other resources it needs. If you need the raw story file, uncheck this option."));
  gtk_widget_show (label110);
  gtk_box_pack_start (GTK_BOX (vbox8), label110, FALSE, FALSE, 6);
  gtk_label_set_line_wrap (GTK_LABEL (label110), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label110), 0, 0.5);

  blorb_button_r = gtk_check_button_new_with_mnemonic (_("Create a Blorb archive for release"));
  gtk_widget_show (blorb_button_r);
  gtk_box_pack_start (GTK_BOX (vbox8), blorb_button_r, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, blorb_button_r, _("If selected (the default), then Inform will collate your story file with a library card on release to create a runnable Blorb archive file."), NULL);
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (blorb_button_r), TRUE);

  label42 = gtk_label_new (_("<b>Story File Format</b>"));
  gtk_widget_show (label42);
  gtk_frame_set_label_widget (GTK_FRAME (frame2), label42);
  gtk_label_set_use_markup (GTK_LABEL (label42), TRUE);

  frame15 = gtk_frame_new (NULL);
  gtk_widget_show (frame15);
  gtk_box_pack_start (GTK_BOX (vbox7), frame15, FALSE, FALSE, 0);

  alignment27 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment27);
  gtk_container_add (GTK_CONTAINER (frame15), alignment27);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment27), 0, 0, 12, 0);

  vbox56 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox56);
  gtk_container_add (GTK_CONTAINER (alignment27), vbox56);

  label112 = gtk_label_new (_("If the story involves randomised outcomes or events, it may be harder to check with the Replay options or with TEST commands, because the same input may produce different results every time. This option makes testing more predictable. (It has no effect on the final Release version, which will still be randomised.)"));
  gtk_widget_show (label112);
  gtk_box_pack_start (GTK_BOX (vbox56), label112, FALSE, FALSE, 6);
  gtk_label_set_line_wrap (GTK_LABEL (label112), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label112), 0, 0.5);

  random_button_r = gtk_check_button_new_with_mnemonic (_("Make random outcomes predictable when testing"));
  gtk_widget_show (random_button_r);
  gtk_box_pack_start (GTK_BOX (vbox56), random_button_r, FALSE, FALSE, 0);

  label106 = gtk_label_new (_("<b>Randomness</b>"));
  gtk_widget_show (label106);
  gtk_frame_set_label_widget (GTK_FRAME (frame15), label106);
  gtk_label_set_use_markup (GTK_LABEL (label106), TRUE);

  label43 = gtk_label_new (_("Settings"));
  gtk_widget_show (label43);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook_r), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook_r), 7), label43);
  gtk_label_set_angle (GTK_LABEL (label43), 270);

  main_appbar = gnome_appbar_new (TRUE, TRUE, GNOME_PREFERENCES_NEVER);
  gtk_widget_show (main_appbar);
  gnome_app_set_statusbar (GNOME_APP (app_window), main_appbar);

  g_signal_connect ((gpointer) app_window, "delete_event",
                    G_CALLBACK (on_app_window_delete_event),
                    NULL);
  g_signal_connect_after ((gpointer) app_window, "realize",
                          G_CALLBACK (after_app_window_realize),
                          NULL);
  g_signal_connect ((gpointer) app_window, "destroy",
                    G_CALLBACK (on_app_window_destroy),
                    NULL);
  g_signal_connect ((gpointer) app_window, "focus_in_event",
                    G_CALLBACK (on_app_window_focus_in_event),
                    NULL);
  gnome_app_install_menu_hints (GNOME_APP (app_window), menubar1_uiinfo);
  g_signal_connect ((gpointer) go_toolbutton, "clicked",
                    G_CALLBACK (on_go_toolbutton_clicked),
                    NULL);
  g_signal_connect ((gpointer) replay_toolbutton, "clicked",
                    G_CALLBACK (on_replay_toolbutton_clicked),
                    NULL);
  g_signal_connect ((gpointer) stop_toolbutton, "clicked",
                    G_CALLBACK (on_stop_toolbutton_clicked),
                    NULL);
  g_signal_connect ((gpointer) release_toolbutton, "clicked",
                    G_CALLBACK (on_release_toolbutton_clicked),
                    NULL);
  g_signal_connect ((gpointer) docs_search, "activate",
                    G_CALLBACK (on_docs_search_activate),
                    NULL);
  g_signal_connect ((gpointer) docs_search, "focus_in_event",
                    G_CALLBACK (on_docs_search_focus),
                    NULL);
  g_signal_connect ((gpointer) help_toolbutton, "clicked",
                    G_CALLBACK (on_help_toolbutton_clicked),
                    NULL);
  g_signal_connect_after ((gpointer) notebook_l, "switch_page",
                          G_CALLBACK (after_notebook_l_switch_page),
                          NULL);
  g_signal_connect ((gpointer) source_back_l, "clicked",
                    G_CALLBACK (on_back_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) source_forward_l, "clicked",
                    G_CALLBACK (on_forward_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) source_headings_l, "show_menu",
                    G_CALLBACK (on_source_headings_show_menu),
                    NULL);
  g_signal_connect ((gpointer) errors_back_l, "clicked",
                    G_CALLBACK (on_back_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) errors_forward_l, "clicked",
                    G_CALLBACK (on_forward_l_clicked),
                    NULL);
  g_signal_connect_after ((gpointer) errors_notebook_l, "switch_page",
                          G_CALLBACK (after_errors_notebook_l_switch_page),
                          NULL);
  g_signal_connect ((gpointer) index_back_l, "clicked",
                    G_CALLBACK (on_back_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) index_forward_l, "clicked",
                    G_CALLBACK (on_forward_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) index_notebook_l, "switch_page",
                    G_CALLBACK (after_index_notebook_l_switch_page),
                    NULL);
  g_signal_connect ((gpointer) skein_back_l, "clicked",
                    G_CALLBACK (on_back_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) skein_forward_l, "clicked",
                    G_CALLBACK (on_forward_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) skein_labels_l, "show_menu",
                    G_CALLBACK (on_skein_labels_show_menu),
                    NULL);
  g_signal_connect ((gpointer) skein_layout_l, "clicked",
                    G_CALLBACK (on_skein_layout_clicked),
                    NULL);
  g_signal_connect ((gpointer) skein_trim_l, "clicked",
                    G_CALLBACK (on_skein_trim_clicked),
                    NULL);
  g_signal_connect ((gpointer) skein_play_all_l, "clicked",
                    G_CALLBACK (on_skein_play_all_clicked),
                    NULL);
  g_signal_connect ((gpointer) transcript_back_l, "clicked",
                    G_CALLBACK (on_back_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) transcript_forward_l, "clicked",
                    G_CALLBACK (on_forward_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) game_back_l, "clicked",
                    G_CALLBACK (on_back_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) game_forward_l, "clicked",
                    G_CALLBACK (on_forward_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) game_viewport_l, "size_allocate",
                    G_CALLBACK (on_game_viewport_l_size_allocate),
                    NULL);
  g_signal_connect ((gpointer) docs_back_l, "clicked",
                    G_CALLBACK (on_back_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) docs_forward_l, "clicked",
                    G_CALLBACK (on_forward_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) docs_contents_l, "clicked",
                    G_CALLBACK (on_docs_contents_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) settings_back_l, "clicked",
                    G_CALLBACK (on_back_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) settings_forward_l, "clicked",
                    G_CALLBACK (on_forward_l_clicked),
                    NULL);
  g_signal_connect ((gpointer) z5_button_l, "toggled",
                    G_CALLBACK (on_z5_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) z6_button_l, "toggled",
                    G_CALLBACK (on_z6_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) z8_button_l, "toggled",
                    G_CALLBACK (on_z8_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) glulx_button_l, "toggled",
                    G_CALLBACK (on_glulx_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) blorb_button_l, "toggled",
                    G_CALLBACK (on_blorb_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) random_button_l, "toggled",
                    G_CALLBACK (on_random_button_toggled),
                    NULL);
  g_signal_connect_after ((gpointer) notebook_r, "switch_page",
                          G_CALLBACK (after_notebook_r_switch_page),
                          NULL);
  g_signal_connect ((gpointer) source_back_r, "clicked",
                    G_CALLBACK (on_back_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) source_forward_r, "clicked",
                    G_CALLBACK (on_forward_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) source_headings_r, "show_menu",
                    G_CALLBACK (on_source_headings_show_menu),
                    NULL);
  g_signal_connect ((gpointer) errors_back_r, "clicked",
                    G_CALLBACK (on_back_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) errors_forward_r, "clicked",
                    G_CALLBACK (on_forward_r_clicked),
                    NULL);
  g_signal_connect_after ((gpointer) errors_notebook_r, "switch_page",
                          G_CALLBACK (after_errors_notebook_r_switch_page),
                          NULL);
  g_signal_connect ((gpointer) index_back_r, "clicked",
                    G_CALLBACK (on_back_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) index_forward_r, "clicked",
                    G_CALLBACK (on_forward_r_clicked),
                    NULL);
  g_signal_connect_after ((gpointer) index_notebook_r, "switch_page",
                          G_CALLBACK (after_index_notebook_r_switch_page),
                          NULL);
  g_signal_connect ((gpointer) skein_back_r, "clicked",
                    G_CALLBACK (on_back_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) skein_forward_r, "clicked",
                    G_CALLBACK (on_forward_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) skein_labels_r, "show_menu",
                    G_CALLBACK (on_skein_labels_show_menu),
                    NULL);
  g_signal_connect ((gpointer) skein_layout_r, "clicked",
                    G_CALLBACK (on_skein_layout_clicked),
                    NULL);
  g_signal_connect ((gpointer) skein_trim_r, "clicked",
                    G_CALLBACK (on_skein_trim_clicked),
                    NULL);
  g_signal_connect ((gpointer) skein_play_all_r, "clicked",
                    G_CALLBACK (on_skein_play_all_clicked),
                    NULL);
  g_signal_connect ((gpointer) transcript_back_r, "clicked",
                    G_CALLBACK (on_back_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) transcript_forward_r, "clicked",
                    G_CALLBACK (on_forward_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) game_back_r, "clicked",
                    G_CALLBACK (on_back_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) game_forward_r, "clicked",
                    G_CALLBACK (on_forward_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) game_viewport_r, "size_allocate",
                    G_CALLBACK (on_game_viewport_r_size_allocate),
                    NULL);
  g_signal_connect ((gpointer) docs_back_r, "clicked",
                    G_CALLBACK (on_back_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) docs_forward_r, "clicked",
                    G_CALLBACK (on_forward_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) docs_contents_r, "clicked",
                    G_CALLBACK (on_docs_contents_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) settings_back_r, "clicked",
                    G_CALLBACK (on_back_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) settings_forward_r, "clicked",
                    G_CALLBACK (on_forward_r_clicked),
                    NULL);
  g_signal_connect ((gpointer) z5_button_r, "toggled",
                    G_CALLBACK (on_z5_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) z6_button_r, "toggled",
                    G_CALLBACK (on_z6_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) z8_button_r, "toggled",
                    G_CALLBACK (on_z8_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) glulx_button_r, "toggled",
                    G_CALLBACK (on_glulx_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) blorb_button_r, "toggled",
                    G_CALLBACK (on_blorb_button_toggled),
                    NULL);
  g_signal_connect ((gpointer) random_button_r, "toggled",
                    G_CALLBACK (on_random_button_toggled),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (app_window, app_window, "app_window");
  GLADE_HOOKUP_OBJECT (app_window, bonobodock1, "bonobodock1");
  GLADE_HOOKUP_OBJECT (app_window, menubar1_uiinfo[0].widget, "filemenu");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[0].widget, "new");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[1].widget, "open");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[2].widget, "open_recent");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[3].widget, "separator8");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[4].widget, "install_extension");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[5].widget, "open_extension");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[6].widget, "separator9");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[7].widget, "close");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[8].widget, "save");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[9].widget, "save_as");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[10].widget, "revert");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[11].widget, "separator26");
  GLADE_HOOKUP_OBJECT (app_window, filemenu_menu_uiinfo[12].widget, "quit");
  GLADE_HOOKUP_OBJECT (app_window, menubar1_uiinfo[1].widget, "edit");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[0].widget, "undo");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[1].widget, "redo");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[2].widget, "separator10");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[3].widget, "cut");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[4].widget, "copy");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[5].widget, "paste");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[6].widget, "select_all");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[7].widget, "separator4");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[8].widget, "find");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[9].widget, "spelling");
  GLADE_HOOKUP_OBJECT (app_window, spelling_menu_uiinfo[0].widget, "autocheck_spelling");
  GLADE_HOOKUP_OBJECT (app_window, spelling_menu_uiinfo[1].widget, "check_spelling");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[10].widget, "separator23");
  GLADE_HOOKUP_OBJECT (app_window, edit_menu_uiinfo[11].widget, "preferences");
  GLADE_HOOKUP_OBJECT (app_window, menubar1_uiinfo[2].widget, "format");
  GLADE_HOOKUP_OBJECT (app_window, format_menu_uiinfo[0].widget, "shift_selection_right");
  GLADE_HOOKUP_OBJECT (app_window, format_menu_uiinfo[1].widget, "shift_selection_left");
  GLADE_HOOKUP_OBJECT (app_window, format_menu_uiinfo[2].widget, "comment_out_selection");
  GLADE_HOOKUP_OBJECT (app_window, format_menu_uiinfo[3].widget, "uncomment_selection");
  GLADE_HOOKUP_OBJECT (app_window, format_menu_uiinfo[4].widget, "separator31");
  GLADE_HOOKUP_OBJECT (app_window, format_menu_uiinfo[5].widget, "renumber_all_sections");
  GLADE_HOOKUP_OBJECT (app_window, menubar1_uiinfo[3].widget, "play");
  GLADE_HOOKUP_OBJECT (app_window, play_menu_uiinfo[0].widget, "go");
  GLADE_HOOKUP_OBJECT (app_window, play_menu_uiinfo[1].widget, "test_me");
  GLADE_HOOKUP_OBJECT (app_window, play_menu_uiinfo[2].widget, "stop");
  GLADE_HOOKUP_OBJECT (app_window, play_menu_uiinfo[3].widget, "separator27");
  GLADE_HOOKUP_OBJECT (app_window, play_menu_uiinfo[4].widget, "refresh_index");
  GLADE_HOOKUP_OBJECT (app_window, menubar1_uiinfo[4].widget, "replay");
  GLADE_HOOKUP_OBJECT (app_window, replay_menu_uiinfo[0].widget, "replay");
  GLADE_HOOKUP_OBJECT (app_window, replay_menu_uiinfo[1].widget, "separator12");
  GLADE_HOOKUP_OBJECT (app_window, replay_menu_uiinfo[2].widget, "show_last_command_in_skein");
  GLADE_HOOKUP_OBJECT (app_window, menubar1_uiinfo[5].widget, "release");
  GLADE_HOOKUP_OBJECT (app_window, release_menu_uiinfo[0].widget, "release");
  GLADE_HOOKUP_OBJECT (app_window, release_menu_uiinfo[1].widget, "save_debug_build");
  GLADE_HOOKUP_OBJECT (app_window, release_menu_uiinfo[2].widget, "separator32");
  GLADE_HOOKUP_OBJECT (app_window, release_menu_uiinfo[3].widget, "open_materials_folder");
  GLADE_HOOKUP_OBJECT (app_window, release_menu_uiinfo[4].widget, "separator33");
  GLADE_HOOKUP_OBJECT (app_window, release_menu_uiinfo[5].widget, "export_ifiction_record");
  GLADE_HOOKUP_OBJECT (app_window, menubar1_uiinfo[6].widget, "windows");
  GLADE_HOOKUP_OBJECT (app_window, windows_menu_uiinfo[0].widget, "show_inspectors");
  GLADE_HOOKUP_OBJECT (app_window, windows_menu_uiinfo[1].widget, "show_tabs");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[0].widget, "show_source");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[1].widget, "show_errors");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[2].widget, "show_index");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[3].widget, "show_skein");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[4].widget, "show_game");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[5].widget, "show_documentation");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[6].widget, "show_settings");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[7].widget, "separator28");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[8].widget, "switch_sides");
  GLADE_HOOKUP_OBJECT (app_window, show_tabs_menu_uiinfo[9].widget, "next_sub_panel");
  GLADE_HOOKUP_OBJECT (app_window, windows_menu_uiinfo[2].widget, "show_index");
  GLADE_HOOKUP_OBJECT (app_window, show_index_menu_uiinfo[0].widget, "show_actions");
  GLADE_HOOKUP_OBJECT (app_window, show_index_menu_uiinfo[1].widget, "show_contents");
  GLADE_HOOKUP_OBJECT (app_window, show_index_menu_uiinfo[2].widget, "show_kinds");
  GLADE_HOOKUP_OBJECT (app_window, show_index_menu_uiinfo[3].widget, "show_phrasebook");
  GLADE_HOOKUP_OBJECT (app_window, show_index_menu_uiinfo[4].widget, "show_rules");
  GLADE_HOOKUP_OBJECT (app_window, show_index_menu_uiinfo[5].widget, "show_scenes");
  GLADE_HOOKUP_OBJECT (app_window, show_index_menu_uiinfo[6].widget, "show_world");
  GLADE_HOOKUP_OBJECT (app_window, windows_menu_uiinfo[3].widget, "separator13");
  GLADE_HOOKUP_OBJECT (app_window, menubar1_uiinfo[7].widget, "help");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[0].widget, "inform_help");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[1].widget, "license");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[2].widget, "suggest_a_feature");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[3].widget, "report_a_bug");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[4].widget, "separator14");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[5].widget, "help_extensions");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[6].widget, "recipe_book");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[7].widget, "separator15");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[8].widget, "visit_inform7com");
  GLADE_HOOKUP_OBJECT (app_window, help_menu_uiinfo[9].widget, "about");
  GLADE_HOOKUP_OBJECT (app_window, toolbar1, "toolbar1");
  GLADE_HOOKUP_OBJECT (app_window, go_toolbutton, "go_toolbutton");
  GLADE_HOOKUP_OBJECT (app_window, replay_toolbutton, "replay_toolbutton");
  GLADE_HOOKUP_OBJECT (app_window, stop_toolbutton, "stop_toolbutton");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem1, "separatortoolitem1");
  GLADE_HOOKUP_OBJECT (app_window, release_toolbutton, "release_toolbutton");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem2, "separatortoolitem2");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem12, "separatortoolitem12");
  GLADE_HOOKUP_OBJECT (app_window, toolitem3, "toolitem3");
  GLADE_HOOKUP_OBJECT (app_window, image12, "image12");
  GLADE_HOOKUP_OBJECT (app_window, toolitem5, "toolitem5");
  GLADE_HOOKUP_OBJECT (app_window, docs_search, "docs_search");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem3, "separatortoolitem3");
  GLADE_HOOKUP_OBJECT (app_window, help_toolbutton, "help_toolbutton");
  GLADE_HOOKUP_OBJECT (app_window, facingpages, "facingpages");
  GLADE_HOOKUP_OBJECT (app_window, notebook_l, "notebook_l");
  GLADE_HOOKUP_OBJECT (app_window, vbox37, "vbox37");
  GLADE_HOOKUP_OBJECT (app_window, toolbar2, "toolbar2");
  GLADE_HOOKUP_OBJECT (app_window, source_back_l, "source_back_l");
  GLADE_HOOKUP_OBJECT (app_window, source_forward_l, "source_forward_l");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem4, "separatortoolitem4");
  GLADE_HOOKUP_OBJECT (app_window, source_headings_l, "source_headings_l");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow12, "scrolledwindow12");
  GLADE_HOOKUP_OBJECT (app_window, source_l, "source_l");
  GLADE_HOOKUP_OBJECT (app_window, label8, "label8");
  GLADE_HOOKUP_OBJECT (app_window, vbox39, "vbox39");
  GLADE_HOOKUP_OBJECT (app_window, toolbar4, "toolbar4");
  GLADE_HOOKUP_OBJECT (app_window, errors_back_l, "errors_back_l");
  GLADE_HOOKUP_OBJECT (app_window, errors_forward_l, "errors_forward_l");
  GLADE_HOOKUP_OBJECT (app_window, errors_notebook_l, "errors_notebook_l");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow2, "scrolledwindow2");
  GLADE_HOOKUP_OBJECT (app_window, compiler_output_l, "compiler_output_l");
  GLADE_HOOKUP_OBJECT (app_window, label16, "label16");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow15, "scrolledwindow15");
  GLADE_HOOKUP_OBJECT (app_window, problems_l, "problems_l");
  GLADE_HOOKUP_OBJECT (app_window, label17, "label17");
  GLADE_HOOKUP_OBJECT (app_window, debugging_page_l, "debugging_page_l");
  GLADE_HOOKUP_OBJECT (app_window, debugging_l, "debugging_l");
  GLADE_HOOKUP_OBJECT (app_window, label89, "label89");
  GLADE_HOOKUP_OBJECT (app_window, inform6_page_l, "inform6_page_l");
  GLADE_HOOKUP_OBJECT (app_window, inform6_l, "inform6_l");
  GLADE_HOOKUP_OBJECT (app_window, label90, "label90");
  GLADE_HOOKUP_OBJECT (app_window, label9, "label9");
  GLADE_HOOKUP_OBJECT (app_window, vbox41, "vbox41");
  GLADE_HOOKUP_OBJECT (app_window, toolbar6, "toolbar6");
  GLADE_HOOKUP_OBJECT (app_window, index_back_l, "index_back_l");
  GLADE_HOOKUP_OBJECT (app_window, index_forward_l, "index_forward_l");
  GLADE_HOOKUP_OBJECT (app_window, index_notebook_l, "index_notebook_l");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow16, "scrolledwindow16");
  GLADE_HOOKUP_OBJECT (app_window, actions_l, "actions_l");
  GLADE_HOOKUP_OBJECT (app_window, label18, "label18");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow17, "scrolledwindow17");
  GLADE_HOOKUP_OBJECT (app_window, contents_l, "contents_l");
  GLADE_HOOKUP_OBJECT (app_window, label19, "label19");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow18, "scrolledwindow18");
  GLADE_HOOKUP_OBJECT (app_window, kinds_l, "kinds_l");
  GLADE_HOOKUP_OBJECT (app_window, label20, "label20");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow19, "scrolledwindow19");
  GLADE_HOOKUP_OBJECT (app_window, phrasebook_l, "phrasebook_l");
  GLADE_HOOKUP_OBJECT (app_window, label21, "label21");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow20, "scrolledwindow20");
  GLADE_HOOKUP_OBJECT (app_window, rules_l, "rules_l");
  GLADE_HOOKUP_OBJECT (app_window, label22, "label22");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow21, "scrolledwindow21");
  GLADE_HOOKUP_OBJECT (app_window, scenes_l, "scenes_l");
  GLADE_HOOKUP_OBJECT (app_window, label23, "label23");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow22, "scrolledwindow22");
  GLADE_HOOKUP_OBJECT (app_window, world_l, "world_l");
  GLADE_HOOKUP_OBJECT (app_window, label24, "label24");
  GLADE_HOOKUP_OBJECT (app_window, label10, "label10");
  GLADE_HOOKUP_OBJECT (app_window, vbox3, "vbox3");
  GLADE_HOOKUP_OBJECT (app_window, toolbar8, "toolbar8");
  GLADE_HOOKUP_OBJECT (app_window, skein_back_l, "skein_back_l");
  GLADE_HOOKUP_OBJECT (app_window, skein_forward_l, "skein_forward_l");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem6, "separatortoolitem6");
  GLADE_HOOKUP_OBJECT (app_window, skein_labels_l, "skein_labels_l");
  GLADE_HOOKUP_OBJECT (app_window, skein_layout_l, "skein_layout_l");
  GLADE_HOOKUP_OBJECT (app_window, skein_trim_l, "skein_trim_l");
  GLADE_HOOKUP_OBJECT (app_window, skein_play_all_l, "skein_play_all_l");
  GLADE_HOOKUP_OBJECT (app_window, skein_l_scroll, "skein_l_scroll");
  GLADE_HOOKUP_OBJECT (app_window, skein_l, "skein_l");
  GLADE_HOOKUP_OBJECT (app_window, label11, "label11");
  GLADE_HOOKUP_OBJECT (app_window, vbox9, "vbox9");
  GLADE_HOOKUP_OBJECT (app_window, toolbar10, "toolbar10");
  GLADE_HOOKUP_OBJECT (app_window, transcript_back_l, "transcript_back_l");
  GLADE_HOOKUP_OBJECT (app_window, transcript_forward_l, "transcript_forward_l");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem8, "separatortoolitem8");
  GLADE_HOOKUP_OBJECT (app_window, transcript_bless_all_l, "transcript_bless_all_l");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow9, "scrolledwindow9");
  GLADE_HOOKUP_OBJECT (app_window, treeview1, "treeview1");
  GLADE_HOOKUP_OBJECT (app_window, label12, "label12");
  GLADE_HOOKUP_OBJECT (app_window, vbox50, "vbox50");
  GLADE_HOOKUP_OBJECT (app_window, toolbar12, "toolbar12");
  GLADE_HOOKUP_OBJECT (app_window, game_back_l, "game_back_l");
  GLADE_HOOKUP_OBJECT (app_window, game_forward_l, "game_forward_l");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow39, "scrolledwindow39");
  GLADE_HOOKUP_OBJECT (app_window, game_viewport_l, "game_viewport_l");
  GLADE_HOOKUP_OBJECT (app_window, game_l, "game_l");
  GLADE_HOOKUP_OBJECT (app_window, label13, "label13");
  GLADE_HOOKUP_OBJECT (app_window, vbox47, "vbox47");
  GLADE_HOOKUP_OBJECT (app_window, toolbar14, "toolbar14");
  GLADE_HOOKUP_OBJECT (app_window, docs_back_l, "docs_back_l");
  GLADE_HOOKUP_OBJECT (app_window, docs_forward_l, "docs_forward_l");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem10, "separatortoolitem10");
  GLADE_HOOKUP_OBJECT (app_window, docs_contents_l, "docs_contents_l");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow46, "scrolledwindow46");
  GLADE_HOOKUP_OBJECT (app_window, docs_l, "docs_l");
  GLADE_HOOKUP_OBJECT (app_window, label14, "label14");
  GLADE_HOOKUP_OBJECT (app_window, vbox4, "vbox4");
  GLADE_HOOKUP_OBJECT (app_window, toolbar16, "toolbar16");
  GLADE_HOOKUP_OBJECT (app_window, settings_back_l, "settings_back_l");
  GLADE_HOOKUP_OBJECT (app_window, settings_forward_l, "settings_forward_l");
  GLADE_HOOKUP_OBJECT (app_window, frame1, "frame1");
  GLADE_HOOKUP_OBJECT (app_window, alignment4, "alignment4");
  GLADE_HOOKUP_OBJECT (app_window, vbox5, "vbox5");
  GLADE_HOOKUP_OBJECT (app_window, label107, "label107");
  GLADE_HOOKUP_OBJECT (app_window, z5_button_l, "z5_button_l");
  GLADE_HOOKUP_OBJECT (app_window, z6_button_l, "z6_button_l");
  GLADE_HOOKUP_OBJECT (app_window, z8_button_l, "z8_button_l");
  GLADE_HOOKUP_OBJECT (app_window, glulx_button_l, "glulx_button_l");
  GLADE_HOOKUP_OBJECT (app_window, label109, "label109");
  GLADE_HOOKUP_OBJECT (app_window, blorb_button_l, "blorb_button_l");
  GLADE_HOOKUP_OBJECT (app_window, label25, "label25");
  GLADE_HOOKUP_OBJECT (app_window, frame14, "frame14");
  GLADE_HOOKUP_OBJECT (app_window, alignment26, "alignment26");
  GLADE_HOOKUP_OBJECT (app_window, vbox55, "vbox55");
  GLADE_HOOKUP_OBJECT (app_window, label111, "label111");
  GLADE_HOOKUP_OBJECT (app_window, random_button_l, "random_button_l");
  GLADE_HOOKUP_OBJECT (app_window, label105, "label105");
  GLADE_HOOKUP_OBJECT (app_window, label15, "label15");
  GLADE_HOOKUP_OBJECT (app_window, notebook_r, "notebook_r");
  GLADE_HOOKUP_OBJECT (app_window, vbox38, "vbox38");
  GLADE_HOOKUP_OBJECT (app_window, toolbar3, "toolbar3");
  GLADE_HOOKUP_OBJECT (app_window, source_back_r, "source_back_r");
  GLADE_HOOKUP_OBJECT (app_window, source_forward_r, "source_forward_r");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem5, "separatortoolitem5");
  GLADE_HOOKUP_OBJECT (app_window, source_headings_r, "source_headings_r");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow13, "scrolledwindow13");
  GLADE_HOOKUP_OBJECT (app_window, source_r, "source_r");
  GLADE_HOOKUP_OBJECT (app_window, label26, "label26");
  GLADE_HOOKUP_OBJECT (app_window, vbox40, "vbox40");
  GLADE_HOOKUP_OBJECT (app_window, toolbar5, "toolbar5");
  GLADE_HOOKUP_OBJECT (app_window, errors_back_r, "errors_back_r");
  GLADE_HOOKUP_OBJECT (app_window, errors_forward_r, "errors_forward_r");
  GLADE_HOOKUP_OBJECT (app_window, errors_notebook_r, "errors_notebook_r");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow5, "scrolledwindow5");
  GLADE_HOOKUP_OBJECT (app_window, compiler_output_r, "compiler_output_r");
  GLADE_HOOKUP_OBJECT (app_window, label27, "label27");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow25, "scrolledwindow25");
  GLADE_HOOKUP_OBJECT (app_window, problems_r, "problems_r");
  GLADE_HOOKUP_OBJECT (app_window, label28, "label28");
  GLADE_HOOKUP_OBJECT (app_window, debugging_page_r, "debugging_page_r");
  GLADE_HOOKUP_OBJECT (app_window, debugging_r, "debugging_r");
  GLADE_HOOKUP_OBJECT (app_window, label91, "label91");
  GLADE_HOOKUP_OBJECT (app_window, inform6_page_r, "inform6_page_r");
  GLADE_HOOKUP_OBJECT (app_window, inform6_r, "inform6_r");
  GLADE_HOOKUP_OBJECT (app_window, label92, "label92");
  GLADE_HOOKUP_OBJECT (app_window, label29, "label29");
  GLADE_HOOKUP_OBJECT (app_window, vbox42, "vbox42");
  GLADE_HOOKUP_OBJECT (app_window, toolbar7, "toolbar7");
  GLADE_HOOKUP_OBJECT (app_window, index_back_r, "index_back_r");
  GLADE_HOOKUP_OBJECT (app_window, index_forward_r, "index_forward_r");
  GLADE_HOOKUP_OBJECT (app_window, index_notebook_r, "index_notebook_r");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow26, "scrolledwindow26");
  GLADE_HOOKUP_OBJECT (app_window, actions_r, "actions_r");
  GLADE_HOOKUP_OBJECT (app_window, label30, "label30");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow27, "scrolledwindow27");
  GLADE_HOOKUP_OBJECT (app_window, contents_r, "contents_r");
  GLADE_HOOKUP_OBJECT (app_window, label31, "label31");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow28, "scrolledwindow28");
  GLADE_HOOKUP_OBJECT (app_window, kinds_r, "kinds_r");
  GLADE_HOOKUP_OBJECT (app_window, label32, "label32");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow29, "scrolledwindow29");
  GLADE_HOOKUP_OBJECT (app_window, phrasebook_r, "phrasebook_r");
  GLADE_HOOKUP_OBJECT (app_window, label33, "label33");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow30, "scrolledwindow30");
  GLADE_HOOKUP_OBJECT (app_window, rules_r, "rules_r");
  GLADE_HOOKUP_OBJECT (app_window, label34, "label34");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow31, "scrolledwindow31");
  GLADE_HOOKUP_OBJECT (app_window, scenes_r, "scenes_r");
  GLADE_HOOKUP_OBJECT (app_window, label35, "label35");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow32, "scrolledwindow32");
  GLADE_HOOKUP_OBJECT (app_window, world_r, "world_r");
  GLADE_HOOKUP_OBJECT (app_window, label36, "label36");
  GLADE_HOOKUP_OBJECT (app_window, label37, "label37");
  GLADE_HOOKUP_OBJECT (app_window, vbox6, "vbox6");
  GLADE_HOOKUP_OBJECT (app_window, toolbar9, "toolbar9");
  GLADE_HOOKUP_OBJECT (app_window, skein_back_r, "skein_back_r");
  GLADE_HOOKUP_OBJECT (app_window, skein_forward_r, "skein_forward_r");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem7, "separatortoolitem7");
  GLADE_HOOKUP_OBJECT (app_window, skein_labels_r, "skein_labels_r");
  GLADE_HOOKUP_OBJECT (app_window, skein_layout_r, "skein_layout_r");
  GLADE_HOOKUP_OBJECT (app_window, skein_trim_r, "skein_trim_r");
  GLADE_HOOKUP_OBJECT (app_window, skein_play_all_r, "skein_play_all_r");
  GLADE_HOOKUP_OBJECT (app_window, skein_r_scroll, "skein_r_scroll");
  GLADE_HOOKUP_OBJECT (app_window, skein_r, "skein_r");
  GLADE_HOOKUP_OBJECT (app_window, label38, "label38");
  GLADE_HOOKUP_OBJECT (app_window, vbox10, "vbox10");
  GLADE_HOOKUP_OBJECT (app_window, toolbar11, "toolbar11");
  GLADE_HOOKUP_OBJECT (app_window, transcript_back_r, "transcript_back_r");
  GLADE_HOOKUP_OBJECT (app_window, transcript_forward_r, "transcript_forward_r");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem9, "separatortoolitem9");
  GLADE_HOOKUP_OBJECT (app_window, transcript_bless_all_r, "transcript_bless_all_r");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow10, "scrolledwindow10");
  GLADE_HOOKUP_OBJECT (app_window, treeview2, "treeview2");
  GLADE_HOOKUP_OBJECT (app_window, label39, "label39");
  GLADE_HOOKUP_OBJECT (app_window, vbox49, "vbox49");
  GLADE_HOOKUP_OBJECT (app_window, toolbar13, "toolbar13");
  GLADE_HOOKUP_OBJECT (app_window, game_back_r, "game_back_r");
  GLADE_HOOKUP_OBJECT (app_window, game_forward_r, "game_forward_r");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow40, "scrolledwindow40");
  GLADE_HOOKUP_OBJECT (app_window, game_viewport_r, "game_viewport_r");
  GLADE_HOOKUP_OBJECT (app_window, game_r, "game_r");
  GLADE_HOOKUP_OBJECT (app_window, label40, "label40");
  GLADE_HOOKUP_OBJECT (app_window, vbox48, "vbox48");
  GLADE_HOOKUP_OBJECT (app_window, toolbar15, "toolbar15");
  GLADE_HOOKUP_OBJECT (app_window, docs_back_r, "docs_back_r");
  GLADE_HOOKUP_OBJECT (app_window, docs_forward_r, "docs_forward_r");
  GLADE_HOOKUP_OBJECT (app_window, separatortoolitem11, "separatortoolitem11");
  GLADE_HOOKUP_OBJECT (app_window, docs_contents_r, "docs_contents_r");
  GLADE_HOOKUP_OBJECT (app_window, scrolledwindow47, "scrolledwindow47");
  GLADE_HOOKUP_OBJECT (app_window, docs_r, "docs_r");
  GLADE_HOOKUP_OBJECT (app_window, label41, "label41");
  GLADE_HOOKUP_OBJECT (app_window, vbox7, "vbox7");
  GLADE_HOOKUP_OBJECT (app_window, toolbar17, "toolbar17");
  GLADE_HOOKUP_OBJECT (app_window, settings_back_r, "settings_back_r");
  GLADE_HOOKUP_OBJECT (app_window, settings_forward_r, "settings_forward_r");
  GLADE_HOOKUP_OBJECT (app_window, frame2, "frame2");
  GLADE_HOOKUP_OBJECT (app_window, alignment5, "alignment5");
  GLADE_HOOKUP_OBJECT (app_window, vbox8, "vbox8");
  GLADE_HOOKUP_OBJECT (app_window, label108, "label108");
  GLADE_HOOKUP_OBJECT (app_window, z5_button_r, "z5_button_r");
  GLADE_HOOKUP_OBJECT (app_window, z6_button_r, "z6_button_r");
  GLADE_HOOKUP_OBJECT (app_window, z8_button_r, "z8_button_r");
  GLADE_HOOKUP_OBJECT (app_window, glulx_button_r, "glulx_button_r");
  GLADE_HOOKUP_OBJECT (app_window, label110, "label110");
  GLADE_HOOKUP_OBJECT (app_window, blorb_button_r, "blorb_button_r");
  GLADE_HOOKUP_OBJECT (app_window, label42, "label42");
  GLADE_HOOKUP_OBJECT (app_window, frame15, "frame15");
  GLADE_HOOKUP_OBJECT (app_window, alignment27, "alignment27");
  GLADE_HOOKUP_OBJECT (app_window, vbox56, "vbox56");
  GLADE_HOOKUP_OBJECT (app_window, label112, "label112");
  GLADE_HOOKUP_OBJECT (app_window, random_button_r, "random_button_r");
  GLADE_HOOKUP_OBJECT (app_window, label106, "label106");
  GLADE_HOOKUP_OBJECT (app_window, label43, "label43");
  GLADE_HOOKUP_OBJECT (app_window, main_appbar, "main_appbar");
  GLADE_HOOKUP_OBJECT_NO_REF (app_window, tooltips, "tooltips");

  return app_window;
}

GtkWidget*
create_about_window (void)
{
  GtkWidget *about_window;
  const gchar *authors[] = {
    "Inform written by:",
    "  Graham Nelson",
    "Glulx compiler written by:",
    "  Graham Nelson",
    "  Andrew Plotkin",
    "Inform front-end written by:",
    "  P.F. Chimento",
    "Contributions by:",
    "  Adam Thornton",
    "  Daniel Nilsson",
    "  Evil Tabby Cat",
    "  Eric Forgeot",
    "  Alan De Smet",
    "  Jonathan Liu",
    "  Zachary Amsden",
    "  David Leverton",
    "In addition, much code was adapted from David Kinder's Windows port.",
    "Interface designed by:",
    "  Graham Nelson",
    "  Andrew Hunter",
    "Gargoyle written by:",
    "  Tor Andersson",
    "Updated by:",
    "  Ben Cressey et al.",
    "Elastic Tabstops written by:",
    "  Nick Gravgaard",
    "Contributions to the compiler:",
    "  Emily Short",
    "  Gunther Schmidl",
    "  Andrew Plotkin",
    "  Jason Penney",
    "  Joe Mason",
    "  Cedric Knight",
    "  David Kinder",
    "  Roger Firth",
    "  Michael Coyne",
    "  David Cornelson",
    "  Neil Cerutti",
    "  Kevin Bracey",
    NULL
  };
  gchar *translators = "\303\201ngel Eduardo (Spanish)";
  GdkPixbuf *about_window_logo_pixbuf;

  about_window = gtk_about_dialog_new ();
  gtk_container_set_border_width (GTK_CONTAINER (about_window), 5);
  gtk_window_set_destroy_with_parent (GTK_WINDOW (about_window), TRUE);
  gtk_about_dialog_set_version (GTK_ABOUT_DIALOG (about_window), VERSION);
  gtk_about_dialog_set_name (GTK_ABOUT_DIALOG (about_window), _("GNOME Inform 7"));
  gtk_about_dialog_set_copyright (GTK_ABOUT_DIALOG (about_window), _("Inform (1.1 6.31N/@PACKAGE_VERSION@)\n\nCopyright 2006-@COPYRIGHT_YEAR@ P.F. Chimento (front end),\nGraham Nelson et al. (compiler)."));
  gtk_about_dialog_set_comments (GTK_ABOUT_DIALOG (about_window), _("A GNOME IDE for Inform 7"));
  gtk_about_dialog_set_license (GTK_ABOUT_DIALOG (about_window), _("See Help/License for licensing information."));
  gtk_about_dialog_set_website (GTK_ABOUT_DIALOG (about_window), "http://inform7.com/");
  gtk_about_dialog_set_website_label (GTK_ABOUT_DIALOG (about_window), "inform7.com");
  gtk_about_dialog_set_authors (GTK_ABOUT_DIALOG (about_window), authors);
  gtk_about_dialog_set_translator_credits (GTK_ABOUT_DIALOG (about_window), translators);
  about_window_logo_pixbuf = create_pixbuf ("gnome-inform7/Inform-large.png");
  gtk_about_dialog_set_logo (GTK_ABOUT_DIALOG (about_window), about_window_logo_pixbuf);

  g_signal_connect ((gpointer) about_window, "response",
                    G_CALLBACK (gtk_widget_destroy),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (about_window, about_window, "about_window");

  return about_window;
}

GtkWidget*
create_welcome_dialog (void)
{
  GtkWidget *welcome_dialog;
  GdkPixbuf *welcome_dialog_icon_pixbuf;
  GtkWidget *vbox14;
  GtkWidget *welcome_label;
  GtkWidget *alignment7;
  GtkWidget *vbuttonbox1;
  GtkWidget *welcome_new_button;
  GtkWidget *alignment1;
  GtkWidget *hbox1;
  GtkWidget *image1;
  GtkWidget *label1;
  GtkWidget *welcome_reopen_button;
  GtkWidget *alignment2;
  GtkWidget *hbox2;
  GtkWidget *image2;
  GtkWidget *label2;
  GtkWidget *welcome_open_button;
  GtkWidget *alignment3;
  GtkWidget *hbox3;
  GtkWidget *image3;
  GtkWidget *label3;

  welcome_dialog = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (welcome_dialog, 550, 364);
  gtk_window_set_title (GTK_WINDOW (welcome_dialog), _("Welcome to Inform 7"));
  gtk_window_set_position (GTK_WINDOW (welcome_dialog), GTK_WIN_POS_CENTER_ALWAYS);
  gtk_window_set_modal (GTK_WINDOW (welcome_dialog), TRUE);
  gtk_window_set_destroy_with_parent (GTK_WINDOW (welcome_dialog), TRUE);
  welcome_dialog_icon_pixbuf = create_pixbuf ("gnome-inform7/Inform.png");
  if (welcome_dialog_icon_pixbuf)
    {
      gtk_window_set_icon (GTK_WINDOW (welcome_dialog), welcome_dialog_icon_pixbuf);
      gdk_pixbuf_unref (welcome_dialog_icon_pixbuf);
    }
  gtk_window_set_type_hint (GTK_WINDOW (welcome_dialog), GDK_WINDOW_TYPE_HINT_DIALOG);
  gtk_window_set_urgency_hint (GTK_WINDOW (welcome_dialog), TRUE);

  vbox14 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox14);
  gtk_container_add (GTK_CONTAINER (welcome_dialog), vbox14);

  welcome_label = gtk_label_new (_("Welcome to Inform 7, a design system\nfor interactive fiction based on natural\nlanguage.\n\nTo begin writing, please click one of the\nthree buttons below.\n\nInform 7 was created by Graham Nelson,\nwith the help of Emily Short and many\nothers. The GNOME front-end was written\nby P.F. Chimento.\n\nThis is Public Beta build @PACKAGE_VERSION@."));
  gtk_widget_show (welcome_label);
  gtk_box_pack_start (GTK_BOX (vbox14), welcome_label, FALSE, FALSE, 0);
  gtk_label_set_line_wrap (GTK_LABEL (welcome_label), TRUE);
  gtk_misc_set_alignment (GTK_MISC (welcome_label), 0.07, 0.5);
  gtk_misc_set_padding (GTK_MISC (welcome_label), 0, 12);

  alignment7 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment7);
  gtk_box_pack_start (GTK_BOX (vbox14), alignment7, TRUE, TRUE, 0);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment7), 0, 0, 315, 0);

  vbuttonbox1 = gtk_vbutton_box_new ();
  gtk_widget_show (vbuttonbox1);
  gtk_container_add (GTK_CONTAINER (alignment7), vbuttonbox1);
  gtk_container_set_border_width (GTK_CONTAINER (vbuttonbox1), 3);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (vbuttonbox1), GTK_BUTTONBOX_END);
  gtk_box_set_spacing (GTK_BOX (vbuttonbox1), 3);

  welcome_new_button = gtk_button_new ();
  gtk_widget_show (welcome_new_button);
  gtk_container_add (GTK_CONTAINER (vbuttonbox1), welcome_new_button);
  GTK_WIDGET_SET_FLAGS (welcome_new_button, GTK_CAN_DEFAULT);

  alignment1 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment1);
  gtk_container_add (GTK_CONTAINER (welcome_new_button), alignment1);

  hbox1 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox1);
  gtk_container_add (GTK_CONTAINER (alignment1), hbox1);

  image1 = gtk_image_new_from_stock ("gtk-new", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image1);
  gtk_box_pack_start (GTK_BOX (hbox1), image1, FALSE, FALSE, 0);

  label1 = gtk_label_new_with_mnemonic (_("Start a _new project"));
  gtk_widget_show (label1);
  gtk_box_pack_start (GTK_BOX (hbox1), label1, FALSE, FALSE, 0);

  welcome_reopen_button = gtk_button_new ();
  gtk_widget_show (welcome_reopen_button);
  gtk_container_add (GTK_CONTAINER (vbuttonbox1), welcome_reopen_button);
  gtk_widget_set_sensitive (welcome_reopen_button, FALSE);
  GTK_WIDGET_SET_FLAGS (welcome_reopen_button, GTK_CAN_DEFAULT);

  alignment2 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment2);
  gtk_container_add (GTK_CONTAINER (welcome_reopen_button), alignment2);

  hbox2 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox2);
  gtk_container_add (GTK_CONTAINER (alignment2), hbox2);

  image2 = gtk_image_new_from_stock ("gtk-jump-to", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image2);
  gtk_box_pack_start (GTK_BOX (hbox2), image2, FALSE, FALSE, 0);

  label2 = gtk_label_new_with_mnemonic (_("_Reopen last project"));
  gtk_widget_show (label2);
  gtk_box_pack_start (GTK_BOX (hbox2), label2, FALSE, FALSE, 0);

  welcome_open_button = gtk_button_new ();
  gtk_widget_show (welcome_open_button);
  gtk_container_add (GTK_CONTAINER (vbuttonbox1), welcome_open_button);
  GTK_WIDGET_SET_FLAGS (welcome_open_button, GTK_CAN_DEFAULT);

  alignment3 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment3);
  gtk_container_add (GTK_CONTAINER (welcome_open_button), alignment3);

  hbox3 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox3);
  gtk_container_add (GTK_CONTAINER (alignment3), hbox3);

  image3 = gtk_image_new_from_stock ("gtk-open", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image3);
  gtk_box_pack_start (GTK_BOX (hbox3), image3, FALSE, FALSE, 0);

  label3 = gtk_label_new_with_mnemonic (_("_Open an existing project"));
  gtk_widget_show (label3);
  gtk_box_pack_start (GTK_BOX (hbox3), label3, FALSE, FALSE, 0);

  g_signal_connect_after ((gpointer) welcome_dialog, "realize",
                          G_CALLBACK (after_welcome_dialog_realize),
                          NULL);
  g_signal_connect ((gpointer) welcome_dialog, "delete_event",
                    G_CALLBACK (on_welcome_dialog_delete_event),
                    NULL);
  g_signal_connect ((gpointer) welcome_new_button, "clicked",
                    G_CALLBACK (on_welcome_new_button_clicked),
                    NULL);
  g_signal_connect ((gpointer) welcome_reopen_button, "clicked",
                    G_CALLBACK (on_welcome_reopen_button_clicked),
                    NULL);
  g_signal_connect ((gpointer) welcome_open_button, "clicked",
                    G_CALLBACK (on_welcome_open_button_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (welcome_dialog, welcome_dialog, "welcome_dialog");
  GLADE_HOOKUP_OBJECT (welcome_dialog, vbox14, "vbox14");
  GLADE_HOOKUP_OBJECT (welcome_dialog, welcome_label, "welcome_label");
  GLADE_HOOKUP_OBJECT (welcome_dialog, alignment7, "alignment7");
  GLADE_HOOKUP_OBJECT (welcome_dialog, vbuttonbox1, "vbuttonbox1");
  GLADE_HOOKUP_OBJECT (welcome_dialog, welcome_new_button, "welcome_new_button");
  GLADE_HOOKUP_OBJECT (welcome_dialog, alignment1, "alignment1");
  GLADE_HOOKUP_OBJECT (welcome_dialog, hbox1, "hbox1");
  GLADE_HOOKUP_OBJECT (welcome_dialog, image1, "image1");
  GLADE_HOOKUP_OBJECT (welcome_dialog, label1, "label1");
  GLADE_HOOKUP_OBJECT (welcome_dialog, welcome_reopen_button, "welcome_reopen_button");
  GLADE_HOOKUP_OBJECT (welcome_dialog, alignment2, "alignment2");
  GLADE_HOOKUP_OBJECT (welcome_dialog, hbox2, "hbox2");
  GLADE_HOOKUP_OBJECT (welcome_dialog, image2, "image2");
  GLADE_HOOKUP_OBJECT (welcome_dialog, label2, "label2");
  GLADE_HOOKUP_OBJECT (welcome_dialog, welcome_open_button, "welcome_open_button");
  GLADE_HOOKUP_OBJECT (welcome_dialog, alignment3, "alignment3");
  GLADE_HOOKUP_OBJECT (welcome_dialog, hbox3, "hbox3");
  GLADE_HOOKUP_OBJECT (welcome_dialog, image3, "image3");
  GLADE_HOOKUP_OBJECT (welcome_dialog, label3, "label3");

  gtk_widget_grab_default (welcome_open_button);
  return welcome_dialog;
}

GtkWidget*
create_find_dialog (void)
{
  GtkWidget *find_dialog;
  GdkPixbuf *find_dialog_icon_pixbuf;
  GtkWidget *dialog_vbox3;
  GtkWidget *vbox12;
  GtkWidget *table1;
  GtkWidget *find_text;
  GtkWidget *label46;
  GtkWidget *find_replace_text;
  GtkWidget *label45;
  GtkWidget *hbox25;
  GtkWidget *find_ignore_case;
  GtkWidget *find_wrap;
  GtkWidget *find_algorithm;
  GtkWidget *dialog_action_area3;
  GtkWidget *find_replace_all;
  GtkWidget *find_replace_find;
  GtkWidget *alignment23;
  GtkWidget *hbox26;
  GtkWidget *image109;
  GtkWidget *label82;
  GtkWidget *find_previous;
  GtkWidget *alignment21;
  GtkWidget *hbox22;
  GtkWidget *image100;
  GtkWidget *label80;
  GtkWidget *find_next;
  GtkWidget *alignment22;
  GtkWidget *hbox23;
  GtkWidget *image101;
  GtkWidget *label81;
  GtkWidget *find_close;
  GtkTooltips *tooltips;

  tooltips = gtk_tooltips_new ();

  find_dialog = gtk_dialog_new ();
  gtk_window_set_title (GTK_WINDOW (find_dialog), _("Find"));
  gtk_window_set_destroy_with_parent (GTK_WINDOW (find_dialog), TRUE);
  find_dialog_icon_pixbuf = create_pixbuf ("gnome-inform7/Inform.png");
  if (find_dialog_icon_pixbuf)
    {
      gtk_window_set_icon (GTK_WINDOW (find_dialog), find_dialog_icon_pixbuf);
      gdk_pixbuf_unref (find_dialog_icon_pixbuf);
    }
  gtk_window_set_skip_pager_hint (GTK_WINDOW (find_dialog), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (find_dialog), GDK_WINDOW_TYPE_HINT_DIALOG);

  dialog_vbox3 = GTK_DIALOG (find_dialog)->vbox;
  gtk_widget_show (dialog_vbox3);

  vbox12 = gtk_vbox_new (TRUE, 0);
  gtk_widget_show (vbox12);
  gtk_box_pack_start (GTK_BOX (dialog_vbox3), vbox12, TRUE, TRUE, 0);

  table1 = gtk_table_new (2, 2, FALSE);
  gtk_widget_show (table1);
  gtk_box_pack_start (GTK_BOX (vbox12), table1, TRUE, TRUE, 0);

  find_text = gtk_entry_new ();
  gtk_widget_show (find_text);
  gtk_table_attach (GTK_TABLE (table1), find_text, 1, 2, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_invisible_char (GTK_ENTRY (find_text), 8226);
  gtk_entry_set_activates_default (GTK_ENTRY (find_text), TRUE);

  label46 = gtk_label_new_with_mnemonic (_("R_eplace with: "));
  gtk_widget_show (label46);
  gtk_table_attach (GTK_TABLE (table1), label46, 0, 1, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  find_replace_text = gtk_entry_new ();
  gtk_widget_show (find_replace_text);
  gtk_table_attach (GTK_TABLE (table1), find_replace_text, 1, 2, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_invisible_char (GTK_ENTRY (find_replace_text), 8226);

  label45 = gtk_label_new_with_mnemonic (_("_Search for: "));
  gtk_widget_show (label45);
  gtk_table_attach (GTK_TABLE (table1), label45, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  hbox25 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox25);
  gtk_box_pack_start (GTK_BOX (vbox12), hbox25, FALSE, FALSE, 0);

  find_ignore_case = gtk_check_button_new_with_mnemonic (_("_Ignore case"));
  gtk_widget_show (find_ignore_case);
  gtk_box_pack_start (GTK_BOX (hbox25), find_ignore_case, TRUE, TRUE, 0);
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (find_ignore_case), TRUE);

  find_wrap = gtk_check_button_new_with_mnemonic (_("_Wrap around"));
  gtk_widget_show (find_wrap);
  gtk_box_pack_start (GTK_BOX (hbox25), find_wrap, TRUE, TRUE, 0);
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (find_wrap), TRUE);

  find_algorithm = gtk_combo_box_new_text ();
  gtk_widget_show (find_algorithm);
  gtk_box_pack_start (GTK_BOX (hbox25), find_algorithm, TRUE, TRUE, 0);
  gtk_combo_box_append_text (GTK_COMBO_BOX (find_algorithm), _("Contains"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (find_algorithm), _("Starts with"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (find_algorithm), _("Full word"));

  dialog_action_area3 = GTK_DIALOG (find_dialog)->action_area;
  gtk_widget_show (dialog_action_area3);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (dialog_action_area3), GTK_BUTTONBOX_END);

  find_replace_all = gtk_button_new_with_mnemonic (_("Replace _all"));
  gtk_widget_show (find_replace_all);
  gtk_dialog_add_action_widget (GTK_DIALOG (find_dialog), find_replace_all, 0);
  gtk_widget_set_sensitive (find_replace_all, FALSE);
  GTK_WIDGET_SET_FLAGS (find_replace_all, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, find_replace_all, _("Replace all occurrences of the find text"), NULL);

  find_replace_find = gtk_button_new ();
  gtk_widget_show (find_replace_find);
  gtk_dialog_add_action_widget (GTK_DIALOG (find_dialog), find_replace_find, 0);
  gtk_widget_set_sensitive (find_replace_find, FALSE);
  GTK_WIDGET_SET_FLAGS (find_replace_find, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, find_replace_find, _("Replace selected text and find next occurrence of the find text"), NULL);

  alignment23 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment23);
  gtk_container_add (GTK_CONTAINER (find_replace_find), alignment23);

  hbox26 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox26);
  gtk_container_add (GTK_CONTAINER (alignment23), hbox26);

  image109 = gtk_image_new_from_stock ("gtk-find-and-replace", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image109);
  gtk_box_pack_start (GTK_BOX (hbox26), image109, FALSE, FALSE, 0);

  label82 = gtk_label_new_with_mnemonic (_("_Replace"));
  gtk_widget_show (label82);
  gtk_box_pack_start (GTK_BOX (hbox26), label82, FALSE, FALSE, 0);

  find_previous = gtk_button_new ();
  gtk_widget_show (find_previous);
  gtk_dialog_add_action_widget (GTK_DIALOG (find_dialog), find_previous, 0);
  gtk_widget_set_sensitive (find_previous, FALSE);
  GTK_WIDGET_SET_FLAGS (find_previous, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, find_previous, _("Find previous occurrence of the find text"), NULL);

  alignment21 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment21);
  gtk_container_add (GTK_CONTAINER (find_previous), alignment21);

  hbox22 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox22);
  gtk_container_add (GTK_CONTAINER (alignment21), hbox22);

  image100 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image100);
  gtk_box_pack_start (GTK_BOX (hbox22), image100, FALSE, FALSE, 0);

  label80 = gtk_label_new_with_mnemonic (_("_Previous"));
  gtk_widget_show (label80);
  gtk_box_pack_start (GTK_BOX (hbox22), label80, FALSE, FALSE, 0);

  find_next = gtk_button_new ();
  gtk_widget_show (find_next);
  gtk_dialog_add_action_widget (GTK_DIALOG (find_dialog), find_next, 0);
  gtk_widget_set_sensitive (find_next, FALSE);
  GTK_WIDGET_SET_FLAGS (find_next, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, find_next, _("Find next occurrence of the find text"), NULL);

  alignment22 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment22);
  gtk_container_add (GTK_CONTAINER (find_next), alignment22);

  hbox23 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox23);
  gtk_container_add (GTK_CONTAINER (alignment22), hbox23);

  image101 = gtk_image_new_from_stock ("gtk-go-forward", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image101);
  gtk_box_pack_start (GTK_BOX (hbox23), image101, FALSE, FALSE, 0);

  label81 = gtk_label_new_with_mnemonic (_("_Next"));
  gtk_widget_show (label81);
  gtk_box_pack_start (GTK_BOX (hbox23), label81, FALSE, FALSE, 0);

  find_close = gtk_button_new_from_stock ("gtk-close");
  gtk_widget_show (find_close);
  gtk_dialog_add_action_widget (GTK_DIALOG (find_dialog), find_close, GTK_RESPONSE_CLOSE);
  GTK_WIDGET_SET_FLAGS (find_close, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, find_close, _("Close this window"), NULL);

  g_signal_connect_after ((gpointer) find_dialog, "realize",
                          G_CALLBACK (after_find_dialog_realize),
                          NULL);
  g_signal_connect ((gpointer) find_text, "changed",
                    G_CALLBACK (on_find_text_changed),
                    NULL);
  g_signal_connect_swapped ((gpointer) find_close, "clicked",
                            G_CALLBACK (gtk_widget_destroy),
                            GTK_OBJECT (find_dialog));

  gtk_label_set_mnemonic_widget (GTK_LABEL (label46), find_replace_text);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label45), find_text);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (find_dialog, find_dialog, "find_dialog");
  GLADE_HOOKUP_OBJECT_NO_REF (find_dialog, dialog_vbox3, "dialog_vbox3");
  GLADE_HOOKUP_OBJECT (find_dialog, vbox12, "vbox12");
  GLADE_HOOKUP_OBJECT (find_dialog, table1, "table1");
  GLADE_HOOKUP_OBJECT (find_dialog, find_text, "find_text");
  GLADE_HOOKUP_OBJECT (find_dialog, label46, "label46");
  GLADE_HOOKUP_OBJECT (find_dialog, find_replace_text, "find_replace_text");
  GLADE_HOOKUP_OBJECT (find_dialog, label45, "label45");
  GLADE_HOOKUP_OBJECT (find_dialog, hbox25, "hbox25");
  GLADE_HOOKUP_OBJECT (find_dialog, find_ignore_case, "find_ignore_case");
  GLADE_HOOKUP_OBJECT (find_dialog, find_wrap, "find_wrap");
  GLADE_HOOKUP_OBJECT (find_dialog, find_algorithm, "find_algorithm");
  GLADE_HOOKUP_OBJECT_NO_REF (find_dialog, dialog_action_area3, "dialog_action_area3");
  GLADE_HOOKUP_OBJECT (find_dialog, find_replace_all, "find_replace_all");
  GLADE_HOOKUP_OBJECT (find_dialog, find_replace_find, "find_replace_find");
  GLADE_HOOKUP_OBJECT (find_dialog, alignment23, "alignment23");
  GLADE_HOOKUP_OBJECT (find_dialog, hbox26, "hbox26");
  GLADE_HOOKUP_OBJECT (find_dialog, image109, "image109");
  GLADE_HOOKUP_OBJECT (find_dialog, label82, "label82");
  GLADE_HOOKUP_OBJECT (find_dialog, find_previous, "find_previous");
  GLADE_HOOKUP_OBJECT (find_dialog, alignment21, "alignment21");
  GLADE_HOOKUP_OBJECT (find_dialog, hbox22, "hbox22");
  GLADE_HOOKUP_OBJECT (find_dialog, image100, "image100");
  GLADE_HOOKUP_OBJECT (find_dialog, label80, "label80");
  GLADE_HOOKUP_OBJECT (find_dialog, find_next, "find_next");
  GLADE_HOOKUP_OBJECT (find_dialog, alignment22, "alignment22");
  GLADE_HOOKUP_OBJECT (find_dialog, hbox23, "hbox23");
  GLADE_HOOKUP_OBJECT (find_dialog, image101, "image101");
  GLADE_HOOKUP_OBJECT (find_dialog, label81, "label81");
  GLADE_HOOKUP_OBJECT (find_dialog, find_close, "find_close");
  GLADE_HOOKUP_OBJECT_NO_REF (find_dialog, tooltips, "tooltips");

  gtk_widget_grab_focus (find_text);
  gtk_widget_grab_default (find_next);
  return find_dialog;
}

static GnomeUIInfo xfile_menu_uiinfo[] =
{
  GNOMEUIINFO_MENU_NEW_ITEM (N_("_New"), N_("Start a new extension"), on_new_activate, NULL),
  GNOMEUIINFO_MENU_OPEN_ITEM (on_open_activate, NULL),
  {
    GNOME_APP_UI_ITEM, N_("Open Recent"),
    N_("Open a recently used file"),
    (gpointer) NULL, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  {
    GNOME_APP_UI_ITEM, N_("_Install Extension..."),
    N_("Install an extension for use in Inform projects"),
    (gpointer) on_install_extension_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("Open _Extension"),
    N_("Open an existing extension"),
    (gpointer) NULL, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_CLOSE_ITEM (on_xclose_activate, NULL),
  GNOMEUIINFO_MENU_SAVE_ITEM (on_xsave_activate, NULL),
  GNOMEUIINFO_MENU_SAVE_AS_ITEM (on_xsave_as_activate, NULL),
  GNOMEUIINFO_MENU_REVERT_ITEM (on_xrevert_activate, NULL),
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_EXIT_ITEM (on_quit_activate, NULL),
  GNOMEUIINFO_END
};

static GnomeUIInfo xspelling_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_TOGGLEITEM, N_("_Autocheck Spelling"),
    N_("Automatically underline misspelled words in the story"),
    (gpointer) on_xautocheck_spelling_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("_Recheck Document"),
    N_("Spellcheck the entire story now"),
    (gpointer) on_xcheck_spelling_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-spell-check",
    GDK_F7, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_END
};

static GnomeUIInfo xedit_menu_uiinfo[] =
{
  GNOMEUIINFO_MENU_UNDO_ITEM (on_xundo_activate, NULL),
  GNOMEUIINFO_MENU_REDO_ITEM (on_xredo_activate, NULL),
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_CUT_ITEM (on_xcut_activate, NULL),
  GNOMEUIINFO_MENU_COPY_ITEM (on_xcopy_activate, NULL),
  GNOMEUIINFO_MENU_PASTE_ITEM (on_xpaste_activate, NULL),
  GNOMEUIINFO_MENU_SELECT_ALL_ITEM (on_xselect_all_activate, NULL),
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_FIND_ITEM (on_xfind_activate, NULL),
  {
    GNOME_APP_UI_SUBTREE, N_("_Spelling"),
    NULL,
    xspelling_menu_uiinfo, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-spell-check",
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_MENU_PREFERENCES_ITEM (on_preferences_activate, NULL),
  GNOMEUIINFO_END
};

static GnomeUIInfo xformat_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("Shift Selection _Right"),
    NULL,
    (gpointer) on_xshift_selection_right_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_bracketright, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  {
    GNOME_APP_UI_ITEM, N_("Shift Selection _Left"),
    NULL,
    (gpointer) on_xshift_selection_left_activate, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    GDK_bracketleft, (GdkModifierType) GDK_CONTROL_MASK, NULL
  },
  GNOMEUIINFO_END
};

static GnomeUIInfo xwindows_menu_uiinfo[] =
{
  {
    GNOME_APP_UI_ITEM, N_("Show _Inspectors"),
    N_("Show the inspectors toolbar"),
    (gpointer) on_show_inspectors_activate, NULL, NULL,
    GNOME_APP_PIXMAP_STOCK, "gtk-zoom-in",
    GDK_I, (GdkModifierType) GDK_CONTROL_MASK | GDK_MOD1_MASK, NULL
  },
  GNOMEUIINFO_SEPARATOR,
  GNOMEUIINFO_END
};

static GnomeUIInfo menubar2_uiinfo[] =
{
  GNOMEUIINFO_MENU_FILE_TREE (xfile_menu_uiinfo),
  GNOMEUIINFO_MENU_EDIT_TREE (xedit_menu_uiinfo),
  {
    GNOME_APP_UI_SUBTREE, N_("Fo_rmat"),
    NULL,
    xformat_menu_uiinfo, NULL, NULL,
    GNOME_APP_PIXMAP_NONE, NULL,
    0, (GdkModifierType) 0, NULL
  },
  GNOMEUIINFO_MENU_WINDOWS_TREE (xwindows_menu_uiinfo),
  GNOMEUIINFO_END
};

GtkWidget*
create_ext_window (void)
{
  GtkWidget *ext_window;
  GdkPixbuf *ext_window_icon_pixbuf;
  GtkWidget *bonobodock2;
  GtkWidget *scrolledwindow34;
  GtkWidget *ext_code;
  GtkWidget *extension_appbar;

  ext_window = gnome_app_new ("GNOME Inform 7", _("Inform"));
  gtk_window_set_default_size (GTK_WINDOW (ext_window), 500, 650);
  ext_window_icon_pixbuf = create_pixbuf ("gnome-inform7/Inform.png");
  if (ext_window_icon_pixbuf)
    {
      gtk_window_set_icon (GTK_WINDOW (ext_window), ext_window_icon_pixbuf);
      gdk_pixbuf_unref (ext_window_icon_pixbuf);
    }

  bonobodock2 = GNOME_APP (ext_window)->dock;
  gtk_widget_show (bonobodock2);

  gnome_app_create_menus (GNOME_APP (ext_window), menubar2_uiinfo);

  scrolledwindow34 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow34);
  gnome_app_set_contents (GNOME_APP (ext_window), scrolledwindow34);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow34), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

  ext_code = custom_gtk_source_view_create ("ext_code", "", "", 0, 0);
  gtk_widget_show (ext_code);
  gtk_container_add (GTK_CONTAINER (scrolledwindow34), ext_code);
  GTK_WIDGET_SET_FLAGS (ext_code, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (ext_code, GTK_CAN_DEFAULT);

  extension_appbar = gnome_appbar_new (TRUE, TRUE, GNOME_PREFERENCES_NEVER);
  gtk_widget_show (extension_appbar);
  gnome_app_set_statusbar (GNOME_APP (ext_window), extension_appbar);

  g_signal_connect ((gpointer) ext_window, "delete_event",
                    G_CALLBACK (on_ext_window_delete_event),
                    NULL);
  g_signal_connect ((gpointer) ext_window, "destroy",
                    G_CALLBACK (on_ext_window_destroy),
                    NULL);
  g_signal_connect_after ((gpointer) ext_window, "realize",
                          G_CALLBACK (after_ext_window_realize),
                          NULL);
  gnome_app_install_menu_hints (GNOME_APP (ext_window), menubar2_uiinfo);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (ext_window, ext_window, "ext_window");
  GLADE_HOOKUP_OBJECT (ext_window, bonobodock2, "bonobodock2");
  GLADE_HOOKUP_OBJECT (ext_window, menubar2_uiinfo[0].widget, "xfile");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[0].widget, "xnew");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[1].widget, "xopen");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[2].widget, "xopen_recent");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[3].widget, "separator20");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[4].widget, "xinstall_extension");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[5].widget, "xopen_extension");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[6].widget, "separator21");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[7].widget, "xclose");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[8].widget, "xsave");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[9].widget, "xsave_as");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[10].widget, "xrevert");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[11].widget, "separator30");
  GLADE_HOOKUP_OBJECT (ext_window, xfile_menu_uiinfo[12].widget, "xquit");
  GLADE_HOOKUP_OBJECT (ext_window, menubar2_uiinfo[1].widget, "xedit");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[0].widget, "xundo");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[1].widget, "xredo");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[2].widget, "separator19");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[3].widget, "xcut");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[4].widget, "xcopy");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[5].widget, "xpaste");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[6].widget, "xselect_all");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[7].widget, "separator17");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[8].widget, "xfind");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[9].widget, "xspelling");
  GLADE_HOOKUP_OBJECT (ext_window, xspelling_menu_uiinfo[0].widget, "xautocheck_spelling");
  GLADE_HOOKUP_OBJECT (ext_window, xspelling_menu_uiinfo[1].widget, "xcheck_spelling");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[10].widget, "separator24");
  GLADE_HOOKUP_OBJECT (ext_window, xedit_menu_uiinfo[11].widget, "xpreferences");
  GLADE_HOOKUP_OBJECT (ext_window, menubar2_uiinfo[2].widget, "xformat");
  GLADE_HOOKUP_OBJECT (ext_window, xformat_menu_uiinfo[0].widget, "xshift_selection_right1");
  GLADE_HOOKUP_OBJECT (ext_window, xformat_menu_uiinfo[1].widget, "xshift_selection_left");
  GLADE_HOOKUP_OBJECT (ext_window, menubar2_uiinfo[3].widget, "xwindows");
  GLADE_HOOKUP_OBJECT (ext_window, xwindows_menu_uiinfo[0].widget, "xshow_inspectors");
  GLADE_HOOKUP_OBJECT (ext_window, xwindows_menu_uiinfo[1].widget, "separator22");
  GLADE_HOOKUP_OBJECT (ext_window, scrolledwindow34, "scrolledwindow34");
  GLADE_HOOKUP_OBJECT (ext_window, ext_code, "ext_code");
  GLADE_HOOKUP_OBJECT (ext_window, extension_appbar, "extension_appbar");

  gtk_widget_grab_focus (ext_code);
  return ext_window;
}

GtkWidget*
create_new_dialog (void)
{
  GtkWidget *new_dialog;
  GdkPixbuf *new_dialog_icon_pixbuf;
  GtkWidget *new_druid;
  GtkWidget *new_druid_type_page;
  GtkWidget *druid_vbox4;
  GtkWidget *vbox15;
  GtkWidget *vbox16;
  GtkWidget *project_type_select;
  GtkWidget *hseparator1;
  GtkWidget *project_type_description;
  GtkWidget *new_druid_inform7_page;
  GtkWidget *druid_vbox5;
  GtkWidget *vbox13;
  GtkWidget *label7;
  GtkWidget *new_directory;
  GtkWidget *label5;
  GtkWidget *new_name;
  GtkWidget *label6;
  GtkWidget *new_author;
  GtkWidget *new_druid_extension_page;
  GtkWidget *druid_vbox6;
  GtkWidget *vbox17;
  GtkWidget *label51;
  GtkWidget *new_ext_directory;
  GtkWidget *label52;
  GtkWidget *new_ext_name;
  GtkWidget *label53;
  GtkWidget *new_ext_author;
  GtkWidget *new_druid_inform6_page;
  GtkWidget *druid_vbox7;
  GtkWidget *vbox18;
  GtkWidget *hbox13;
  GtkWidget *label54;
  GtkWidget *entry3;
  GtkWidget *hbox14;
  GtkWidget *label55;
  GtkWidget *entry4;
  GtkWidget *label56;
  GtkWidget *scrolledwindow35;
  GtkWidget *textview1;
  GtkWidget *hbox15;
  GtkWidget *label57;
  GtkWidget *entry5;
  GtkWidget *scrolledwindow36;
  GtkWidget *textview2;
  GtkTooltips *tooltips;

  tooltips = gtk_tooltips_new ();

  new_dialog = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (new_dialog), _("New Project"));
  gtk_window_set_position (GTK_WINDOW (new_dialog), GTK_WIN_POS_CENTER);
  gtk_window_set_destroy_with_parent (GTK_WINDOW (new_dialog), TRUE);
  new_dialog_icon_pixbuf = create_pixbuf ("gnome-inform7/Inform.png");
  if (new_dialog_icon_pixbuf)
    {
      gtk_window_set_icon (GTK_WINDOW (new_dialog), new_dialog_icon_pixbuf);
      gdk_pixbuf_unref (new_dialog_icon_pixbuf);
    }
  gtk_window_set_skip_pager_hint (GTK_WINDOW (new_dialog), TRUE);

  new_druid = gnome_druid_new ();
  gtk_widget_show (new_druid);
  gtk_container_add (GTK_CONTAINER (new_dialog), new_druid);
  gtk_container_set_border_width (GTK_CONTAINER (new_druid), 4);
  GTK_WIDGET_SET_FLAGS (new_druid, GTK_CAN_DEFAULT);

  new_druid_type_page = gnome_druid_page_standard_new ();
  gtk_widget_show_all (new_druid_type_page);
  gnome_druid_append_page (GNOME_DRUID (new_druid),
                           GNOME_DRUID_PAGE (new_druid_type_page));
  gnome_druid_page_standard_set_title (GNOME_DRUID_PAGE_STANDARD (new_druid_type_page), _("New Project Type"));

  druid_vbox4 = GNOME_DRUID_PAGE_STANDARD (new_druid_type_page)->vbox;
  gtk_widget_show (druid_vbox4);
  gtk_container_set_border_width (GTK_CONTAINER (druid_vbox4), 16);

  vbox15 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox15);
  gtk_box_pack_start (GTK_BOX (druid_vbox4), vbox15, TRUE, TRUE, 0);

  vbox16 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox16);
  gtk_box_pack_start (GTK_BOX (vbox15), vbox16, TRUE, TRUE, 0);

  project_type_select = gtk_tree_view_new ();
  gtk_widget_show (project_type_select);
  gtk_box_pack_start (GTK_BOX (vbox16), project_type_select, TRUE, TRUE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (project_type_select), 1);
  gtk_tooltips_set_tip (tooltips, project_type_select, _("Choose the type of project you want to create here."), NULL);
  gtk_tree_view_set_headers_visible (GTK_TREE_VIEW (project_type_select), FALSE);
  gtk_tree_view_set_enable_search (GTK_TREE_VIEW (project_type_select), FALSE);
  gtk_tree_view_set_fixed_height_mode (GTK_TREE_VIEW (project_type_select), TRUE);

  hseparator1 = gtk_hseparator_new ();
  gtk_widget_show (hseparator1);
  gtk_box_pack_start (GTK_BOX (vbox16), hseparator1, TRUE, TRUE, 0);

  project_type_description = gtk_label_new (_("Please choose a project type."));
  gtk_widget_show (project_type_description);
  gtk_box_pack_start (GTK_BOX (vbox16), project_type_description, FALSE, FALSE, 0);
  gtk_label_set_line_wrap (GTK_LABEL (project_type_description), TRUE);
  gtk_misc_set_alignment (GTK_MISC (project_type_description), 0, 0.5);

  new_druid_inform7_page = gnome_druid_page_standard_new ();
  gtk_widget_show_all (new_druid_inform7_page);
  gnome_druid_append_page (GNOME_DRUID (new_druid),
                           GNOME_DRUID_PAGE (new_druid_inform7_page));
  gnome_druid_page_standard_set_title (GNOME_DRUID_PAGE_STANDARD (new_druid_inform7_page), _("Inform 7 Project"));

  druid_vbox5 = GNOME_DRUID_PAGE_STANDARD (new_druid_inform7_page)->vbox;
  gtk_widget_show (druid_vbox5);
  gtk_container_set_border_width (GTK_CONTAINER (druid_vbox5), 16);

  vbox13 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox13);
  gtk_box_pack_start (GTK_BOX (druid_vbox5), vbox13, TRUE, TRUE, 0);

  label7 = gtk_label_new_with_mnemonic (_("The _directory in which the project will be created"));
  gtk_widget_show (label7);
  gtk_box_pack_start (GTK_BOX (vbox13), label7, FALSE, FALSE, 0);
  gtk_label_set_line_wrap (GTK_LABEL (label7), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label7), 0, 0.5);

  new_directory = gtk_file_chooser_button_new (_("Choose the directory to create the new project in"), GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER);
  gtk_widget_show (new_directory);
  gtk_box_pack_start (GTK_BOX (vbox13), new_directory, FALSE, TRUE, 0);

  label5 = gtk_label_new_with_mnemonic (_("The na_me of the new project "));
  gtk_widget_show (label5);
  gtk_box_pack_start (GTK_BOX (vbox13), label5, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label5), 0, 0.5);

  new_name = gtk_entry_new ();
  gtk_widget_show (new_name);
  gtk_box_pack_start (GTK_BOX (vbox13), new_name, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, new_name, _("Enter a name for the project here."), NULL);
  gtk_entry_set_invisible_char (GTK_ENTRY (new_name), 8226);
  gtk_entry_set_activates_default (GTK_ENTRY (new_name), TRUE);
  gtk_entry_set_width_chars (GTK_ENTRY (new_name), 14);

  label6 = gtk_label_new_with_mnemonic (_("The _author's name "));
  gtk_widget_show (label6);
  gtk_box_pack_start (GTK_BOX (vbox13), label6, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label6), 0, 0.5);

  new_author = gtk_entry_new ();
  gtk_widget_show (new_author);
  gtk_box_pack_start (GTK_BOX (vbox13), new_author, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, new_author, _("You can change the name of the story's author here."), NULL);
  gtk_entry_set_invisible_char (GTK_ENTRY (new_author), 8226);
  gtk_entry_set_activates_default (GTK_ENTRY (new_author), TRUE);
  gtk_entry_set_width_chars (GTK_ENTRY (new_author), 20);

  new_druid_extension_page = gnome_druid_page_standard_new ();
  gtk_widget_show_all (new_druid_extension_page);
  gnome_druid_append_page (GNOME_DRUID (new_druid),
                           GNOME_DRUID_PAGE (new_druid_extension_page));
  gnome_druid_page_standard_set_title (GNOME_DRUID_PAGE_STANDARD (new_druid_extension_page), _("Inform 7 Extension"));

  druid_vbox6 = GNOME_DRUID_PAGE_STANDARD (new_druid_extension_page)->vbox;
  gtk_widget_show (druid_vbox6);
  gtk_container_set_border_width (GTK_CONTAINER (druid_vbox6), 16);

  vbox17 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox17);
  gtk_box_pack_start (GTK_BOX (druid_vbox6), vbox17, FALSE, FALSE, 0);

  label51 = gtk_label_new_with_mnemonic (_("The _directory in which the extension will be created"));
  gtk_widget_show (label51);
  gtk_box_pack_start (GTK_BOX (vbox17), label51, FALSE, FALSE, 0);
  gtk_label_set_line_wrap (GTK_LABEL (label51), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label51), 0, 0.5);

  new_ext_directory = gtk_file_chooser_button_new (_("Choose the directory to create the new extension in"), GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER);
  gtk_widget_show (new_ext_directory);
  gtk_box_pack_start (GTK_BOX (vbox17), new_ext_directory, TRUE, TRUE, 0);

  label52 = gtk_label_new_with_mnemonic (_("Extension na_me"));
  gtk_widget_show (label52);
  gtk_box_pack_start (GTK_BOX (vbox17), label52, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label52), 0, 0.5);

  new_ext_name = gtk_entry_new ();
  gtk_widget_show (new_ext_name);
  gtk_box_pack_start (GTK_BOX (vbox17), new_ext_name, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, new_ext_name, _("Enter a name for the new extension here."), NULL);
  gtk_entry_set_invisible_char (GTK_ENTRY (new_ext_name), 8226);
  gtk_entry_set_activates_default (GTK_ENTRY (new_ext_name), TRUE);
  gtk_entry_set_width_chars (GTK_ENTRY (new_ext_name), 14);

  label53 = gtk_label_new_with_mnemonic (_("Extension _author's name"));
  gtk_widget_show (label53);
  gtk_box_pack_start (GTK_BOX (vbox17), label53, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label53), 0, 0.5);

  new_ext_author = gtk_entry_new ();
  gtk_widget_show (new_ext_author);
  gtk_box_pack_start (GTK_BOX (vbox17), new_ext_author, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, new_ext_author, _("You can change the name of the author of the extension here."), NULL);
  gtk_entry_set_invisible_char (GTK_ENTRY (new_ext_author), 8226);
  gtk_entry_set_activates_default (GTK_ENTRY (new_ext_author), TRUE);
  gtk_entry_set_width_chars (GTK_ENTRY (new_ext_author), 20);

  new_druid_inform6_page = gnome_druid_page_standard_new ();
  gtk_widget_show_all (new_druid_inform6_page);
  gnome_druid_append_page (GNOME_DRUID (new_druid),
                           GNOME_DRUID_PAGE (new_druid_inform6_page));
  gnome_druid_page_standard_set_title (GNOME_DRUID_PAGE_STANDARD (new_druid_inform6_page), _("Inform 6.3 Project"));

  druid_vbox7 = GNOME_DRUID_PAGE_STANDARD (new_druid_inform6_page)->vbox;
  gtk_widget_show (druid_vbox7);
  gtk_container_set_border_width (GTK_CONTAINER (druid_vbox7), 16);

  vbox18 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox18);
  gtk_box_pack_start (GTK_BOX (druid_vbox7), vbox18, FALSE, FALSE, 0);

  hbox13 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox13);
  gtk_box_pack_start (GTK_BOX (vbox18), hbox13, TRUE, TRUE, 0);

  label54 = gtk_label_new (_("Name: "));
  gtk_widget_show (label54);
  gtk_box_pack_start (GTK_BOX (hbox13), label54, FALSE, FALSE, 0);

  entry3 = gtk_entry_new ();
  gtk_widget_show (entry3);
  gtk_box_pack_start (GTK_BOX (hbox13), entry3, TRUE, TRUE, 0);
  gtk_entry_set_text (GTK_ENTRY (entry3), _("RUINS"));
  gtk_entry_set_invisible_char (GTK_ENTRY (entry3), 8226);

  hbox14 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox14);
  gtk_box_pack_start (GTK_BOX (vbox18), hbox14, TRUE, TRUE, 0);

  label55 = gtk_label_new (_("Headline: "));
  gtk_widget_show (label55);
  gtk_box_pack_start (GTK_BOX (hbox14), label55, FALSE, FALSE, 0);

  entry4 = gtk_entry_new ();
  gtk_widget_show (entry4);
  gtk_box_pack_start (GTK_BOX (hbox14), entry4, TRUE, TRUE, 0);
  gtk_entry_set_text (GTK_ENTRY (entry4), _("An Interactive Worked Example"));
  gtk_entry_set_invisible_char (GTK_ENTRY (entry4), 8226);

  label56 = gtk_label_new (_("Teaser:"));
  gtk_widget_show (label56);
  gtk_box_pack_start (GTK_BOX (vbox18), label56, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label56), 0, 0.5);

  scrolledwindow35 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow35);
  gtk_box_pack_start (GTK_BOX (vbox18), scrolledwindow35, FALSE, FALSE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow35), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow35), GTK_SHADOW_IN);

  textview1 = gtk_text_view_new ();
  gtk_widget_show (textview1);
  gtk_container_add (GTK_CONTAINER (scrolledwindow35), textview1);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (textview1), GTK_WRAP_WORD);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (textview1)), _("Days of searching, days of thirsty hacking through the briars of the forest, but at last your patience was rewarded. A discovery!"), -1);

  hbox15 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox15);
  gtk_box_pack_start (GTK_BOX (vbox18), hbox15, TRUE, TRUE, 0);

  label57 = gtk_label_new (_("Initial room: "));
  gtk_widget_show (label57);
  gtk_box_pack_start (GTK_BOX (hbox15), label57, FALSE, FALSE, 0);

  entry5 = gtk_entry_new ();
  gtk_widget_show (entry5);
  gtk_box_pack_start (GTK_BOX (hbox15), entry5, TRUE, TRUE, 0);
  gtk_entry_set_text (GTK_ENTRY (entry5), _("\"Great Plaza\""));
  gtk_entry_set_invisible_char (GTK_ENTRY (entry5), 8226);

  scrolledwindow36 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow36);
  gtk_box_pack_start (GTK_BOX (vbox18), scrolledwindow36, FALSE, FALSE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow36), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow36), GTK_SHADOW_IN);

  textview2 = gtk_text_view_new ();
  gtk_widget_show (textview2);
  gtk_container_add (GTK_CONTAINER (scrolledwindow36), textview2);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (textview2), GTK_WRAP_WORD);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (textview2)), _("Or so your notes call this low escarpment of limestone, but the rainforest has claimed it back. Dark olive trees crowd in on all sides, the air streams with the mist of a warm recent rain, midges hang in the air. \"Structure 10\" is a shambles of masonry which might once have been a burial pyramid, and little survives except stone-cast steps leading down into darkness below."), -1);

  g_signal_connect ((gpointer) new_dialog, "delete_event",
                    G_CALLBACK (on_new_dialog_delete_event),
                    NULL);
  g_signal_connect ((gpointer) new_druid, "cancel",
                    G_CALLBACK (on_new_cancel_clicked),
                    NULL);
  g_signal_connect ((gpointer) new_druid, "realize",
                    G_CALLBACK (on_new_druid_realize),
                    NULL);
  g_signal_connect ((gpointer) new_druid_type_page, "next",
                    G_CALLBACK (on_new_druid_page1_next),
                    NULL);
  g_signal_connect ((gpointer) new_druid_inform7_page, "back",
                    G_CALLBACK (go_back_to_type_page),
                    NULL);
  g_signal_connect ((gpointer) new_druid_inform7_page, "finish",
                    G_CALLBACK (on_new_druid_inform7_page_finish),
                    NULL);
  g_signal_connect ((gpointer) new_name, "changed",
                    G_CALLBACK (update_new_ok_button),
                    NULL);
  g_signal_connect ((gpointer) new_author, "changed",
                    G_CALLBACK (update_new_ok_button),
                    NULL);
  g_signal_connect_after ((gpointer) new_author, "realize",
                          G_CALLBACK (on_new_author_realize),
                          NULL);
  g_signal_connect ((gpointer) new_druid_extension_page, "back",
                    G_CALLBACK (go_back_to_type_page),
                    NULL);
  g_signal_connect ((gpointer) new_druid_extension_page, "finish",
                    G_CALLBACK (on_new_druid_extension_page_finish),
                    NULL);
  g_signal_connect ((gpointer) new_ext_name, "changed",
                    G_CALLBACK (update_new_ext_ok_button),
                    NULL);
  g_signal_connect ((gpointer) new_ext_author, "changed",
                    G_CALLBACK (update_new_ext_ok_button),
                    NULL);
  g_signal_connect_after ((gpointer) new_ext_author, "realize",
                          G_CALLBACK (on_new_author_realize),
                          NULL);
  g_signal_connect ((gpointer) new_druid_inform6_page, "back",
                    G_CALLBACK (go_back_to_type_page),
                    NULL);
  g_signal_connect ((gpointer) new_druid_inform6_page, "finish",
                    G_CALLBACK (on_new_druid_inform6_page_finish),
                    NULL);

  gtk_label_set_mnemonic_widget (GTK_LABEL (label7), new_directory);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label5), new_name);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label6), new_author);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label51), new_ext_directory);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label52), new_ext_name);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label53), new_ext_author);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (new_dialog, new_dialog, "new_dialog");
  GLADE_HOOKUP_OBJECT (new_dialog, new_druid, "new_druid");
  GLADE_HOOKUP_OBJECT (new_dialog, new_druid_type_page, "new_druid_type_page");
  GLADE_HOOKUP_OBJECT (new_dialog, druid_vbox4, "druid_vbox4");
  GLADE_HOOKUP_OBJECT (new_dialog, vbox15, "vbox15");
  GLADE_HOOKUP_OBJECT (new_dialog, vbox16, "vbox16");
  GLADE_HOOKUP_OBJECT (new_dialog, project_type_select, "project_type_select");
  GLADE_HOOKUP_OBJECT (new_dialog, hseparator1, "hseparator1");
  GLADE_HOOKUP_OBJECT (new_dialog, project_type_description, "project_type_description");
  GLADE_HOOKUP_OBJECT (new_dialog, new_druid_inform7_page, "new_druid_inform7_page");
  GLADE_HOOKUP_OBJECT (new_dialog, druid_vbox5, "druid_vbox5");
  GLADE_HOOKUP_OBJECT (new_dialog, vbox13, "vbox13");
  GLADE_HOOKUP_OBJECT (new_dialog, label7, "label7");
  GLADE_HOOKUP_OBJECT (new_dialog, new_directory, "new_directory");
  GLADE_HOOKUP_OBJECT (new_dialog, label5, "label5");
  GLADE_HOOKUP_OBJECT (new_dialog, new_name, "new_name");
  GLADE_HOOKUP_OBJECT (new_dialog, label6, "label6");
  GLADE_HOOKUP_OBJECT (new_dialog, new_author, "new_author");
  GLADE_HOOKUP_OBJECT (new_dialog, new_druid_extension_page, "new_druid_extension_page");
  GLADE_HOOKUP_OBJECT (new_dialog, druid_vbox6, "druid_vbox6");
  GLADE_HOOKUP_OBJECT (new_dialog, vbox17, "vbox17");
  GLADE_HOOKUP_OBJECT (new_dialog, label51, "label51");
  GLADE_HOOKUP_OBJECT (new_dialog, new_ext_directory, "new_ext_directory");
  GLADE_HOOKUP_OBJECT (new_dialog, label52, "label52");
  GLADE_HOOKUP_OBJECT (new_dialog, new_ext_name, "new_ext_name");
  GLADE_HOOKUP_OBJECT (new_dialog, label53, "label53");
  GLADE_HOOKUP_OBJECT (new_dialog, new_ext_author, "new_ext_author");
  GLADE_HOOKUP_OBJECT (new_dialog, new_druid_inform6_page, "new_druid_inform6_page");
  GLADE_HOOKUP_OBJECT (new_dialog, druid_vbox7, "druid_vbox7");
  GLADE_HOOKUP_OBJECT (new_dialog, vbox18, "vbox18");
  GLADE_HOOKUP_OBJECT (new_dialog, hbox13, "hbox13");
  GLADE_HOOKUP_OBJECT (new_dialog, label54, "label54");
  GLADE_HOOKUP_OBJECT (new_dialog, entry3, "entry3");
  GLADE_HOOKUP_OBJECT (new_dialog, hbox14, "hbox14");
  GLADE_HOOKUP_OBJECT (new_dialog, label55, "label55");
  GLADE_HOOKUP_OBJECT (new_dialog, entry4, "entry4");
  GLADE_HOOKUP_OBJECT (new_dialog, label56, "label56");
  GLADE_HOOKUP_OBJECT (new_dialog, scrolledwindow35, "scrolledwindow35");
  GLADE_HOOKUP_OBJECT (new_dialog, textview1, "textview1");
  GLADE_HOOKUP_OBJECT (new_dialog, hbox15, "hbox15");
  GLADE_HOOKUP_OBJECT (new_dialog, label57, "label57");
  GLADE_HOOKUP_OBJECT (new_dialog, entry5, "entry5");
  GLADE_HOOKUP_OBJECT (new_dialog, scrolledwindow36, "scrolledwindow36");
  GLADE_HOOKUP_OBJECT (new_dialog, textview2, "textview2");
  GLADE_HOOKUP_OBJECT_NO_REF (new_dialog, tooltips, "tooltips");

  gtk_widget_grab_focus (new_name);
  gtk_widget_grab_default (new_druid);
  return new_dialog;
}

GtkWidget*
create_prefs_dialog (void)
{
  GtkWidget *prefs_dialog;
  GdkPixbuf *prefs_dialog_icon_pixbuf;
  GtkWidget *dialog_vbox4;
  GtkWidget *prefs_notebook;
  GtkWidget *vbox54;
  GtkWidget *label73;
  GtkWidget *prefs_author;
  GtkWidget *label103;
  GtkWidget *label102;
  GtkWidget *vbox26;
  GtkWidget *prefs_indent_toggle;
  GtkWidget *prefs_auto_indent_toggle;
  GtkWidget *prefs_follow_symbols_toggle;
  GtkWidget *alignment14;
  GtkWidget *vbox27;
  GtkWidget *prefs_intelligent_inspector_toggle;
  GtkWidget *prefs_auto_number_toggle;
  GtkWidget *prefs_elastic_tabstops_toggle;
  GtkWidget *label68;
  GtkWidget *vbox19;
  GtkWidget *frame3;
  GtkWidget *alignment8;
  GtkWidget *vbox20;
  GtkWidget *table2;
  GtkWidget *label61;
  GtkWidget *label62;
  GtkWidget *label59;
  GtkWidget *prefs_font_set;
  GtkWidget *prefs_font_size;
  GtkWidget *prefs_font_styling;
  GtkWidget *prefs_custom_font;
  GtkWidget *label60;
  GtkWidget *label58;
  GtkWidget *frame4;
  GtkWidget *alignment9;
  GtkWidget *vbox21;
  GtkWidget *table3;
  GtkWidget *label65b;
  GtkWidget *prefs_color_set;
  GtkWidget *label64;
  GtkWidget *prefs_change_colors;
  GtkWidget *label63;
  GtkWidget *frame12;
  GtkWidget *alignment20;
  GtkWidget *vbox33;
  GtkWidget *tab_ruler;
  GtkWidget *tab_example;
  GtkWidget *label79;
  GtkWidget *hseparator2;
  GtkWidget *source_example;
  GtkWidget *label65;
  GtkWidget *vbox28;
  GtkWidget *frame8;
  GtkWidget *alignment15;
  GtkWidget *vbox29;
  GtkWidget *prefs_clean_build_toggle;
  GtkWidget *alignment16;
  GtkWidget *prefs_clean_index_toggle;
  GtkWidget *label74;
  GtkWidget *frame13;
  GtkWidget *alignment25;
  GtkWidget *vbox53;
  GtkWidget *hbox32;
  GtkWidget *label104;
  GtkWidget *prefs_glulx_combo;
  GtkWidget *label100;
  GtkWidget *frame9;
  GtkWidget *alignment17;
  GtkWidget *vbox30;
  GtkWidget *prefs_show_log_toggle;
  GtkWidget *label76;
  GtkWidget *label75;
  GtkWidget *label69;
  GtkWidget *frame5;
  GtkWidget *alignment10;
  GtkWidget *vbox22;
  GtkWidget *frame10;
  GtkWidget *alignment18;
  GtkWidget *vbox31;
  GtkWidget *prefs_notes_toggle;
  GtkWidget *prefs_headings_toggle;
  GtkWidget *prefs_skein_toggle;
  GtkWidget *prefs_search_toggle;
  GtkWidget *label77;
  GtkWidget *frame11;
  GtkWidget *alignment19;
  GtkWidget *vbox32;
  GtkWidget *prefs_project_files_toggle;
  GtkWidget *prefs_watchpoints_toggle;
  GtkWidget *prefs_breakpoints_toggle;
  GtkWidget *label78;
  GtkWidget *label70;
  GtkWidget *label66;
  GtkWidget *vbox23;
  GtkWidget *frame6;
  GtkWidget *alignment11;
  GtkWidget *vbox24;
  GtkWidget *scrolledwindow37;
  GtkWidget *prefs_i7_extensions_view;
  GtkWidget *hbuttonbox1;
  GtkWidget *prefs_i7_extension_add;
  GtkWidget *prefs_i7_extension_remove;
  GtkWidget *label71;
  GtkWidget *frame7;
  GtkWidget *alignment12;
  GtkWidget *vbox25;
  GtkWidget *scrolledwindow38;
  GtkWidget *prefs_i6_extensions_view;
  GtkWidget *hbuttonbox2;
  GtkWidget *prefs_i6_extension_add;
  GtkWidget *prefs_i6_extension_remove;
  GtkWidget *label72;
  GtkWidget *label67;
  GtkWidget *dialog_action_area4;
  GtkWidget *prefs_close;
  GtkTooltips *tooltips;

  tooltips = gtk_tooltips_new ();

  prefs_dialog = gtk_dialog_new ();
  gtk_window_set_title (GTK_WINDOW (prefs_dialog), _("GNOME Inform 7 Preferences"));
  gtk_window_set_position (GTK_WINDOW (prefs_dialog), GTK_WIN_POS_CENTER);
  prefs_dialog_icon_pixbuf = create_pixbuf ("gnome-inform7/Inform.png");
  if (prefs_dialog_icon_pixbuf)
    {
      gtk_window_set_icon (GTK_WINDOW (prefs_dialog), prefs_dialog_icon_pixbuf);
      gdk_pixbuf_unref (prefs_dialog_icon_pixbuf);
    }
  gtk_window_set_skip_pager_hint (GTK_WINDOW (prefs_dialog), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (prefs_dialog), GDK_WINDOW_TYPE_HINT_DIALOG);

  dialog_vbox4 = GTK_DIALOG (prefs_dialog)->vbox;
  gtk_widget_show (dialog_vbox4);

  prefs_notebook = gtk_notebook_new ();
  gtk_widget_show (prefs_notebook);
  gtk_box_pack_start (GTK_BOX (dialog_vbox4), prefs_notebook, TRUE, TRUE, 0);

  vbox54 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox54);
  gtk_container_add (GTK_CONTAINER (prefs_notebook), vbox54);

  label73 = gtk_label_new_with_mnemonic (_("_Author name"));
  gtk_widget_show (label73);
  gtk_box_pack_start (GTK_BOX (vbox54), label73, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label73), 0, 0.5);

  prefs_author = gtk_entry_new ();
  gtk_widget_show (prefs_author);
  gtk_box_pack_start (GTK_BOX (vbox54), prefs_author, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_author, _("Fill in the name you prefer to use for your new Inform 7 projects here. If this field is left blank, then your long username is used instead. Note that you can always change the name you are writing under after you have created the project."), NULL);
  gtk_entry_set_invisible_char (GTK_ENTRY (prefs_author), 8226);

  label103 = gtk_label_new (_("The author name is automatically filled in when creating new stories and extensions."));
  gtk_widget_show (label103);
  gtk_box_pack_start (GTK_BOX (vbox54), label103, FALSE, FALSE, 0);
  gtk_label_set_line_wrap (GTK_LABEL (label103), TRUE);

  label102 = gtk_label_new (_("Author"));
  gtk_widget_show (label102);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (prefs_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (prefs_notebook), 0), label102);

  vbox26 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox26);
  gtk_container_add (GTK_CONTAINER (prefs_notebook), vbox26);

  prefs_indent_toggle = gtk_check_button_new_with_mnemonic (_("_Indent wrapped lines"));
  gtk_box_pack_start (GTK_BOX (vbox26), prefs_indent_toggle, FALSE, FALSE, 0);
  gtk_widget_set_sensitive (prefs_indent_toggle, FALSE);
  gtk_tooltips_set_tip (tooltips, prefs_indent_toggle, _("If this option is checked, Inform will indent wrapped lines by half a tab-stop. This makes it easier to see where a line-break happened because of a long line."), NULL);

  prefs_auto_indent_toggle = gtk_check_button_new_with_mnemonic (_("_Auto-indent after newline"));
  gtk_widget_show (prefs_auto_indent_toggle);
  gtk_box_pack_start (GTK_BOX (vbox26), prefs_auto_indent_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_auto_indent_toggle, _("If this option is selected, Inform will track the number of tabs at the beginning of the last line and automatically indent the next line accordingly when you insert a new line by pressing return."), NULL);

  prefs_follow_symbols_toggle = gtk_check_button_new_with_mnemonic (_("'Intelligently' _follow symbols in source file"));
  gtk_widget_show (prefs_follow_symbols_toggle);
  gtk_box_pack_start (GTK_BOX (vbox26), prefs_follow_symbols_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_follow_symbols_toggle, _("Inform can keep track of important items in your source files as you type. Enabling this option will allow it to automatically track sections in Natural Inform files."), NULL);

  alignment14 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment14);
  gtk_box_pack_start (GTK_BOX (vbox26), alignment14, FALSE, FALSE, 0);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment14), 0, 0, 20, 0);

  vbox27 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox27);
  gtk_container_add (GTK_CONTAINER (alignment14), vbox27);

  prefs_intelligent_inspector_toggle = gtk_check_button_new_with_mnemonic (_("_Use intelligent headings inspector"));
  gtk_widget_show (prefs_intelligent_inspector_toggle);
  gtk_box_pack_start (GTK_BOX (vbox27), prefs_intelligent_inspector_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_intelligent_inspector_toggle, _("If this option is checked, the headings inspector will show a real-time display of the sections in your source file. If it is unchecked, it will display the last index calculated by the Natural Inform compiler, i.e. the state of the index at the last time you compiled or ran the story."), NULL);

  prefs_auto_number_toggle = gtk_check_button_new_with_mnemonic (_("Auto-_number sections"));
  gtk_widget_show (prefs_auto_number_toggle);
  gtk_box_pack_start (GTK_BOX (vbox27), prefs_auto_number_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_auto_number_toggle, _("If you check this option, Inform will automatically renumber sections when you insert a new one. It will also automatically insert a section number as you type: if you type \"Part \", Inform will insert \"2 - \" and renumber the previous Part 2 to Part 3 and so on."), NULL);

  prefs_elastic_tabstops_toggle = gtk_check_button_new_with_mnemonic (_("_Use elastic tabstops"));
  gtk_widget_show (prefs_elastic_tabstops_toggle);
  gtk_box_pack_start (GTK_BOX (vbox26), prefs_elastic_tabstops_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_elastic_tabstops_toggle, _("If this option is selected, tab stops will have variable width so that data in tables are lined up properly in columns. If you are working on a long story file on a slow computer, you may see a performance benefit by turning this off."), NULL);

  label68 = gtk_label_new (_("Editing"));
  gtk_widget_show (label68);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (prefs_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (prefs_notebook), 1), label68);

  vbox19 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox19);
  gtk_container_add (GTK_CONTAINER (prefs_notebook), vbox19);
  gtk_container_set_border_width (GTK_CONTAINER (vbox19), 3);

  frame3 = gtk_frame_new (NULL);
  gtk_widget_show (frame3);
  gtk_box_pack_start (GTK_BOX (vbox19), frame3, FALSE, TRUE, 0);

  alignment8 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment8);
  gtk_container_add (GTK_CONTAINER (frame3), alignment8);
  gtk_container_set_border_width (GTK_CONTAINER (alignment8), 2);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment8), 0, 0, 12, 0);

  vbox20 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox20);
  gtk_container_add (GTK_CONTAINER (alignment8), vbox20);

  table2 = gtk_table_new (4, 2, FALSE);
  gtk_widget_show (table2);
  gtk_box_pack_start (GTK_BOX (vbox20), table2, FALSE, TRUE, 0);

  label61 = gtk_label_new_with_mnemonic (_("Font st_yling: "));
  gtk_widget_show (label61);
  gtk_table_attach (GTK_TABLE (table2), label61, 0, 1, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  label62 = gtk_label_new_with_mnemonic (_("Font si_ze: "));
  gtk_widget_show (label62);
  gtk_table_attach (GTK_TABLE (table2), label62, 0, 1, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  label59 = gtk_label_new_with_mnemonic (_("Font _set: "));
  gtk_widget_show (label59);
  gtk_table_attach (GTK_TABLE (table2), label59, 0, 1, 3, 4,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  prefs_font_set = gtk_combo_box_new_text ();
  gtk_widget_show (prefs_font_set);
  gtk_table_attach (GTK_TABLE (table2), prefs_font_set, 1, 2, 3, 4,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_set), _("Standard"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_set), _("Programmer"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_set), _("Use custom font"));

  prefs_font_size = gtk_combo_box_new_text ();
  gtk_widget_show (prefs_font_size);
  gtk_table_attach (GTK_TABLE (table2), prefs_font_size, 1, 2, 2, 3,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_size), _("Standard"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_size), _("Medium"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_size), _("Large"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_size), _("Huge"));

  prefs_font_styling = gtk_combo_box_new_text ();
  gtk_widget_show (prefs_font_styling);
  gtk_table_attach (GTK_TABLE (table2), prefs_font_styling, 1, 2, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_styling), _("None"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_styling), _("Subtle"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_font_styling), _("Often"));

  prefs_custom_font = gtk_font_button_new ();
  gtk_widget_show (prefs_custom_font);
  gtk_table_attach (GTK_TABLE (table2), prefs_custom_font, 1, 2, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_tooltips_set_tip (tooltips, prefs_custom_font, _("This selects the custom font that will be used for displaying the Inform source code when \"Font set\" is set to \"Custom.\""), NULL);
  gtk_font_button_set_show_style (GTK_FONT_BUTTON (prefs_custom_font), FALSE);
  gtk_font_button_set_show_size (GTK_FONT_BUTTON (prefs_custom_font), FALSE);
  gtk_font_button_set_use_font (GTK_FONT_BUTTON (prefs_custom_font), TRUE);

  label60 = gtk_label_new_with_mnemonic (_("Custom _font: "));
  gtk_widget_show (label60);
  gtk_table_attach (GTK_TABLE (table2), label60, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  label58 = gtk_label_new (_("<b>Fonts</b>"));
  gtk_widget_show (label58);
  gtk_frame_set_label_widget (GTK_FRAME (frame3), label58);
  gtk_label_set_use_markup (GTK_LABEL (label58), TRUE);

  frame4 = gtk_frame_new (NULL);
  gtk_widget_show (frame4);
  gtk_box_pack_start (GTK_BOX (vbox19), frame4, FALSE, TRUE, 0);

  alignment9 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment9);
  gtk_container_add (GTK_CONTAINER (frame4), alignment9);
  gtk_container_set_border_width (GTK_CONTAINER (alignment9), 2);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment9), 0, 0, 12, 0);

  vbox21 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox21);
  gtk_container_add (GTK_CONTAINER (alignment9), vbox21);

  table3 = gtk_table_new (2, 2, FALSE);
  gtk_widget_show (table3);
  gtk_box_pack_start (GTK_BOX (vbox21), table3, FALSE, TRUE, 0);

  label65b = gtk_label_new_with_mnemonic (_("_Color set: "));
  gtk_widget_show (label65b);
  gtk_table_attach (GTK_TABLE (table3), label65b, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  prefs_color_set = gtk_combo_box_new_text ();
  gtk_widget_show (prefs_color_set);
  gtk_table_attach (GTK_TABLE (table3), prefs_color_set, 1, 2, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_color_set), _("Subdued"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_color_set), _("Standard"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_color_set), _("Psychedelic"));

  label64 = gtk_label_new_with_mnemonic (_("Chan_ge colors: "));
  gtk_widget_show (label64);
  gtk_table_attach (GTK_TABLE (table3), label64, 0, 1, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  prefs_change_colors = gtk_combo_box_new_text ();
  gtk_widget_show (prefs_change_colors);
  gtk_table_attach (GTK_TABLE (table3), prefs_change_colors, 1, 2, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_change_colors), _("Never"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_change_colors), _("Occasionally"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_change_colors), _("Often"));

  label63 = gtk_label_new (_("<b>Colors</b>"));
  gtk_widget_show (label63);
  gtk_frame_set_label_widget (GTK_FRAME (frame4), label63);
  gtk_label_set_use_markup (GTK_LABEL (label63), TRUE);

  frame12 = gtk_frame_new (NULL);
  gtk_widget_show (frame12);
  gtk_box_pack_start (GTK_BOX (vbox19), frame12, TRUE, TRUE, 5);

  alignment20 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment20);
  gtk_container_add (GTK_CONTAINER (frame12), alignment20);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment20), 0, 0, 12, 0);

  vbox33 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox33);
  gtk_container_add (GTK_CONTAINER (alignment20), vbox33);

  tab_ruler = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 32, 1, 0, 0)));
  gtk_widget_show (tab_ruler);
  gtk_box_pack_start (GTK_BOX (vbox33), tab_ruler, FALSE, FALSE, 0);
  gtk_scale_set_digits (GTK_SCALE (tab_ruler), 0);
  gtk_range_set_update_policy (GTK_RANGE (tab_ruler), GTK_UPDATE_DISCONTINUOUS);

  tab_example = tab_example_create ("tab_example", "", "", 0, 0);
  gtk_widget_show (tab_example);
  gtk_box_pack_start (GTK_BOX (vbox33), tab_example, TRUE, TRUE, 0);
  gtk_widget_set_size_request (tab_example, -1, 25);
  GTK_WIDGET_UNSET_FLAGS (tab_example, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (tab_example, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, tab_example, _("This shows a preview of the tab width setting you have chosen above"), NULL);

  label79 = gtk_label_new_with_mnemonic (_("<b>Tab _width</b>"));
  gtk_widget_show (label79);
  gtk_frame_set_label_widget (GTK_FRAME (frame12), label79);
  gtk_label_set_use_markup (GTK_LABEL (label79), TRUE);

  hseparator2 = gtk_hseparator_new ();
  gtk_widget_show (hseparator2);
  gtk_box_pack_start (GTK_BOX (vbox19), hseparator2, FALSE, FALSE, 0);

  source_example = source_example_create ("source_example", "", "", 0, 0);
  gtk_widget_show (source_example);
  gtk_box_pack_start (GTK_BOX (vbox19), source_example, TRUE, TRUE, 0);
  gtk_widget_set_size_request (source_example, 400, 100);
  GTK_WIDGET_UNSET_FLAGS (source_example, GTK_CAN_FOCUS);
  GTK_WIDGET_UNSET_FLAGS (source_example, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, source_example, _("This displays a sample of source code in your selected styles."), NULL);

  label65 = gtk_label_new (_("Formatting"));
  gtk_widget_show (label65);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (prefs_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (prefs_notebook), 2), label65);
  gtk_misc_set_alignment (GTK_MISC (label65), 0.5, 0.48);

  vbox28 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox28);
  gtk_container_add (GTK_CONTAINER (prefs_notebook), vbox28);

  frame8 = gtk_frame_new (NULL);
  gtk_widget_show (frame8);
  gtk_box_pack_start (GTK_BOX (vbox28), frame8, FALSE, TRUE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (frame8), 3);

  alignment15 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment15);
  gtk_container_add (GTK_CONTAINER (frame8), alignment15);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment15), 0, 0, 12, 0);

  vbox29 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox29);
  gtk_container_add (GTK_CONTAINER (alignment15), vbox29);

  prefs_clean_build_toggle = gtk_check_button_new_with_mnemonic (_("_Clean build files from projects before closing"));
  gtk_widget_show (prefs_clean_build_toggle);
  gtk_box_pack_start (GTK_BOX (vbox29), prefs_clean_build_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_clean_build_toggle, _("Build files are files that are generated while turning your story into a game file. Selecting this option will ensure that they are deleted when you close or save a project. These files can grow quite large (many times the size of your source code), so deleting them is a good idea if you are planning to send a project to someone else."), NULL);

  alignment16 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment16);
  gtk_box_pack_start (GTK_BOX (vbox29), alignment16, FALSE, TRUE, 0);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment16), 0, 0, 20, 0);

  prefs_clean_index_toggle = gtk_check_button_new_with_mnemonic (_("_Also clean out index files"));
  gtk_widget_show (prefs_clean_index_toggle);
  gtk_container_add (GTK_CONTAINER (alignment16), prefs_clean_index_toggle);
  gtk_tooltips_set_tip (tooltips, prefs_clean_index_toggle, _("Selecting this option will cause Inform to additionally clean out the project's various index files. These are generated by the Inform 7 compiler and can be safely deleted, though they may be useful the next time you open the project."), NULL);

  label74 = gtk_label_new (_("<b>Cleaning</b>"));
  gtk_widget_show (label74);
  gtk_frame_set_label_widget (GTK_FRAME (frame8), label74);
  gtk_label_set_use_markup (GTK_LABEL (label74), TRUE);

  frame13 = gtk_frame_new (NULL);
  gtk_widget_show (frame13);
  gtk_box_pack_start (GTK_BOX (vbox28), frame13, FALSE, TRUE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (frame13), 3);

  alignment25 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment25);
  gtk_container_add (GTK_CONTAINER (frame13), alignment25);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment25), 0, 0, 12, 0);

  vbox53 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox53);
  gtk_container_add (GTK_CONTAINER (alignment25), vbox53);

  hbox32 = gtk_hbox_new (FALSE, 6);
  gtk_widget_show (hbox32);
  gtk_box_pack_start (GTK_BOX (vbox53), hbox32, FALSE, FALSE, 6);

  label104 = gtk_label_new_with_mnemonic (_("_Glulx interpreter: "));
  gtk_widget_show (label104);
  gtk_box_pack_start (GTK_BOX (hbox32), label104, FALSE, FALSE, 0);

  prefs_glulx_combo = gtk_combo_box_new_text ();
  gtk_widget_show (prefs_glulx_combo);
  gtk_box_pack_start (GTK_BOX (hbox32), prefs_glulx_combo, TRUE, TRUE, 0);
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_glulx_combo), _("git"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (prefs_glulx_combo), _("glulxe"));

  label100 = gtk_label_new (_("<b>Interpreters</b>"));
  gtk_widget_show (label100);
  gtk_frame_set_label_widget (GTK_FRAME (frame13), label100);
  gtk_label_set_use_markup (GTK_LABEL (label100), TRUE);

  frame9 = gtk_frame_new (NULL);
  gtk_widget_show (frame9);
  gtk_box_pack_start (GTK_BOX (vbox28), frame9, FALSE, FALSE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (frame9), 3);

  alignment17 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment17);
  gtk_container_add (GTK_CONTAINER (frame9), alignment17);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment17), 0, 0, 12, 0);

  vbox30 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox30);
  gtk_container_add (GTK_CONTAINER (alignment17), vbox30);

  prefs_show_log_toggle = gtk_check_button_new_with_mnemonic (_("_Show debugging log and Inform 6 intermediate\ncode"));
  gtk_widget_show (prefs_show_log_toggle);
  gtk_box_pack_start (GTK_BOX (vbox30), prefs_show_log_toggle, FALSE, FALSE, 0);

  label76 = gtk_label_new (_("This option is intended only for advanced users\nof Inform 7. It is most useful to people\ninvolved with maintaining the compiler, although\nthe Inform 6 intermediate code may be of interest\nto especially advanced extension authors."));
  gtk_widget_show (label76);
  gtk_box_pack_start (GTK_BOX (vbox30), label76, FALSE, FALSE, 5);
  gtk_misc_set_alignment (GTK_MISC (label76), 0, 0.5);

  label75 = gtk_label_new (_("<b>Compiler debugging</b>"));
  gtk_widget_show (label75);
  gtk_frame_set_label_widget (GTK_FRAME (frame9), label75);
  gtk_label_set_use_markup (GTK_LABEL (label75), TRUE);

  label69 = gtk_label_new (_("Advanced"));
  gtk_widget_show (label69);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (prefs_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (prefs_notebook), 3), label69);

  frame5 = gtk_frame_new (NULL);
  gtk_widget_show (frame5);
  gtk_container_add (GTK_CONTAINER (prefs_notebook), frame5);
  gtk_container_set_border_width (GTK_CONTAINER (frame5), 3);

  alignment10 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment10);
  gtk_container_add (GTK_CONTAINER (frame5), alignment10);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment10), 0, 0, 12, 0);

  vbox22 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox22);
  gtk_container_add (GTK_CONTAINER (alignment10), vbox22);

  frame10 = gtk_frame_new (NULL);
  gtk_widget_show (frame10);
  gtk_box_pack_start (GTK_BOX (vbox22), frame10, FALSE, TRUE, 0);

  alignment18 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment18);
  gtk_container_add (GTK_CONTAINER (frame10), alignment18);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment18), 0, 0, 12, 0);

  vbox31 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox31);
  gtk_container_add (GTK_CONTAINER (alignment18), vbox31);

  prefs_notes_toggle = gtk_check_button_new_with_mnemonic (_("_Notes"));
  gtk_widget_show (prefs_notes_toggle);
  gtk_box_pack_start (GTK_BOX (vbox31), prefs_notes_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_notes_toggle, _("The notes inspector provides a text editor that you can use to store notes about the game you are writing"), NULL);
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (prefs_notes_toggle), TRUE);

  prefs_headings_toggle = gtk_check_button_new_with_mnemonic (_("_Headings"));
  gtk_widget_show (prefs_headings_toggle);
  gtk_box_pack_start (GTK_BOX (vbox31), prefs_headings_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_headings_toggle, _("The headings inspector shows a table of contents of the current story, and allows you to jump quickly to each section"), NULL);
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (prefs_headings_toggle), TRUE);

  prefs_skein_toggle = gtk_check_button_new_with_mnemonic (_("S_kein"));
  gtk_widget_show (prefs_skein_toggle);
  gtk_box_pack_start (GTK_BOX (vbox31), prefs_skein_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_skein_toggle, _("The skein inspector displays the story's current skein"), NULL);
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (prefs_skein_toggle), TRUE);

  prefs_search_toggle = gtk_check_button_new_with_mnemonic (_("_Search"));
  gtk_widget_show (prefs_search_toggle);
  gtk_box_pack_start (GTK_BOX (vbox31), prefs_search_toggle, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, prefs_search_toggle, _("The search inspector provides a small search dialog."), NULL);
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (prefs_search_toggle), TRUE);

  label77 = gtk_label_new (_("<b>General</b>"));
  gtk_widget_show (label77);
  gtk_frame_set_label_widget (GTK_FRAME (frame10), label77);
  gtk_label_set_use_markup (GTK_LABEL (label77), TRUE);

  frame11 = gtk_frame_new (NULL);
  gtk_box_pack_start (GTK_BOX (vbox22), frame11, FALSE, TRUE, 0);

  alignment19 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment19);
  gtk_container_add (GTK_CONTAINER (frame11), alignment19);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment19), 0, 0, 12, 0);

  vbox32 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox32);
  gtk_container_add (GTK_CONTAINER (alignment19), vbox32);

  prefs_project_files_toggle = gtk_check_button_new_with_mnemonic (_("_Project files"));
  gtk_box_pack_start (GTK_BOX (vbox32), prefs_project_files_toggle, FALSE, FALSE, 0);
  gtk_widget_set_sensitive (prefs_project_files_toggle, FALSE);
  gtk_tooltips_set_tip (tooltips, prefs_project_files_toggle, _("The project files inspector shows a list of the available files in the current project, and allows you to switch between them"), NULL);

  prefs_watchpoints_toggle = gtk_check_button_new_with_mnemonic (_("_Watchpoints"));
  gtk_box_pack_start (GTK_BOX (vbox32), prefs_watchpoints_toggle, FALSE, FALSE, 0);
  gtk_widget_set_sensitive (prefs_watchpoints_toggle, FALSE);

  prefs_breakpoints_toggle = gtk_check_button_new_with_mnemonic (_("_Breakpoints"));
  gtk_box_pack_start (GTK_BOX (vbox32), prefs_breakpoints_toggle, FALSE, FALSE, 0);
  gtk_widget_set_sensitive (prefs_breakpoints_toggle, FALSE);

  label78 = gtk_label_new (_("<b>Inform 6</b>"));
  gtk_widget_show (label78);
  gtk_frame_set_label_widget (GTK_FRAME (frame11), label78);
  gtk_label_set_use_markup (GTK_LABEL (label78), TRUE);

  label70 = gtk_label_new (_("<b>Active Inspectors</b>"));
  gtk_widget_show (label70);
  gtk_frame_set_label_widget (GTK_FRAME (frame5), label70);
  gtk_label_set_use_markup (GTK_LABEL (label70), TRUE);

  label66 = gtk_label_new (_("Inspectors"));
  gtk_widget_show (label66);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (prefs_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (prefs_notebook), 4), label66);

  vbox23 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox23);
  gtk_container_add (GTK_CONTAINER (prefs_notebook), vbox23);
  gtk_container_set_border_width (GTK_CONTAINER (vbox23), 3);

  frame6 = gtk_frame_new (NULL);
  gtk_widget_show (frame6);
  gtk_box_pack_start (GTK_BOX (vbox23), frame6, TRUE, TRUE, 0);

  alignment11 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment11);
  gtk_container_add (GTK_CONTAINER (frame6), alignment11);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment11), 0, 0, 12, 0);

  vbox24 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox24);
  gtk_container_add (GTK_CONTAINER (alignment11), vbox24);

  scrolledwindow37 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow37);
  gtk_box_pack_start (GTK_BOX (vbox24), scrolledwindow37, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow37), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow37), GTK_SHADOW_IN);

  prefs_i7_extensions_view = gtk_tree_view_new ();
  gtk_widget_show (prefs_i7_extensions_view);
  gtk_container_add (GTK_CONTAINER (scrolledwindow37), prefs_i7_extensions_view);
  gtk_tooltips_set_tip (tooltips, prefs_i7_extensions_view, _("This shows the list of installed Natural Inform extensions. Natural Inform extension directories are named after their author; you can drag such directories here to install new extensions. You may also drag individual extension files to an author's directory to add them as an extension by that author."), NULL);
  gtk_tree_view_set_headers_visible (GTK_TREE_VIEW (prefs_i7_extensions_view), FALSE);
  gtk_tree_view_set_enable_search (GTK_TREE_VIEW (prefs_i7_extensions_view), FALSE);
  gtk_tree_view_set_fixed_height_mode (GTK_TREE_VIEW (prefs_i7_extensions_view), TRUE);

  hbuttonbox1 = gtk_hbutton_box_new ();
  gtk_widget_show (hbuttonbox1);
  gtk_box_pack_start (GTK_BOX (vbox24), hbuttonbox1, FALSE, TRUE, 0);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (hbuttonbox1), GTK_BUTTONBOX_END);

  prefs_i7_extension_add = gtk_button_new_from_stock ("gtk-add");
  gtk_widget_show (prefs_i7_extension_add);
  gtk_container_add (GTK_CONTAINER (hbuttonbox1), prefs_i7_extension_add);
  GTK_WIDGET_SET_FLAGS (prefs_i7_extension_add, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, prefs_i7_extension_add, _("Adds a new Natural Inform extension using a file chooser."), NULL);

  prefs_i7_extension_remove = gtk_button_new_from_stock ("gtk-remove");
  gtk_widget_show (prefs_i7_extension_remove);
  gtk_container_add (GTK_CONTAINER (hbuttonbox1), prefs_i7_extension_remove);
  gtk_widget_set_sensitive (prefs_i7_extension_remove, FALSE);
  GTK_WIDGET_SET_FLAGS (prefs_i7_extension_remove, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, prefs_i7_extension_remove, _("Deletes the currently selected Natural Inform extension."), NULL);

  label71 = gtk_label_new (_("<b>Natural Inform Extensions</b>"));
  gtk_widget_show (label71);
  gtk_frame_set_label_widget (GTK_FRAME (frame6), label71);
  gtk_label_set_use_markup (GTK_LABEL (label71), TRUE);

  frame7 = gtk_frame_new (NULL);
  gtk_box_pack_start (GTK_BOX (vbox23), frame7, TRUE, TRUE, 0);

  alignment12 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment12);
  gtk_container_add (GTK_CONTAINER (frame7), alignment12);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment12), 0, 0, 12, 0);

  vbox25 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox25);
  gtk_container_add (GTK_CONTAINER (alignment12), vbox25);

  scrolledwindow38 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow38);
  gtk_box_pack_start (GTK_BOX (vbox25), scrolledwindow38, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow38), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow38), GTK_SHADOW_IN);

  prefs_i6_extensions_view = gtk_tree_view_new ();
  gtk_container_add (GTK_CONTAINER (scrolledwindow38), prefs_i6_extensions_view);
  gtk_tooltips_set_tip (tooltips, prefs_i6_extensions_view, _("This shows the list of installed Inform 6 extensions. Drag files or directories here to install new extensions."), NULL);
  gtk_tree_view_set_headers_visible (GTK_TREE_VIEW (prefs_i6_extensions_view), FALSE);
  gtk_tree_view_set_enable_search (GTK_TREE_VIEW (prefs_i6_extensions_view), FALSE);
  gtk_tree_view_set_fixed_height_mode (GTK_TREE_VIEW (prefs_i6_extensions_view), TRUE);

  hbuttonbox2 = gtk_hbutton_box_new ();
  gtk_widget_show (hbuttonbox2);
  gtk_box_pack_start (GTK_BOX (vbox25), hbuttonbox2, FALSE, TRUE, 0);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (hbuttonbox2), GTK_BUTTONBOX_END);

  prefs_i6_extension_add = gtk_button_new_from_stock ("gtk-add");
  gtk_container_add (GTK_CONTAINER (hbuttonbox2), prefs_i6_extension_add);
  gtk_widget_set_sensitive (prefs_i6_extension_add, FALSE);
  GTK_WIDGET_SET_FLAGS (prefs_i6_extension_add, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, prefs_i6_extension_add, _("Adds a new Inform 6 extension using a file chooser."), NULL);

  prefs_i6_extension_remove = gtk_button_new_from_stock ("gtk-remove");
  gtk_container_add (GTK_CONTAINER (hbuttonbox2), prefs_i6_extension_remove);
  gtk_widget_set_sensitive (prefs_i6_extension_remove, FALSE);
  GTK_WIDGET_SET_FLAGS (prefs_i6_extension_remove, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, prefs_i6_extension_remove, _("Deletes the currently selected Inform 6 extension."), NULL);

  label72 = gtk_label_new (_("<b>Inform 6 Extensions</b>"));
  gtk_widget_show (label72);
  gtk_frame_set_label_widget (GTK_FRAME (frame7), label72);
  gtk_label_set_use_markup (GTK_LABEL (label72), TRUE);

  label67 = gtk_label_new (_("Extensions"));
  gtk_widget_show (label67);
  gtk_notebook_set_tab_label (GTK_NOTEBOOK (prefs_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (prefs_notebook), 5), label67);

  dialog_action_area4 = GTK_DIALOG (prefs_dialog)->action_area;
  gtk_widget_show (dialog_action_area4);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (dialog_action_area4), GTK_BUTTONBOX_END);

  prefs_close = gtk_button_new_from_stock ("gtk-close");
  gtk_widget_show (prefs_close);
  gtk_dialog_add_action_widget (GTK_DIALOG (prefs_dialog), prefs_close, GTK_RESPONSE_CLOSE);
  GTK_WIDGET_SET_FLAGS (prefs_close, GTK_CAN_DEFAULT);

  g_signal_connect ((gpointer) prefs_dialog, "realize",
                    G_CALLBACK (on_prefs_dialog_realize),
                    NULL);
  g_signal_connect ((gpointer) prefs_dialog, "delete_event",
                    G_CALLBACK (gtk_widget_hide_on_delete),
                    NULL);
  g_signal_connect ((gpointer) prefs_author, "changed",
                    G_CALLBACK (on_prefs_author_changed),
                    NULL);
  g_signal_connect ((gpointer) prefs_auto_indent_toggle, "toggled",
                    G_CALLBACK (on_prefs_auto_indent_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_follow_symbols_toggle, "toggled",
                    G_CALLBACK (on_prefs_follow_symbols_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_intelligent_inspector_toggle, "toggled",
                    G_CALLBACK (on_prefs_intelligent_inspector_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_auto_number_toggle, "toggled",
                    G_CALLBACK (on_prefs_auto_number_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_elastic_tabstops_toggle, "toggled",
                    G_CALLBACK (on_prefs_elastic_tabstops_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_font_set, "changed",
                    G_CALLBACK (on_prefs_font_set_changed),
                    NULL);
  g_signal_connect ((gpointer) prefs_font_size, "changed",
                    G_CALLBACK (on_prefs_font_size_changed),
                    NULL);
  g_signal_connect ((gpointer) prefs_font_styling, "changed",
                    G_CALLBACK (on_prefs_font_styling_changed),
                    NULL);
  g_signal_connect ((gpointer) prefs_custom_font, "font_set",
                    G_CALLBACK (on_prefs_custom_font_font_set),
                    NULL);
  g_signal_connect ((gpointer) prefs_color_set, "changed",
                    G_CALLBACK (on_prefs_color_set_changed),
                    NULL);
  g_signal_connect ((gpointer) prefs_change_colors, "changed",
                    G_CALLBACK (on_prefs_change_colors_changed),
                    NULL);
  g_signal_connect ((gpointer) tab_ruler, "value_changed",
                    G_CALLBACK (on_tab_ruler_value_changed),
                    NULL);
  g_signal_connect ((gpointer) tab_ruler, "format_value",
                    G_CALLBACK (on_tab_ruler_format_value),
                    NULL);
  g_signal_connect ((gpointer) prefs_clean_build_toggle, "toggled",
                    G_CALLBACK (on_prefs_clean_build_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_clean_index_toggle, "toggled",
                    G_CALLBACK (on_prefs_clean_index_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_glulx_combo, "changed",
                    G_CALLBACK (on_prefs_glulx_combo_changed),
                    NULL);
  g_signal_connect ((gpointer) prefs_show_log_toggle, "toggled",
                    G_CALLBACK (on_prefs_show_log_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_notes_toggle, "toggled",
                    G_CALLBACK (on_prefs_notes_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_headings_toggle, "toggled",
                    G_CALLBACK (on_prefs_headings_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_skein_toggle, "toggled",
                    G_CALLBACK (on_prefs_skein_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_search_toggle, "toggled",
                    G_CALLBACK (on_prefs_search_toggle_toggled),
                    NULL);
  g_signal_connect ((gpointer) prefs_i7_extensions_view, "drag_drop",
                    G_CALLBACK (on_prefs_i7_extensions_view_drag_drop),
                    NULL);
  g_signal_connect ((gpointer) prefs_i7_extensions_view, "drag_data_received",
                    G_CALLBACK (on_prefs_i7_extensions_view_drag_data_received),
                    NULL);
  g_signal_connect ((gpointer) prefs_i7_extension_add, "clicked",
                    G_CALLBACK (on_prefs_i7_extension_add_clicked),
                    NULL);
  g_signal_connect ((gpointer) prefs_i7_extension_remove, "clicked",
                    G_CALLBACK (on_prefs_i7_extension_remove_clicked),
                    NULL);
  g_signal_connect_swapped ((gpointer) prefs_close, "clicked",
                            G_CALLBACK (gtk_widget_hide),
                            GTK_OBJECT (prefs_dialog));

  gtk_label_set_mnemonic_widget (GTK_LABEL (label73), prefs_author);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label61), prefs_font_styling);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label62), prefs_font_size);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label59), prefs_font_set);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label60), prefs_custom_font);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label65b), prefs_color_set);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label64), prefs_change_colors);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label79), tab_ruler);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label104), prefs_glulx_combo);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (prefs_dialog, prefs_dialog, "prefs_dialog");
  GLADE_HOOKUP_OBJECT_NO_REF (prefs_dialog, dialog_vbox4, "dialog_vbox4");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_notebook, "prefs_notebook");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox54, "vbox54");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label73, "label73");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_author, "prefs_author");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label103, "label103");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label102, "label102");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox26, "vbox26");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_indent_toggle, "prefs_indent_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_auto_indent_toggle, "prefs_auto_indent_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_follow_symbols_toggle, "prefs_follow_symbols_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment14, "alignment14");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox27, "vbox27");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_intelligent_inspector_toggle, "prefs_intelligent_inspector_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_auto_number_toggle, "prefs_auto_number_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_elastic_tabstops_toggle, "prefs_elastic_tabstops_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label68, "label68");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox19, "vbox19");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame3, "frame3");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment8, "alignment8");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox20, "vbox20");
  GLADE_HOOKUP_OBJECT (prefs_dialog, table2, "table2");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label61, "label61");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label62, "label62");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label59, "label59");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_font_set, "prefs_font_set");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_font_size, "prefs_font_size");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_font_styling, "prefs_font_styling");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_custom_font, "prefs_custom_font");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label60, "label60");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label58, "label58");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame4, "frame4");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment9, "alignment9");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox21, "vbox21");
  GLADE_HOOKUP_OBJECT (prefs_dialog, table3, "table3");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label65b, "label65b");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_color_set, "prefs_color_set");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label64, "label64");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_change_colors, "prefs_change_colors");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label63, "label63");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame12, "frame12");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment20, "alignment20");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox33, "vbox33");
  GLADE_HOOKUP_OBJECT (prefs_dialog, tab_ruler, "tab_ruler");
  GLADE_HOOKUP_OBJECT (prefs_dialog, tab_example, "tab_example");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label79, "label79");
  GLADE_HOOKUP_OBJECT (prefs_dialog, hseparator2, "hseparator2");
  GLADE_HOOKUP_OBJECT (prefs_dialog, source_example, "source_example");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label65, "label65");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox28, "vbox28");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame8, "frame8");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment15, "alignment15");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox29, "vbox29");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_clean_build_toggle, "prefs_clean_build_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment16, "alignment16");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_clean_index_toggle, "prefs_clean_index_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label74, "label74");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame13, "frame13");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment25, "alignment25");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox53, "vbox53");
  GLADE_HOOKUP_OBJECT (prefs_dialog, hbox32, "hbox32");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label104, "label104");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_glulx_combo, "prefs_glulx_combo");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label100, "label100");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame9, "frame9");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment17, "alignment17");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox30, "vbox30");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_show_log_toggle, "prefs_show_log_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label76, "label76");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label75, "label75");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label69, "label69");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame5, "frame5");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment10, "alignment10");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox22, "vbox22");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame10, "frame10");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment18, "alignment18");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox31, "vbox31");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_notes_toggle, "prefs_notes_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_headings_toggle, "prefs_headings_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_skein_toggle, "prefs_skein_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_search_toggle, "prefs_search_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label77, "label77");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame11, "frame11");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment19, "alignment19");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox32, "vbox32");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_project_files_toggle, "prefs_project_files_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_watchpoints_toggle, "prefs_watchpoints_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_breakpoints_toggle, "prefs_breakpoints_toggle");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label78, "label78");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label70, "label70");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label66, "label66");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox23, "vbox23");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame6, "frame6");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment11, "alignment11");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox24, "vbox24");
  GLADE_HOOKUP_OBJECT (prefs_dialog, scrolledwindow37, "scrolledwindow37");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_i7_extensions_view, "prefs_i7_extensions_view");
  GLADE_HOOKUP_OBJECT (prefs_dialog, hbuttonbox1, "hbuttonbox1");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_i7_extension_add, "prefs_i7_extension_add");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_i7_extension_remove, "prefs_i7_extension_remove");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label71, "label71");
  GLADE_HOOKUP_OBJECT (prefs_dialog, frame7, "frame7");
  GLADE_HOOKUP_OBJECT (prefs_dialog, alignment12, "alignment12");
  GLADE_HOOKUP_OBJECT (prefs_dialog, vbox25, "vbox25");
  GLADE_HOOKUP_OBJECT (prefs_dialog, scrolledwindow38, "scrolledwindow38");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_i6_extensions_view, "prefs_i6_extensions_view");
  GLADE_HOOKUP_OBJECT (prefs_dialog, hbuttonbox2, "hbuttonbox2");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_i6_extension_add, "prefs_i6_extension_add");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_i6_extension_remove, "prefs_i6_extension_remove");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label72, "label72");
  GLADE_HOOKUP_OBJECT (prefs_dialog, label67, "label67");
  GLADE_HOOKUP_OBJECT_NO_REF (prefs_dialog, dialog_action_area4, "dialog_action_area4");
  GLADE_HOOKUP_OBJECT (prefs_dialog, prefs_close, "prefs_close");
  GLADE_HOOKUP_OBJECT_NO_REF (prefs_dialog, tooltips, "tooltips");

  gtk_widget_grab_default (prefs_close);
  return prefs_dialog;
}

GtkWidget*
create_inspector_window (void)
{
  GtkWidget *inspector_window;
  GdkPixbuf *inspector_window_icon_pixbuf;
  GtkWidget *vbox34;
  GtkWidget *notes_inspector;
  GtkWidget *scrolledwindow42;
  GtkWidget *notes;
  GtkWidget *label83;
  GtkWidget *headings_inspector;
  GtkWidget *scrolledwindow43;
  GtkWidget *headings;
  GtkWidget *label84;
  GtkWidget *skein_inspector;
  GtkWidget *skein_inspector_scroll;
  GtkWidget *skein_inspector_canvas;
  GtkWidget *label85;
  GtkWidget *search_inspector;
  GtkWidget *vbox35;
  GtkWidget *hbox27;
  GtkWidget *label87;
  GtkWidget *search_inspector_text;
  GtkWidget *search_inspector_case_sensitive;
  GtkWidget *hbox28;
  GtkWidget *search_inspector_algorithm;
  GtkWidget *search_inspector_search;
  GtkWidget *hseparator4;
  GtkWidget *search_inspector_search_project;
  GtkWidget *search_inspector_search_extensions;
  GtkWidget *search_inspector_search_documentation;
  GtkWidget *label86;
  GtkWidget *no_inspector;
  GtkTooltips *tooltips;

  tooltips = gtk_tooltips_new ();

  inspector_window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (inspector_window, 250, -1);
  gtk_window_set_title (GTK_WINDOW (inspector_window), _("Inspectors"));
  gtk_window_set_resizable (GTK_WINDOW (inspector_window), FALSE);
  inspector_window_icon_pixbuf = create_pixbuf ("gnome-inform7/Inform.png");
  if (inspector_window_icon_pixbuf)
    {
      gtk_window_set_icon (GTK_WINDOW (inspector_window), inspector_window_icon_pixbuf);
      gdk_pixbuf_unref (inspector_window_icon_pixbuf);
    }
  gtk_window_set_skip_taskbar_hint (GTK_WINDOW (inspector_window), TRUE);
  gtk_window_set_skip_pager_hint (GTK_WINDOW (inspector_window), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (inspector_window), GDK_WINDOW_TYPE_HINT_UTILITY);

  vbox34 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox34);
  gtk_container_add (GTK_CONTAINER (inspector_window), vbox34);

  notes_inspector = gtk_expander_new (NULL);
  gtk_widget_show (notes_inspector);
  gtk_box_pack_start (GTK_BOX (vbox34), notes_inspector, TRUE, TRUE, 0);
  gtk_expander_set_expanded (GTK_EXPANDER (notes_inspector), TRUE);

  scrolledwindow42 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow42);
  gtk_container_add (GTK_CONTAINER (notes_inspector), scrolledwindow42);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow42), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow42), GTK_SHADOW_IN);

  notes = gtk_text_view_new ();
  gtk_widget_show (notes);
  gtk_container_add (GTK_CONTAINER (scrolledwindow42), notes);
  gtk_widget_set_size_request (notes, -1, 200);
  gtk_tooltips_set_tip (tooltips, notes, _("You can enter notes about the current project here."), NULL);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (notes), GTK_WRAP_WORD);

  label83 = gtk_label_new (_("Notes"));
  gtk_widget_show (label83);
  gtk_expander_set_label_widget (GTK_EXPANDER (notes_inspector), label83);

  headings_inspector = gtk_expander_new (NULL);
  gtk_widget_show (headings_inspector);
  gtk_box_pack_start (GTK_BOX (vbox34), headings_inspector, TRUE, TRUE, 0);
  gtk_expander_set_expanded (GTK_EXPANDER (headings_inspector), TRUE);

  scrolledwindow43 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow43);
  gtk_container_add (GTK_CONTAINER (headings_inspector), scrolledwindow43);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow43), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow43), GTK_SHADOW_IN);

  headings = gtk_tree_view_new ();
  gtk_widget_show (headings);
  gtk_container_add (GTK_CONTAINER (scrolledwindow43), headings);
  gtk_widget_set_size_request (headings, -1, 200);
  gtk_tooltips_set_tip (tooltips, headings, _("This shows a table of contents for the current project."), NULL);
  gtk_tree_view_set_headers_visible (GTK_TREE_VIEW (headings), FALSE);
  gtk_tree_view_set_enable_search (GTK_TREE_VIEW (headings), FALSE);
  gtk_tree_view_set_fixed_height_mode (GTK_TREE_VIEW (headings), TRUE);

  label84 = gtk_label_new (_("Headings"));
  gtk_widget_show (label84);
  gtk_expander_set_label_widget (GTK_EXPANDER (headings_inspector), label84);

  skein_inspector = gtk_expander_new (NULL);
  gtk_box_pack_start (GTK_BOX (vbox34), skein_inspector, TRUE, TRUE, 0);

  skein_inspector_scroll = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (skein_inspector_scroll);
  gtk_container_add (GTK_CONTAINER (skein_inspector), skein_inspector_scroll);

  skein_inspector_canvas = gnome_canvas_new ();
  gtk_widget_show (skein_inspector_canvas);
  gtk_container_add (GTK_CONTAINER (skein_inspector_scroll), skein_inspector_canvas);
  gtk_widget_set_size_request (skein_inspector_canvas, -1, 200);
  gnome_canvas_set_scroll_region (GNOME_CANVAS (skein_inspector_canvas), 0, 0, 100, 100);

  label85 = gtk_label_new (_("Skein"));
  gtk_widget_show (label85);
  gtk_expander_set_label_widget (GTK_EXPANDER (skein_inspector), label85);

  search_inspector = gtk_expander_new (NULL);
  gtk_widget_show (search_inspector);
  gtk_box_pack_start (GTK_BOX (vbox34), search_inspector, TRUE, TRUE, 0);
  gtk_widget_set_size_request (search_inspector, 250, -1);
  gtk_expander_set_expanded (GTK_EXPANDER (search_inspector), TRUE);

  vbox35 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox35);
  gtk_container_add (GTK_CONTAINER (search_inspector), vbox35);

  hbox27 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox27);
  gtk_box_pack_start (GTK_BOX (vbox35), hbox27, TRUE, TRUE, 0);

  label87 = gtk_label_new (_("Search for: "));
  gtk_widget_show (label87);
  gtk_box_pack_start (GTK_BOX (hbox27), label87, FALSE, FALSE, 0);

  search_inspector_text = gtk_entry_new ();
  gtk_widget_show (search_inspector_text);
  gtk_box_pack_start (GTK_BOX (hbox27), search_inspector_text, TRUE, TRUE, 0);
  gtk_tooltips_set_tip (tooltips, search_inspector_text, _("Enter the phrase you want to search for here."), NULL);
  gtk_entry_set_invisible_char (GTK_ENTRY (search_inspector_text), 8226);
  gtk_entry_set_activates_default (GTK_ENTRY (search_inspector_text), TRUE);

  search_inspector_case_sensitive = gtk_check_button_new_with_mnemonic (_("Case sensitive"));
  gtk_widget_show (search_inspector_case_sensitive);
  gtk_box_pack_start (GTK_BOX (vbox35), search_inspector_case_sensitive, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, search_inspector_case_sensitive, _("If checked, the search string will be matched with exact case."), NULL);

  hbox28 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox28);
  gtk_box_pack_start (GTK_BOX (vbox35), hbox28, TRUE, TRUE, 0);

  search_inspector_algorithm = gtk_combo_box_new_text ();
  gtk_widget_show (search_inspector_algorithm);
  gtk_box_pack_start (GTK_BOX (hbox28), search_inspector_algorithm, TRUE, TRUE, 0);
  gtk_combo_box_append_text (GTK_COMBO_BOX (search_inspector_algorithm), _("Contains"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (search_inspector_algorithm), _("Starts with"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (search_inspector_algorithm), _("Full word"));

  search_inspector_search = gtk_button_new_from_stock ("gtk-find");
  gtk_widget_show (search_inspector_search);
  gtk_box_pack_start (GTK_BOX (hbox28), search_inspector_search, FALSE, FALSE, 0);
  gtk_widget_set_sensitive (search_inspector_search, FALSE);
  GTK_WIDGET_SET_FLAGS (search_inspector_search, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, search_inspector_search, _("Click this to begin the search."), NULL);

  hseparator4 = gtk_hseparator_new ();
  gtk_widget_show (hseparator4);
  gtk_box_pack_start (GTK_BOX (vbox35), hseparator4, TRUE, TRUE, 0);

  search_inspector_search_project = gtk_check_button_new_with_mnemonic (_("Project files"));
  gtk_widget_show (search_inspector_search_project);
  gtk_box_pack_start (GTK_BOX (vbox35), search_inspector_search_project, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, search_inspector_search_project, _("If this is checked, the files in the current project will be searched."), NULL);
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (search_inspector_search_project), TRUE);

  search_inspector_search_extensions = gtk_check_button_new_with_mnemonic (_("Extensions"));
  gtk_widget_show (search_inspector_search_extensions);
  gtk_box_pack_start (GTK_BOX (vbox35), search_inspector_search_extensions, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, search_inspector_search_extensions, _("If this is checked, the extensions will be searched."), NULL);

  search_inspector_search_documentation = gtk_check_button_new_with_mnemonic (_("Documentation"));
  gtk_widget_show (search_inspector_search_documentation);
  gtk_box_pack_start (GTK_BOX (vbox35), search_inspector_search_documentation, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, search_inspector_search_documentation, _("If this is checked, the documentation will be searched."), NULL);

  label86 = gtk_label_new (_("Search Files"));
  gtk_widget_show (label86);
  gtk_expander_set_label_widget (GTK_EXPANDER (search_inspector), label86);

  no_inspector = gtk_label_new (_("No inspectors enabled."));
  gtk_widget_show (no_inspector);
  gtk_box_pack_start (GTK_BOX (vbox34), no_inspector, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (no_inspector), 0, 0.5);

  g_signal_connect_after ((gpointer) inspector_window, "realize",
                          G_CALLBACK (after_inspector_window_realize),
                          NULL);
  g_signal_connect ((gpointer) inspector_window, "delete_event",
                    G_CALLBACK (on_inspector_window_delete),
                    NULL);
  g_signal_connect ((gpointer) headings, "row_activated",
                    G_CALLBACK (on_headings_row_activated),
                    NULL);
  g_signal_connect ((gpointer) search_inspector_text, "changed",
                    G_CALLBACK (on_search_inspector_text_changed),
                    NULL);
  g_signal_connect ((gpointer) search_inspector_search, "clicked",
                    G_CALLBACK (on_search_inspector_search_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (inspector_window, inspector_window, "inspector_window");
  GLADE_HOOKUP_OBJECT (inspector_window, vbox34, "vbox34");
  GLADE_HOOKUP_OBJECT (inspector_window, notes_inspector, "notes_inspector");
  GLADE_HOOKUP_OBJECT (inspector_window, scrolledwindow42, "scrolledwindow42");
  GLADE_HOOKUP_OBJECT (inspector_window, notes, "notes");
  GLADE_HOOKUP_OBJECT (inspector_window, label83, "label83");
  GLADE_HOOKUP_OBJECT (inspector_window, headings_inspector, "headings_inspector");
  GLADE_HOOKUP_OBJECT (inspector_window, scrolledwindow43, "scrolledwindow43");
  GLADE_HOOKUP_OBJECT (inspector_window, headings, "headings");
  GLADE_HOOKUP_OBJECT (inspector_window, label84, "label84");
  GLADE_HOOKUP_OBJECT (inspector_window, skein_inspector, "skein_inspector");
  GLADE_HOOKUP_OBJECT (inspector_window, skein_inspector_scroll, "skein_inspector_scroll");
  GLADE_HOOKUP_OBJECT (inspector_window, skein_inspector_canvas, "skein_inspector_canvas");
  GLADE_HOOKUP_OBJECT (inspector_window, label85, "label85");
  GLADE_HOOKUP_OBJECT (inspector_window, search_inspector, "search_inspector");
  GLADE_HOOKUP_OBJECT (inspector_window, vbox35, "vbox35");
  GLADE_HOOKUP_OBJECT (inspector_window, hbox27, "hbox27");
  GLADE_HOOKUP_OBJECT (inspector_window, label87, "label87");
  GLADE_HOOKUP_OBJECT (inspector_window, search_inspector_text, "search_inspector_text");
  GLADE_HOOKUP_OBJECT (inspector_window, search_inspector_case_sensitive, "search_inspector_case_sensitive");
  GLADE_HOOKUP_OBJECT (inspector_window, hbox28, "hbox28");
  GLADE_HOOKUP_OBJECT (inspector_window, search_inspector_algorithm, "search_inspector_algorithm");
  GLADE_HOOKUP_OBJECT (inspector_window, search_inspector_search, "search_inspector_search");
  GLADE_HOOKUP_OBJECT (inspector_window, hseparator4, "hseparator4");
  GLADE_HOOKUP_OBJECT (inspector_window, search_inspector_search_project, "search_inspector_search_project");
  GLADE_HOOKUP_OBJECT (inspector_window, search_inspector_search_extensions, "search_inspector_search_extensions");
  GLADE_HOOKUP_OBJECT (inspector_window, search_inspector_search_documentation, "search_inspector_search_documentation");
  GLADE_HOOKUP_OBJECT (inspector_window, label86, "label86");
  GLADE_HOOKUP_OBJECT (inspector_window, no_inspector, "no_inspector");
  GLADE_HOOKUP_OBJECT_NO_REF (inspector_window, tooltips, "tooltips");

  gtk_widget_grab_default (search_inspector_search);
  return inspector_window;
}

GtkWidget*
create_search_window (void)
{
  GtkWidget *search_window;
  GdkPixbuf *search_window_icon_pixbuf;
  GtkWidget *vbox36;
  GtkWidget *hbox29;
  GtkWidget *label88;
  GtkWidget *search_text_label;
  GtkWidget *scrolledwindow45;
  GtkWidget *search_results_view;
  GtkTooltips *tooltips;

  tooltips = gtk_tooltips_new ();

  search_window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (search_window), _("Search results"));
  gtk_window_set_position (GTK_WINDOW (search_window), GTK_WIN_POS_CENTER);
  search_window_icon_pixbuf = create_pixbuf ("gnome-inform7/Inform.png");
  if (search_window_icon_pixbuf)
    {
      gtk_window_set_icon (GTK_WINDOW (search_window), search_window_icon_pixbuf);
      gdk_pixbuf_unref (search_window_icon_pixbuf);
    }
  gtk_window_set_skip_pager_hint (GTK_WINDOW (search_window), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (search_window), GDK_WINDOW_TYPE_HINT_UTILITY);

  vbox36 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox36);
  gtk_container_add (GTK_CONTAINER (search_window), vbox36);

  hbox29 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox29);
  gtk_box_pack_start (GTK_BOX (vbox36), hbox29, FALSE, FALSE, 0);

  label88 = gtk_label_new (_("Search results for: "));
  gtk_widget_show (label88);
  gtk_box_pack_start (GTK_BOX (hbox29), label88, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label88), 0, 0.53);
  gtk_misc_set_padding (GTK_MISC (label88), 3, 5);

  search_text_label = gtk_label_new ("");
  gtk_widget_show (search_text_label);
  gtk_box_pack_start (GTK_BOX (hbox29), search_text_label, TRUE, TRUE, 0);
  gtk_misc_set_alignment (GTK_MISC (search_text_label), 0, 0.5);
  gtk_label_set_ellipsize (GTK_LABEL (search_text_label), PANGO_ELLIPSIZE_END);

  scrolledwindow45 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow45);
  gtk_box_pack_start (GTK_BOX (vbox36), scrolledwindow45, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow45), GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow45), GTK_SHADOW_IN);

  search_results_view = gtk_tree_view_new ();
  gtk_widget_show (search_results_view);
  gtk_container_add (GTK_CONTAINER (scrolledwindow45), search_results_view);
  gtk_widget_set_size_request (search_results_view, -1, 250);
  gtk_tooltips_set_tip (tooltips, search_results_view, _("This shows the list of results from the search displayed above."), NULL);
  gtk_tree_view_set_rules_hint (GTK_TREE_VIEW (search_results_view), TRUE);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (search_window, search_window, "search_window");
  GLADE_HOOKUP_OBJECT (search_window, vbox36, "vbox36");
  GLADE_HOOKUP_OBJECT (search_window, hbox29, "hbox29");
  GLADE_HOOKUP_OBJECT (search_window, label88, "label88");
  GLADE_HOOKUP_OBJECT (search_window, search_text_label, "search_text_label");
  GLADE_HOOKUP_OBJECT (search_window, scrolledwindow45, "scrolledwindow45");
  GLADE_HOOKUP_OBJECT (search_window, search_results_view, "search_results_view");
  GLADE_HOOKUP_OBJECT_NO_REF (search_window, tooltips, "tooltips");

  return search_window;
}

GtkWidget*
create_skein_spacing_dialog (void)
{
  GtkWidget *skein_spacing_dialog;
  GtkWidget *dialog_vbox5;
  GtkWidget *vbox51;
  GtkWidget *label94;
  GtkWidget *table4;
  GtkWidget *skein_vertical_spacing;
  GtkWidget *skein_horizontal_spacing;
  GtkWidget *label95;
  GtkWidget *label96;
  GtkWidget *dialog_action_area5;
  GtkWidget *skein_spacing_use_defaults;
  GtkWidget *alignment24;
  GtkWidget *hbox30;
  GtkWidget *image275;
  GtkWidget *label93;
  GtkWidget *skein_spacing_cancel;
  GtkWidget *skein_spacing_ok;

  skein_spacing_dialog = gtk_dialog_new ();
  gtk_container_set_border_width (GTK_CONTAINER (skein_spacing_dialog), 3);
  gtk_window_set_title (GTK_WINDOW (skein_spacing_dialog), _("Skein spacing options"));
  gtk_window_set_position (GTK_WINDOW (skein_spacing_dialog), GTK_WIN_POS_CENTER);
  gtk_window_set_type_hint (GTK_WINDOW (skein_spacing_dialog), GDK_WINDOW_TYPE_HINT_DIALOG);

  dialog_vbox5 = GTK_DIALOG (skein_spacing_dialog)->vbox;
  gtk_widget_show (dialog_vbox5);

  vbox51 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox51);
  gtk_box_pack_start (GTK_BOX (dialog_vbox5), vbox51, TRUE, TRUE, 0);

  label94 = gtk_label_new (_("<b>Edit the spacing for items in the skein</b>"));
  gtk_widget_show (label94);
  gtk_box_pack_start (GTK_BOX (vbox51), label94, FALSE, TRUE, 0);
  gtk_label_set_use_markup (GTK_LABEL (label94), TRUE);
  gtk_label_set_justify (GTK_LABEL (label94), GTK_JUSTIFY_CENTER);
  gtk_label_set_line_wrap (GTK_LABEL (label94), TRUE);
  gtk_misc_set_padding (GTK_MISC (label94), 0, 5);

  table4 = gtk_table_new (2, 2, FALSE);
  gtk_widget_show (table4);
  gtk_box_pack_start (GTK_BOX (vbox51), table4, TRUE, FALSE, 0);

  skein_vertical_spacing = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 200, 5, 0, 0)));
  gtk_widget_show (skein_vertical_spacing);
  gtk_table_attach (GTK_TABLE (table4), skein_vertical_spacing, 1, 2, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL), 0, 0);
  gtk_scale_set_draw_value (GTK_SCALE (skein_vertical_spacing), FALSE);

  skein_horizontal_spacing = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 100, 5, 0, 0)));
  gtk_widget_show (skein_horizontal_spacing);
  gtk_table_attach (GTK_TABLE (table4), skein_horizontal_spacing, 0, 1, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL), 0, 0);
  gtk_scale_set_draw_value (GTK_SCALE (skein_horizontal_spacing), FALSE);

  label95 = gtk_label_new_with_mnemonic (_("_Horizontal spacing"));
  gtk_widget_show (label95);
  gtk_table_attach (GTK_TABLE (table4), label95, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (label95), 0, 1);

  label96 = gtk_label_new_with_mnemonic (_("_Vertical spacing"));
  gtk_widget_show (label96);
  gtk_table_attach (GTK_TABLE (table4), label96, 1, 2, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (label96), 0, 1);

  dialog_action_area5 = GTK_DIALOG (skein_spacing_dialog)->action_area;
  gtk_widget_show (dialog_action_area5);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (dialog_action_area5), GTK_BUTTONBOX_END);

  skein_spacing_use_defaults = gtk_button_new ();
  gtk_widget_show (skein_spacing_use_defaults);
  gtk_dialog_add_action_widget (GTK_DIALOG (skein_spacing_dialog), skein_spacing_use_defaults, GTK_RESPONSE_REJECT);
  GTK_WIDGET_SET_FLAGS (skein_spacing_use_defaults, GTK_CAN_DEFAULT);

  alignment24 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment24);
  gtk_container_add (GTK_CONTAINER (skein_spacing_use_defaults), alignment24);

  hbox30 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox30);
  gtk_container_add (GTK_CONTAINER (alignment24), hbox30);

  image275 = gtk_image_new_from_stock ("gtk-revert-to-saved", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image275);
  gtk_box_pack_start (GTK_BOX (hbox30), image275, FALSE, FALSE, 0);

  label93 = gtk_label_new_with_mnemonic (_("_Use defaults"));
  gtk_widget_show (label93);
  gtk_box_pack_start (GTK_BOX (hbox30), label93, FALSE, FALSE, 0);

  skein_spacing_cancel = gtk_button_new_from_stock ("gtk-cancel");
  gtk_widget_show (skein_spacing_cancel);
  gtk_dialog_add_action_widget (GTK_DIALOG (skein_spacing_dialog), skein_spacing_cancel, GTK_RESPONSE_CANCEL);
  GTK_WIDGET_SET_FLAGS (skein_spacing_cancel, GTK_CAN_DEFAULT);

  skein_spacing_ok = gtk_button_new_from_stock ("gtk-ok");
  gtk_widget_show (skein_spacing_ok);
  gtk_dialog_add_action_widget (GTK_DIALOG (skein_spacing_dialog), skein_spacing_ok, GTK_RESPONSE_OK);
  GTK_WIDGET_SET_FLAGS (skein_spacing_ok, GTK_CAN_DEFAULT);

  g_signal_connect ((gpointer) skein_spacing_dialog, "delete_event",
                    G_CALLBACK (gtk_widget_destroy),
                    NULL);
  g_signal_connect_swapped ((gpointer) skein_spacing_ok, "clicked",
                            G_CALLBACK (gtk_widget_destroy),
                            GTK_OBJECT (skein_spacing_dialog));

  gtk_label_set_mnemonic_widget (GTK_LABEL (label95), skein_horizontal_spacing);
  gtk_label_set_mnemonic_widget (GTK_LABEL (label96), skein_vertical_spacing);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (skein_spacing_dialog, skein_spacing_dialog, "skein_spacing_dialog");
  GLADE_HOOKUP_OBJECT_NO_REF (skein_spacing_dialog, dialog_vbox5, "dialog_vbox5");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, vbox51, "vbox51");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, label94, "label94");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, table4, "table4");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, skein_vertical_spacing, "skein_vertical_spacing");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, skein_horizontal_spacing, "skein_horizontal_spacing");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, label95, "label95");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, label96, "label96");
  GLADE_HOOKUP_OBJECT_NO_REF (skein_spacing_dialog, dialog_action_area5, "dialog_action_area5");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, skein_spacing_use_defaults, "skein_spacing_use_defaults");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, alignment24, "alignment24");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, hbox30, "hbox30");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, image275, "image275");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, label93, "label93");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, skein_spacing_cancel, "skein_spacing_cancel");
  GLADE_HOOKUP_OBJECT (skein_spacing_dialog, skein_spacing_ok, "skein_spacing_ok");

  return skein_spacing_dialog;
}

GtkWidget*
create_skein_trim_dialog (void)
{
  GtkWidget *skein_trim_dialog;
  GdkPixbuf *skein_trim_dialog_icon_pixbuf;
  GtkWidget *dialog_vbox6;
  GtkWidget *vbox52;
  GtkWidget *label97;
  GtkWidget *hbox31;
  GtkWidget *label98;
  GtkWidget *label99;
  GtkWidget *skein_trim_scale;
  GtkWidget *dialog_action_area6;
  GtkWidget *skein_trim_cancel;
  GtkWidget *skein_trim_ok;

  skein_trim_dialog = gtk_dialog_new ();
  gtk_container_set_border_width (GTK_CONTAINER (skein_trim_dialog), 3);
  gtk_window_set_title (GTK_WINDOW (skein_trim_dialog), _("Trim the skein?"));
  gtk_window_set_position (GTK_WINDOW (skein_trim_dialog), GTK_WIN_POS_CENTER);
  skein_trim_dialog_icon_pixbuf = create_pixbuf ("gnome-inform7/Inform.png");
  if (skein_trim_dialog_icon_pixbuf)
    {
      gtk_window_set_icon (GTK_WINDOW (skein_trim_dialog), skein_trim_dialog_icon_pixbuf);
      gdk_pixbuf_unref (skein_trim_dialog_icon_pixbuf);
    }
  gtk_window_set_type_hint (GTK_WINDOW (skein_trim_dialog), GDK_WINDOW_TYPE_HINT_DIALOG);

  dialog_vbox6 = GTK_DIALOG (skein_trim_dialog)->vbox;
  gtk_widget_show (dialog_vbox6);

  vbox52 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox52);
  gtk_box_pack_start (GTK_BOX (dialog_vbox6), vbox52, TRUE, TRUE, 0);

  label97 = gtk_label_new (_("This will remove nodes from the skein and transcript that have not been visited recently, and which have not been locked. Drag the slider to the right to increase the number of nodes that will be deleted.\n\nThis operation cannot be undone.\n"));
  gtk_widget_show (label97);
  gtk_box_pack_start (GTK_BOX (vbox52), label97, FALSE, FALSE, 0);
  gtk_label_set_line_wrap (GTK_LABEL (label97), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label97), 0, 0.5);

  hbox31 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox31);
  gtk_box_pack_start (GTK_BOX (vbox52), hbox31, TRUE, TRUE, 0);

  label98 = gtk_label_new_with_mnemonic (_("_Trim a little"));
  gtk_widget_show (label98);
  gtk_box_pack_start (GTK_BOX (hbox31), label98, TRUE, TRUE, 0);
  gtk_misc_set_alignment (GTK_MISC (label98), 0, 1);

  label99 = gtk_label_new (_("Trim a lot"));
  gtk_widget_show (label99);
  gtk_box_pack_start (GTK_BOX (hbox31), label99, TRUE, TRUE, 0);
  gtk_label_set_justify (GTK_LABEL (label99), GTK_JUSTIFY_RIGHT);
  gtk_misc_set_alignment (GTK_MISC (label99), 1, 1);

  skein_trim_scale = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (10, 1, 30, 1, 0, 0)));
  gtk_widget_show (skein_trim_scale);
  gtk_box_pack_start (GTK_BOX (vbox52), skein_trim_scale, FALSE, TRUE, 0);
  gtk_scale_set_draw_value (GTK_SCALE (skein_trim_scale), FALSE);

  dialog_action_area6 = GTK_DIALOG (skein_trim_dialog)->action_area;
  gtk_widget_show (dialog_action_area6);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (dialog_action_area6), GTK_BUTTONBOX_END);

  skein_trim_cancel = gtk_button_new_from_stock ("gtk-cancel");
  gtk_widget_show (skein_trim_cancel);
  gtk_dialog_add_action_widget (GTK_DIALOG (skein_trim_dialog), skein_trim_cancel, GTK_RESPONSE_CANCEL);
  GTK_WIDGET_SET_FLAGS (skein_trim_cancel, GTK_CAN_DEFAULT);

  skein_trim_ok = gtk_button_new_from_stock ("gtk-ok");
  gtk_widget_show (skein_trim_ok);
  gtk_dialog_add_action_widget (GTK_DIALOG (skein_trim_dialog), skein_trim_ok, GTK_RESPONSE_OK);
  GTK_WIDGET_SET_FLAGS (skein_trim_ok, GTK_CAN_DEFAULT);

  g_signal_connect ((gpointer) skein_trim_dialog, "delete_event",
                    G_CALLBACK (gtk_widget_destroy),
                    NULL);
  g_signal_connect_swapped ((gpointer) skein_trim_cancel, "clicked",
                            G_CALLBACK (gtk_widget_destroy),
                            GTK_OBJECT (skein_trim_dialog));

  gtk_label_set_mnemonic_widget (GTK_LABEL (label98), skein_trim_scale);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (skein_trim_dialog, skein_trim_dialog, "skein_trim_dialog");
  GLADE_HOOKUP_OBJECT_NO_REF (skein_trim_dialog, dialog_vbox6, "dialog_vbox6");
  GLADE_HOOKUP_OBJECT (skein_trim_dialog, vbox52, "vbox52");
  GLADE_HOOKUP_OBJECT (skein_trim_dialog, label97, "label97");
  GLADE_HOOKUP_OBJECT (skein_trim_dialog, hbox31, "hbox31");
  GLADE_HOOKUP_OBJECT (skein_trim_dialog, label98, "label98");
  GLADE_HOOKUP_OBJECT (skein_trim_dialog, label99, "label99");
  GLADE_HOOKUP_OBJECT (skein_trim_dialog, skein_trim_scale, "skein_trim_scale");
  GLADE_HOOKUP_OBJECT_NO_REF (skein_trim_dialog, dialog_action_area6, "dialog_action_area6");
  GLADE_HOOKUP_OBJECT (skein_trim_dialog, skein_trim_cancel, "skein_trim_cancel");
  GLADE_HOOKUP_OBJECT (skein_trim_dialog, skein_trim_ok, "skein_trim_ok");

  return skein_trim_dialog;
}

